<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>厚今的博客</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://zhj0125.github.io/"/>
  <updated>2020-01-15T20:32:52.651Z</updated>
  <id>https://zhj0125.github.io/</id>
  
  <author>
    <name>张厚今</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Hello World</title>
    <link href="https://zhj0125.github.io/2020/01/16/hello-world/"/>
    <id>https://zhj0125.github.io/2020/01/16/hello-world/</id>
    <published>2020-01-15T16:34:55.005Z</published>
    <updated>2020-01-15T20:32:52.651Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><a id="more"></a><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;documentation&lt;/a&gt; for more info. If you get any problems when using Hexo, you can find the answer in &lt;a href=&quot;https://hexo.io/docs/troubleshooting.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;troubleshooting&lt;/a&gt; or you can ask me on &lt;a href=&quot;https://github.com/hexojs/hexo/issues&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>微信小程序——图片识别</title>
    <link href="https://zhj0125.github.io/2020/01/03/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E2%80%94%E2%80%94%E5%9B%BE%E7%89%87%E8%AF%86%E5%88%AB/"/>
    <id>https://zhj0125.github.io/2020/01/03/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E2%80%94%E2%80%94%E5%9B%BE%E7%89%87%E8%AF%86%E5%88%AB/</id>
    <published>2020-01-03T05:55:11.000Z</published>
    <updated>2020-01-17T17:58:02.786Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>我的微信小程序 期末大作业——<strong>基于百度大脑API的图片识别小程序</strong></p><p>具体实现了<strong>动物识别</strong>、<strong>植物识别</strong>、<strong>车辆识别</strong> 三个功能<br>实验源码已经放到了<a href="https://github.com/ZHJ0125/ImageMaster" target="_blank" rel="noopener">我的GitHub</a>，欢迎测试修改 (<a href="https://github.com/ZHJ0125/ImageMaster" target="_blank" rel="noopener">项目地址：https://github.com/ZHJ0125/ImageMaster</a>)<br>下面给大家分享该项目的实验报告😜</p></blockquote><a id="more"></a><h2 id="1-概述"><a href="#1-概述" class="headerlink" title="1 概述"></a>1 概述</h2><h3 id="1-1-课程大作业目的与要求"><a href="#1-1-课程大作业目的与要求" class="headerlink" title="1.1 课程大作业目的与要求"></a>1.1 课程大作业目的与要求</h3><p>课程大作业的目的是：运用在本次课程中学到的知识来指导实践，了解程序设计其实现方法，学会解决实际问题。掌握微信小程序设计的具体步骤与基本方法，针对选定的程序做调研分析。通过课程大作业，提高实践动手技能，培养独立分析分析问题和解决问题的能力。<br>课程大作业的要求：本次课程大作业的选题比较灵活，可以是自主选题，也可以参考课本中的案例自行修改完善，题目要符合课程大作业的要求，并且具备一定的水平和深度。</p><h3 id="1-2-课程大作业简介"><a href="#1-2-课程大作业简介" class="headerlink" title="1.2 课程大作业简介"></a>1.2 课程大作业简介</h3><p>图像识别是指利用计算机对图像进行处理、分析和理解，以识别各种不同模式的目标和对像的技术。在众多的图像识别分支中，拍照识别是一个重要的应用。利用图像识别技术，识别拍摄到的图片内容，已经广泛应用于各类图像识别App中。<br>微信小程序是一种不需要下载安装即可使用的应用，它实现了应用的“触手可及”和“即用即走”，用户扫一扫或搜一下即可打开应用。利用微信小程序使用便捷的特点，结合图片识别应用，本次大作业选定了制作微信小程序的<strong>图片识别应用——ImageMaster</strong>。本应用实现了基于微信小程序的动植物识别和车辆识别，使用便捷，充分发挥了微信小程序“即用即走”的特点。<br>同时，本次大作业项目制作过程只用了<strong>Git进行进度跟踪</strong>，便于进行版本回退和功能更新。</p><h2 id="2-设计思路"><a href="#2-设计思路" class="headerlink" title="2 设计思路"></a>2 设计思路</h2><p>根据初步选定的设计题目，查找相关资料，针对系统所涉及内容，查阅相关背景知识，将设计思路在此做一个概括。<br>本课题需要<strong>实现一个基本的图片识别应用，实现动物识别、植物识别和车辆识别三种主要功能</strong>。查阅的资料主要包括两方面：图片识别API的选择以及微信小程序UI框架的选择。</p><h3 id="2-1-图片识别API"><a href="#2-1-图片识别API" class="headerlink" title="2.1 图片识别API"></a>2.1 图片识别API</h3><p>首先需要查阅图片识别API的相关资料，以便确定课题最终使用哪个API。下面我将在接口能力、是否有参考例程、个人评价三方面简要分析一下常见的几种图片识别API。</p><blockquote><p>百度大脑</p></blockquote><ul><li>接口能力</li></ul><p>表2-1 百度图片识别API接口能力</p><table><thead><tr><th align="center">接口名称</th><th align="center">接口能力简要描述</th></tr></thead><tbody><tr><td align="center">图像主体检测</td><td align="center">识别图像中的主体具体坐标位置。</td></tr><tr><td align="center">通用物体和场景识别高级版</td><td align="center">识别图片中的场景及物体标签，支持10w+标签类型。</td></tr><tr><td align="center">菜品识别</td><td align="center">检测用户上传的菜品图片，返回具体的菜名、卡路里、置信度信息。</td></tr><tr><td align="center">自定义菜品识别</td><td align="center">入库自定义的单菜品图，实现上传多菜品图的精准识别，返回具体的菜名、位置、置信度</td></tr><tr><td align="center">logo商标识别</td><td align="center">识别图片中包含的商品LOGO信息，返回LOGO品牌名称、在图片中的位置、置信度。</td></tr><tr><td align="center">动物识别</td><td align="center">检测用户上传的动物图片，返回动物名称、置信度信息。</td></tr><tr><td align="center">植物识别</td><td align="center">检测用户上传的植物图片，返回植物名称、置信度信息。</td></tr><tr><td align="center">果蔬食材识别</td><td align="center">检测用户上传的果蔬类图片，返回果蔬名称、置信度信息。</td></tr><tr><td align="center">地标识别</td><td align="center">检测用户上传的地标图片，返回地标名称。</td></tr><tr><td align="center">红酒识别</td><td align="center">识别图像中的红酒标签，返回红酒名称、国家、产区、酒庄、类型、糖分、葡萄品种等信息。</td></tr><tr><td align="center">货币识别</td><td align="center">识别图像中的货币类型，返回货币名称、代码、面值、年份信息，可识别百余种国内外常见货币。</td></tr></tbody></table><ul><li>调用方式<br>API 和 SDK 两种方式，SDK文档包含 Java、PHP、Python、C#、C++、Node语言，有丰富的 Demo。</li></ul><blockquote><p>腾讯AI开放平台</p></blockquote><p>接口包含OCR、人体与人脸识别、物体识别、图片特效、图片识别、敏感信息审核、闲聊机器人、基础文本分析、语义解析、语音识别 等等，有 PHP 参考例程。</p><blockquote><p>华为HiAI</p></blockquote><p>接口包含人脸识别、人体识别、图片识别、图像分辨率、场景识别、文档检测矫正、人像分割、视频语音等等。有详细的开发指南，但是其针对的是 Android 手机平台的开发。</p><blockquote><p>旷世 Face++</p></blockquote><p>接口包含人脸识别、人体识别、证件识别、图像识别，拥有详细的开发指南。<br>综合比较之后，决定采用百度大脑 API平台。</p><h3 id="2-2-微信小程序UI框架"><a href="#2-2-微信小程序UI框架" class="headerlink" title="2.2 微信小程序UI框架"></a>2.2 微信小程序UI框架</h3><p>查阅各种微信小程序UI框架资料，决定使用哪种 UI 框架作为本项目的UI框架。</p><ul><li><p>WeUI</p><ul><li><a href="https://github.com/Tencent/weui-wxss" target="_blank" rel="noopener">项目地址</a></li><li>简介<br>WeUI 是一套同微信原生视觉体验一致的基础样式库，由微信官方设计团队为微信内网页和微信小程序量身设计，令用户的使用感知更加统一。包含button、cell、dialog、 progress、 toast、article、actionsheet、icon等各式元素。</li><li>使用体验<br>毕竟是微信官方提供的UI框架，界面肯定是与微信小程序的适配度最好。但是感觉没有特别的亮点。</li></ul></li><li><p>Vant Weapp</p><ul><li><a href="https://github.com/youzan/vant-weapp" target="_blank" rel="noopener">项目地址</a></li><li>简介<br>Vant Weapp 是有赞移动端组件库 Vant 的小程序版本，两者基于相同的视觉规范，提供一致的 API 接口，助力开发者快速搭建小程序应用。</li><li>使用体验<br>组件分类做得不错，样式也很简洁美观。</li></ul></li><li><p>iView Weapp</p><ul><li><a href="https://github.com/TalkingData/iview-weapp" target="_blank" rel="noopener">项目地址</a></li><li>简介<br>一套高质量的微信小程序 UI 组件库</li><li>使用体验<br>界面简单，没亮点。</li></ul></li><li><p>MinUI</p><ul><li><a href="https://github.com/meili/minui" target="_blank" rel="noopener">项目地址</a></li><li>简介<br>MinUI 是基于微信小程序自定义组件特性开发而成的一套简洁、易用、高效的组件库，适用场景广。覆盖小程序原生框架，各种小程序组件主流框架等，并且提供了专门的命令行工具</li><li>使用体验<br>组件还算齐全，没有亮点。官方Demo还有广告链接。</li></ul></li><li><p>Wux Weapp</p><ul><li><a href="https://github.com/wux-weapp/wux-weapp" target="_blank" rel="noopener">项目地址</a></li><li>简介<br>Wux Weapp 是一套组件化、可复用、易扩展的微信小程序 UI 组件库。UI 样式可配置，拓展灵活，轻松适应不同的设计风格。60多个丰富的组件，能够满足移动端开发的基本需求。</li><li>使用体验<br>没有特别炫酷的效果，但组件齐全。</li></ul></li><li><p>ColorUI</p><ul><li><a href="https://github.com/weilanwl/ColorUI" target="_blank" rel="noopener">项目地址</a></li><li>简介<br>鲜亮的高饱和色彩，专注视觉的小程序组件库。</li><li>使用体验<br>功能齐全，各种组件分类明确。</li></ul></li><li><p>Taro UI</p><ul><li><a href="https://github.com/NervJS/taro-ui" target="_blank" rel="noopener">项目地址</a></li><li>简介<br>一款基于 Taro 框架开发的多端 UI 组件库。基于 Taro 开发 UI 组件一套组件，可以在微信小程序，支付宝小程序，百度小程序，H5 多端适配运行（ReactNative 端暂不支持）。提供友好的 API，可灵活的使用组件。</li><li>使用体验<br>界面简介，功能丰富。</li></ul></li></ul><blockquote><p>经过亲自体验各种UI框架的官方Demo，最后感觉 Taro UI 使我印象很深刻。界面简洁，组件分类明确。我起初决定使用 Taro UI 框架，但是在项目进行到UI设计阶段，发现Taro使用有些许难度，为简化开发过程，最终使用了微信小程序的官方UI框架——WeUI框架。</p></blockquote><h2 id="3-设计方案"><a href="#3-设计方案" class="headerlink" title="3 设计方案"></a>3 设计方案</h2><p>在需求分析的基础上，查阅资料，对在小程序设计中可能用到的相关技术做一定的调研分析，做一个概要性的描述。<br>因为微信小程序本身就是联网的应用平台，因此在微信小程序平台进行图片识别，就不必担心网络连接问题。从源头上追溯，实现图片识别需要用户首先上传图片或拍摄图片，需要解决<strong>图片上传问题</strong>；之后发送API请求时，图片需要作为请求的参数，需要解决<strong>图片转码的问题</strong>；最后API请求调用成功后，需要将识别的数据输出，就涉及<strong>数据处理</strong>以及<strong>UI界面设计的问题</strong>。通过解决关键的“图片上传”、“图片转码”、“API调用”、“界面设计”这几个问题，就可以实现基本的图片识别小程序了。</p><h2 id="4-设计过程"><a href="#4-设计过程" class="headerlink" title="4 设计过程"></a>4 设计过程</h2><p>根据初步选定的课程大作业程序设计题目，查找相关资料，结合课本中的案例以及前期的学习，整理设计过程。</p><p><img src="https://img-blog.csdnimg.cn/20200103124808936.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1pISjEyM0NTRE4=,size_16,color_FFFFFF,t_70#pic_center=500x400" alt="在这里插入图片描述"></p><p>图1 设计过程</p><h3 id="4-1-百度开放平台注册"><a href="#4-1-百度开放平台注册" class="headerlink" title="4.1 百度开放平台注册"></a>4.1 百度开放平台注册</h3><p><img src="https://img-blog.csdnimg.cn/20200103125159157.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1pISjEyM0NTRE4=,size_16,color_FFFFFF,t_70#pic_center=500x450" alt="在这里插入图片描述"></p><p>图4.1 服务条款</p><p>首先登陆百度智能云平台，同意它的服务条款。</p><p>之后填写相关的信息，在控制台概览中创建应用。</p><p><img src="https://img-blog.csdnimg.cn/20200103125254171.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1pISjEyM0NTRE4=,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><p>图4.2 创建新应用</p><p><img src="https://img-blog.csdnimg.cn/20200103125317479.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1pISjEyM0NTRE4=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>图4.3 获取密钥</p><p>现在已经申请好了百度的API接口，下面尝试在微信小程序中进行调用。</p><h3 id="4-2-获取asscee-token"><a href="#4-2-获取asscee-token" class="headerlink" title="4.2 获取asscee_token"></a>4.2 获取asscee_token</h3><p>在百度AI的官方文档中可以看到，这个API接口有两种调用方式，两种不同的调用方式有相同的接口URL地址，区别在于请求方式和鉴权方式不同。下面我将尝试使用微信小程序中常用的POST请求方式，调用该接口。</p><p><img src="https://img-blog.csdnimg.cn/20200103125333573.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1pISjEyM0NTRE4=,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><p>图4.4 调用方式</p><p>在官方文档中可以看到，使用post请求需要用到access_token，所以现在去查看如何获取access_token。</p><p><img src="https://img-blog.csdnimg.cn/20200103125352874.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1pISjEyM0NTRE4=,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><p>图4.5获取Access_Token</p><p>获取access_token需要下个授权的服务器地址发送post请求，使用固定的参数，即可得到服务器返回的json数据。</p><p><img src="https://img-blog.csdnimg.cn/20200103125404948.png#pic_center" alt="在这里插入图片描述"></p><p>图4.6 服务器返回参数</p><p>下面就开始进行小程序的编写，实现access_token的获取。<br>首先，在空的小程序中添加一个按钮，在按钮按下后，调用wx.request方法向服务器发送POST请求。</p><p><img src="https://img-blog.csdnimg.cn/20200103125421877.png#pic_center" alt="在这里插入图片描述"></p><p>图4.7 布局文件</p><p>按钮绑定事件处理函数，这个事件处理函数就是用来发送POST请求的。</p><p><img src="https://img-blog.csdnimg.cn/20200103125438131.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1pISjEyM0NTRE4=,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><p>图4.8 绑定事件</p><p>上面图片就是编写的事件处理函数，利用wx.request方法，请求百度API的URL地址，请求方式按要求是POST方式。然后分别编写了请求完成、请求成功、请求失败的回调函数，目的就是让我能在控制台中看到请求的状态。<br>下面就需要在微信小程序的后台添加合法域名，以便wx.request方法能够正确使用。</p><p><img src="https://img-blog.csdnimg.cn/2020010312545513.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1pISjEyM0NTRE4=,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><p>图4.9 添加域名</p><p>箭头所指的就是百度大脑的请求网址，上面那个URL是以前做地图API添加的，这里没有用到。运行模拟器之后成功获取到了access_token的值。</p><p><img src="https://img-blog.csdnimg.cn/20200103125511352.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1pISjEyM0NTRE4=,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><p>图4.10 获取token</p><p>可以看到，控制台执行了success回调函数，成功返回了access_token。现在Access_token的问题已经解决了。接下来就要尝试去请求百度图片识别的API接口了。<br>通过阅读百度大脑API接口文档，我大概理解了百度API的接口使用方式。看一下下面的API文档的截图就可以了解其流程。</p><p><img src="https://img-blog.csdnimg.cn/20200103125535165.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1pISjEyM0NTRE4=,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><p>图4.11 请求说明</p><p>我们首先需要使用微信封装的request方法请求这个API的URL地址，注意要使用该POST方式。然后这个URL的具体内容就是文档中给出的地址，不同的API接口有不同的请求地址。URL地址需要添加一些参数，如access_token、Content-Type等等。同时，还需要一个image参数作为图片的标识，这个image是将图片转换成了base64编码的格式，也就是将图片传换成了一串字符。<br>再查阅微信小程序wx.request方法就可以知道，image这个参数可以通过小程序的data属性表示。这样，API接口的请求过程就可以在小程序中表示出来了。</p><p><img src="https://img-blog.csdnimg.cn/20200103125601775.png" alt="在这里插入图片描述"></p><p>图4.12 参数说明</p><p>下面尝试在小程序中进行程序编写。<br>首先添加一个变量“token”用来存储我获取到的access_token值，然后将success回调函数修改成下图中的代码。</p><p><img src="https://img-blog.csdnimg.cn/2020010312563252.png#pic_center" alt="在这里插入图片描述"></p><p>图4.13 调用方式</p><p>也就是将token从服务器返回的json数据中提取出来。现在，token已经存储到了变量中。</p><h3 id="4-3-图片上传"><a href="#4-3-图片上传" class="headerlink" title="4.3 图片上传"></a>4.3 图片上传</h3><p>现在有一个问题，<strong>微信小程序怎样获取图片数据呢</strong>？微信常用的方式是将用户的图片文件上传到微信开发者的服务器上，服务器接收到图片数据后再进行相关的处理。不管怎样，都首先需要使用微信提供的接口上传图片文件。那么首先研究一下怎样使用微信的图片上传接口。<br>微信提供了“从本地选择图片或使用相机拍照”的接口“wx.chooseImage”。</p><p><img src="https://img-blog.csdnimg.cn/20200103125653556.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1pISjEyM0NTRE4=,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><p>图4.14 参数说明</p><p>现在尝试使用该接口上传一下图片文件。在逻辑文件中编写图片上传按钮的事件处理函数。</p><p><img src="https://img-blog.csdnimg.cn/20200103125710804.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1pISjEyM0NTRE4=,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><p>图4.15 获取图片</p><p>下面运行小程序，点击上传图片按钮，会弹出系统资源管理器，在里面选择图片文件点击确定，即可成功上传图片文件。在success回调函数中，把上传图片的文件路径放到变量中，再通过控制台显示出来即可。在控制台中显示了图片路径。</p><p><img src="https://img-blog.csdnimg.cn/20200103125733172.png#pic_center" alt="在这里插入图片描述"></p><p>图4.16 控制台信息</p><p>为了确定图片真的已经上传到了微信小程序中，我现在把上传的图片显示在小程序界面中。小程序文档中指出，tempFilePaths可以作为<code>&lt;image&gt;</code>组件的src地址，所以显示图片就很方便了。<br>经过一番调试，该功能终于实现了。首先，在页面布局中添加<code>&lt;image&gt;</code>组件，该组件的src设置为动态变量imageUrl，以便在图片上传后动态改变。之后编写相应的事件处理函数，首先添加一个默认的图片索引地址，将该图片放到向程序工程目录下，使用data属性保存其路径信息。</p><p><img src="https://img-blog.csdnimg.cn/20200103125806408.png#pic_center" alt="在这里插入图片描述"></p><p>图4.17 图片地址</p><p>然后在原有的图片上传事件处理函数的基础上，编写增加代码如下：</p><p><img src="https://img-blog.csdnimg.cn/20200103125830843.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1pISjEyM0NTRE4=,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><p>图4.18 获取图片地址</p><p>画横线的代码是图片动态显示的关键代码。这样，就是实现了图片的上传和动态更新。PS：这部分内容参考课本P132“上传头像”部分。</p><h3 id="4-4-图片格式转化"><a href="#4-4-图片格式转化" class="headerlink" title="4.4 图片格式转化"></a>4.4 图片格式转化</h3><p>好的，现在就可以看一下怎样把图片转换成base64格式的数据了。<br>经过查找资料，发现将图片转换成base64格式的方式也有不少。我是用一种微信提供的文件管理接口实现的。在上传图片的成功回调函数中（此时已经得到了本地图片地址），使用文件系统管理方法，读取本地文件的内容。这里指定读取文件的编码格式为base64，然后通过控制台显示出来就可以了。</p><p><img src="https://img-blog.csdnimg.cn/20200103125851993.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1pISjEyM0NTRE4=,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><p>图4.19 图片转码</p><p>上面截了一下关键位置的代码，这部分代码是放在success回调函数中，因为回调函数中已经获取到了上传图片的本地地址。<br>看一下控制台的信息：</p><p><img src="https://img-blog.csdnimg.cn/20200103125913402.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1pISjEyM0NTRE4=,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><p>图4.20 控制台信息</p><p>可以看到，控制台输出了图片的base64编码值。稍微了解一下base64编码，该编码可以用于HTML环境下的较长信息的标识，只要用于canvas画布的图片显示。它的好处在于，可以在没有上传图片文件的情况下，使用该编码在HTML中插入该图片。这种编码有固定的表示形式：“data:image/jpeg;base64, …..”，也有固定的格式转换格式。具体的内容就不再详细研究了。在我的测试中，上传的原图片大小是20.5KB，转换成base64编码之后的数据大小为54.7KB。</p><h3 id="4-5-API请求"><a href="#4-5-API请求" class="headerlink" title="4.5 API请求"></a>4.5 API请求</h3><p>图片已经准备好了，现在已经可以去调用百度图片识别的API了。下面需要对包括“access_token”、“base64编码”等数据进行整合，并以动物识别为例尝试该API的调用。<br>首先添加识别按钮，然后编写相应的事件处理函数。</p><p><img src="https://img-blog.csdnimg.cn/20200103125930715.png#pic_center" alt="在这里插入图片描述"></p><p>图4.21 识别按钮</p><p>事件处理函数就是要进行API接口调用了。</p><p><img src="https://img-blog.csdnimg.cn/20200103125947987.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1pISjEyM0NTRE4=,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><p>图4.22 识别图片</p><p>上面就是按照百度动物识别API文档的要求，结合小程序wx.request方法的属性写出来的事件处理函数。<br>我在网上搜了一个狗的图片，添加到了小程序文件夹中作为测试图片。运行模拟器进行测试。依次点击“获取access_token”、“上传图片”以及“识别该图片”按钮，在控制台看到API返回的数据。</p><p><img src="https://img-blog.csdnimg.cn/2020010313001545.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1pISjEyM0NTRE4=,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><p>图4.23 接口返回值</p><p>可以看到，在API返回的JSON数据中，标注了识别结果，其中置信度最高的结果是“威尔士柯基”。我特意搜了一下这个“威尔士柯基”，识别结果还是挺准的。<br>还要测试一下非动物图片的识别情况。现在我继续上传一个头像图片进行测试，看看测试结果。可以看到，非动物也是可以被识别出来的，识别结果只有一个高置信度的“非动物”结果。</p><p><img src="https://img-blog.csdnimg.cn/20200103130026994.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1pISjEyM0NTRE4=,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><p>图4.24 非动物识别</p><p>程序做到这里，可以说最大的障碍已经被克服了。目前已经实现了“动物识别”，下面就是逐步实现“植物识别”、“车型识别”等功能就可以了，他们的基本流程是一样的。</p><h3 id="4-6-实现植物识别"><a href="#4-6-实现植物识别" class="headerlink" title="4.6 实现植物识别"></a>4.6 实现植物识别</h3><p>现在来整理一下代码，尝试实现“植物识别”功能。<br>通过阅读API文档可以看出，其实这几种不同的图像识别的接口，只是URL地址不同，其他参数都是一样的。所以我设置了一个变量apiUrl用来存放不同接口的URL地址，为“植物识别”编写一个新的事件处理函数。这个事件处理函数与“动物识别”唯一的不同就是apiUrl不一样罢了。</p><p><img src="https://img-blog.csdnimg.cn/20200103130040233.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1pISjEyM0NTRE4=,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><p>图4.25 植物识别</p><p>可以看到，我把请求接口的URL放到了apiUrl变量中。同时精简了控制台显示的数据，只保留关键的数据。<br>至于图像识别的事件处理函数，只需要把之前的POST请求地址改成用apiUrl表示就可以了。</p><p><img src="https://img-blog.csdnimg.cn/20200103130059359.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1pISjEyM0NTRE4=,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><p>图4.26 识别图片</p><p>可以看到画横线的那句话，就是把POST地址改了一下，使程序的使用范围更广了。同时还要注意到，我精简了控制台的输出信息，只保留置信度最高的结果。<br>现在就可以识别植物了。</p><p><img src="https://img-blog.csdnimg.cn/2020010313011067.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1pISjEyM0NTRE4=,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><p>图4.27 识别植物</p><p>现在控制台简洁多了，而且也能正确显示置信度最高的识别结果了。</p><h3 id="4-7-实现车辆识别"><a href="#4-7-实现车辆识别" class="headerlink" title="4.7 实现车辆识别"></a>4.7 实现车辆识别</h3><p>现在继续做车型识别。现在添加功能就比较简单了，只需修改apiUrl。<br>这时遇到了一个问题，上传图片的大小错误。</p><p><img src="https://img-blog.csdnimg.cn/20200103130123464.png#pic_center" alt="在这里插入图片描述"></p><p>图4.28 控制台信息</p><p>为了方便调试，我将控制台信息输出添加了条件判断语句，如果发生错误就输出错误信息，没有错误就输出识别结果。首先测试了图片大小错误的情况，然后测试了正常的图片，控制台输出的信息如下：</p><p><img src="https://img-blog.csdnimg.cn/20200103130149498.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1pISjEyM0NTRE4=,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><p>图4.29 控制台信息</p><p>这样调试就方便多了。现在来解决图片size的问题。以“车型识别”为例，其图片要求如下：</p><p><img src="https://img-blog.csdnimg.cn/20200103130158445.png#pic_center" alt="在这里插入图片描述"></p><p>图4.30 图片要求</p><p>我刚才上传的“image size error”的图片，其像素为1920px*1080px，符合文档中图片长宽的要求。原图大小为460KB，其编码为base64之后的大小为1.2MB，同样符合要求。这就奇怪了，因为这些参数都是符合文档要求的。<br>之后我又进行了其他测试，换了一张1920px × 1080px的图片，不会报错。所以看起来图片不合适的原因应该是图片大小的问题。然而，当我继续测试使用2048px × 1335px，原图大小为1.5MB的图片时，竟然可以正常识别。所以这张图片报错的原因暂时没有搞清楚。<br>先不管这里了，因为我测试了其他图片，都没有出现问题，只有这一张出现图片大小的问题。就先放一下吧。下面整理一下小程序，优化一下界面。</p><p><img src="https://img-blog.csdnimg.cn/20200103130218887.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1pISjEyM0NTRE4=,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><p>图4.31 界面展示</p><p>上图是初始化界面，调整了“识别图片”按钮和图片之间的相对位置，同时添加了文本框显示提示信息。下面以“动物识别”为例，展示识别效果。可以看到，通过添加文本框，可以直观地显示识别结果，非常方便。</p><p><img src="https://img-blog.csdnimg.cn/20200103130224533.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1pISjEyM0NTRE4=,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><p>图4.32 识别结果</p><p>下面就来编写一下样式文件吧。</p><h3 id="4-8-Taro样式测试"><a href="#4-8-Taro样式测试" class="headerlink" title="4.8 Taro样式测试"></a>4.8 Taro样式测试</h3><ul><li>（1）Taro样式介绍</li></ul><p>样式文件我想尝试使用UI框架编写，经过对比多种UI框架，最终决定使用Taro UI作为我的UI框架使用。以下是Taro官网介绍：<br>Taro 是由京东凹凸实验室打造的多端开发解决方案。现如今市面上端的形态多种多样，Web、ReactNative、微信小程序等各种端大行其道，当业务要求同时在不同的端都要求有所表现的时候，针对不同的端去编写多套代码的成本显然非常高，这时候只编写一套代码就能够适配到多端的能力就显得极为需要。使用 Taro，我们可以只书写一套代码，再通过 Taro 的编译工具，将源代码分别编译出可以在不同端（微信小程序、H5、RN等）运行的代码。<br>下面就按照官网的教程，尝试在本地小程序中使用该框架进行练习。为了防止原有的小程序结构被破坏，首先新建一个小程序作为练习使用。<br>Taro需要使用Node.js，要求版本在v8.x 或以上。但我之前安装的版本是v4.4.3，所以现在先重新安装新版本的Node.js。</p><p><img src="https://img-blog.csdnimg.cn/2020010313025249.png#pic_center" alt="在这里插入图片描述"></p><p>图4.33 版本查看</p><p><img src="https://img-blog.csdnimg.cn/2020010313030748.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1pISjEyM0NTRE4=,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><p>图4.34 安装新版本NodeJs</p><p>经过重新安装，现在已经升级到了最新的长期支持版本V12.13.1。</p><p><img src="https://img-blog.csdnimg.cn/20200103130316921.png#pic_center" alt="在这里插入图片描述"></p><p>图4.35 检查新版本</p><p>下面开始项目初始化安装。</p><ul><li>（2）使用前的准备</li></ul><p>首先安装Taro脚手架工具，这里需要使用npm包管理工具进行安装。</p><p><img src="https://img-blog.csdnimg.cn/20200103130329823.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1pISjEyM0NTRE4=,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><p>图4.36 安装脚手架</p><p>之后需要使用Yarn依赖管理工具安装相应的依赖，先来安装Yarn。对于Windows系统，可以下载官方提供的安装器进行安装。安装Taro完成后，可以使用命令安装相应的依赖。</p><p><img src="https://img-blog.csdnimg.cn/20200103130346270.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1pISjEyM0NTRE4=,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><p>图4.37 安装依赖</p><ul><li>（3） 安装项目模板<br>现在到小程序工程目录下，进行Taro模板的创建。这里注意,需要提前安装python2版本。</li></ul><p><img src="https://img-blog.csdnimg.cn/20200103131026864.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1pISjEyM0NTRE4=,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><p>图4.38 安装模板</p><p>现在模板安装完成了，可以进行模块引入了。</p><ul><li>（4） 引入Taro模块</li></ul><p>下面进行taro模块的导入，需要使用npm本地编译taro模块。</p><p><img src="https://img-blog.csdnimg.cn/20200103131036376.png#pic_center" alt="在这里插入图片描述"></p><p>图4.39 编译模块</p><p>编译完成后，我发现taro工程的目录结构与微信小程序的工程结构不一样。而且taro的样式文件编写的格式也不是wxss格式，这就导致我还要学习一些其他的样式格式规则才能上手编写taro。为了尽快完成小程序，我转向了使用WeUI框架。</p><h3 id="4-9-WeUI样式测试"><a href="#4-9-WeUI样式测试" class="headerlink" title="4.9 WeUI样式测试"></a>4.9 WeUI样式测试</h3><ul><li>（1） WeUI介绍</li></ul><p>WeUI 是一套与微信原生 UI 一致的 UI 库，核心文件是 weui.css，只需要获取到该文件，然后在页面中引入，即可使用 WeUI 的组件。首先到其GitHub网站下载源代码，新建一个工程文件用来进行测试和修改。在微信开发者工具中打开该工程。</p><p><img src="https://img-blog.csdnimg.cn/20200103131103801.png#pic_center" alt="在这里插入图片描述"></p><p>图4.40 工程目录</p><p>此时模拟器中就可以查看到WeUI框架的各种组件样式。</p><p><img src="https://img-blog.csdnimg.cn/20200103131115472.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1pISjEyM0NTRE4=,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><p>图4.41 样式展示</p><ul><li>（2） 样例编写</li></ul><p>下面来研究一下WeUI是怎样组织样式编写的。<br>以Grid样式为例，先看一下他的效果。</p><p><img src="https://img-blog.csdnimg.cn/20200103131129586.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1pISjEyM0NTRE4=,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><p>图4.42 gird样式效果</p><p>再看一下它的布局文件。</p><p><img src="https://img-blog.csdnimg.cn/20200103131139929.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1pISjEyM0NTRE4=,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><p>图4.43 布局文件</p><p>可以看到，他是直接使用了WeUI提供的class，利用wx:for循环实现Grid组件的控制。而逻辑文件中给出了grids变量数组的数据，从0到8表示循环9次，显示9个Grid宫格。</p><p><img src="https://img-blog.csdnimg.cn/20200103131150146.png#pic_center" alt="在这里插入图片描述"></p><p>图4.44 Grid逻辑文件</p><p>现在尝试将该样式移植到我的小程序中。移植样式最关键的就是它的weui.wxss，按照教程，可以使用外联样式引入的方式将改样式文件引入到项目中。<br>首先将style文件夹整体复制到我的工程目录中，然后在全局样式中导入weui的样式文件。</p><p><img src="https://img-blog.csdnimg.cn/20200103131159582.png#pic_center" alt="在这里插入图片描述"></p><p>图4.45 导入样式</p><p>之后创建一个新的页面用来测试样式内容，并将其页面作为默认显示的页面。</p><p><img src="https://img-blog.csdnimg.cn/20200103131213306.png#pic_center" alt="在这里插入图片描述"></p><p>图4.46 创建新页面</p><p>之后就可以分别在新创建的页面中编写grid布局和逻辑文件，内容与示例代码一样。这样效果就与示例代码相似了。<br>官方例程中Grid的九个组件，是由<code>&lt;navigator&gt;</code>组件组成的。<code>&lt;navigator&gt;</code>组件用于实现页面之间的跳转，而我想要通过button组件实现用户选择不同类型图片的功能，所以需要使用button组件。下面再测试一下button组件的使用。<br>首先是从官方历程中抽取出我们需要的组件。</p><p><img src="https://img-blog.csdnimg.cn/20200103131223421.png#pic_center" alt="在这里插入图片描述"></p><p>图4.47 组件布局</p><p>现在就需要移植一下样式文件了。在例程样式文件中找到”weui-btn”、”class”、”page__bd”、”page__bd__spacing”的文件内容，复制到本页面的样式文件中即可。最后实现的效果如下图所示。</p><p><img src="https://img-blog.csdnimg.cn/20200103131239460.png#pic_center" alt="在这里插入图片描述"></p><p>图4.48 button效果</p><p>下面尝试将原先的逻辑功能与样式结合起来。首先将样式文件复制到index.wxss文件中，然后将原先的button组件的样式改成测试时的样式。<br>于是模拟器中的样式就改为如下图所示：</p><p><img src="https://img-blog.csdnimg.cn/20200103131249668.png#pic_center" alt="在这里插入图片描述"></p><p>图4.49 按钮样式</p><p>下面修改标题文本样式，将WeUI的标题文本样式移植到我的程序中。</p><p><img src="https://img-blog.csdnimg.cn/20200103131301971.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1pISjEyM0NTRE4=,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><p>图4.50 标题样式</p><p>下面我想将这三个上传图片的按钮进行水平均匀排布，找到按钮样式相关的样式文件，修改后的样式如下图所示。</p><p><img src="https://img-blog.csdnimg.cn/20200103131308343.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1pISjEyM0NTRE4=,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><p>图4.51 按钮样式修改</p><p>之后，我又修改了上传按钮和文字输出按钮的样式，添加了提示图片和提示信息。最终的样式如下图所示。</p><p><img src="https://img-blog.csdnimg.cn/20200103131327912.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1pISjEyM0NTRE4=,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><p>图4.52 最终样式</p><h2 id="5-关键问题"><a href="#5-关键问题" class="headerlink" title="5 关键问题"></a>5 关键问题</h2><p>针对完成大作业过程中遇到的问题，分析描述在此过程中的关键问题，如重点难点等。<br>本次大作业“微信小程序的图片识别”程序实现过程中，重点问题是“图片上传”、“图片转码”、“API调用”以及“界面设计”。其中图片上传主要使用了微信小程序中的wx.chooseImage方法；图片转码使用wx.getFileSystemMangaer方法解决；API调用使用wx.request方法实现；界面设计使用了微信小程序的官方UI框架实现。</p><h2 id="6-使用说明"><a href="#6-使用说明" class="headerlink" title="6 使用说明"></a>6 使用说明</h2><p>提供微信小程序体验版的访问方式(小程序码)。</p><p><img src="https://img-blog.csdnimg.cn/20200103135137907.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1pISjEyM0NTRE4=,size_16,color_FFFFFF,t_70#pic_center=600x180" alt="在这里插入图片描述"></p><p>图6.1 小程序码</p><p>下面给出完成的微信小程序的使用说明。使用体验版微信小程序，在自己的手机上进行测试。下面将测试过程及截图展示如下。</p><blockquote><p>（1）上传图片</p></blockquote><p>用户进入小程序后，首先需要通过相册或拍照，上传需要识别的图片。</p><p><img src="https://img-blog.csdnimg.cn/20200103131552626.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1pISjEyM0NTRE4=,size_16,color_FFFFFF,t_70#pic_center=330x650" alt="在这里插入图片描述"></p><p>图6.2 上传图片</p><p>以“动物识别”为例，点击“上传动物图片”按钮，进行图片上传。</p><blockquote><p>（2）选择图片</p></blockquote><p>以从相册上传图片为例，点击从相册上传图片按钮，在相册中选择想要识别的图片。</p><p><img src="https://img-blog.csdnimg.cn/20200103131642305.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1pISjEyM0NTRE4=,size_16,color_FFFFFF,t_70#pic_center=330x650" alt="在这里插入图片描述"></p><p>图6.3 选择图片</p><p><img src="https://img-blog.csdnimg.cn/20200103131710134.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1pISjEyM0NTRE4=,size_16,color_FFFFFF,t_70#pic_center=330x650" alt="在这里插入图片描述"></p><p>图6.4 相册选择</p><blockquote><p>（3）识别图片</p></blockquote><p>上传图片完成后，点击小程序界面的“识别该图片”按钮，进行图片识别。经过短时间的等待，即可显示识别结果。</p><blockquote><p>（4）识别结果</p></blockquote><p>界面下方可以展示图片识别的结果。</p><p><img src="https://img-blog.csdnimg.cn/20200103131737554.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1pISjEyM0NTRE4=,size_16,color_FFFFFF,t_70#pic_center=330x650" alt="在这里插入图片描述"></p><p>图6.5 上传成功</p><p><img src="https://img-blog.csdnimg.cn/20200103131818418.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1pISjEyM0NTRE4=,size_16,color_FFFFFF,t_70#pic_center=330x650" alt="在这里插入图片描述"></p><p>图6.6 识别结果</p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;我的微信小程序 期末大作业——&lt;strong&gt;基于百度大脑API的图片识别小程序&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;具体实现了&lt;strong&gt;动物识别&lt;/strong&gt;、&lt;strong&gt;植物识别&lt;/strong&gt;、&lt;strong&gt;车辆识别&lt;/strong&gt; 三个功能&lt;br&gt;实验源码已经放到了&lt;a href=&quot;https://github.com/ZHJ0125/ImageMaster&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;我的GitHub&lt;/a&gt;，欢迎测试修改 (&lt;a href=&quot;https://github.com/ZHJ0125/ImageMaster&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;项目地址：https://github.com/ZHJ0125/ImageMaster&lt;/a&gt;)&lt;br&gt;下面给大家分享该项目的实验报告😜&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
    
      <category term="实验报告" scheme="https://zhj0125.github.io/tags/%E5%AE%9E%E9%AA%8C%E6%8A%A5%E5%91%8A/"/>
    
      <category term="微信小程序" scheme="https://zhj0125.github.io/tags/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/"/>
    
      <category term="图片识别" scheme="https://zhj0125.github.io/tags/%E5%9B%BE%E7%89%87%E8%AF%86%E5%88%AB/"/>
    
      <category term="API" scheme="https://zhj0125.github.io/tags/API/"/>
    
  </entry>
  
  <entry>
    <title>Ubuntu18.04 编译安装 OpenCV 遇到的问题</title>
    <link href="https://zhj0125.github.io/2019/10/19/Ubuntu18-04-%E7%BC%96%E8%AF%91%E5%AE%89%E8%A3%85-OpenCV-%E9%81%87%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98/"/>
    <id>https://zhj0125.github.io/2019/10/19/Ubuntu18-04-%E7%BC%96%E8%AF%91%E5%AE%89%E8%A3%85-OpenCV-%E9%81%87%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98/</id>
    <published>2019-10-19T10:43:19.000Z</published>
    <updated>2020-01-17T15:56:03.909Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>记录 Ubuntu18.04 编译安装 OpenCV 过程中遇到的问题</p><p>参考的安装教程：<a href="https://www.pyimagesearch.com/2018/05/28/ubuntu-18-04-how-to-install-opencv/" target="_blank" rel="noopener">Ubuntu 18.04: How to install OpenCV by Adrian Rosebrock on May 28, 2018 in OpenCV, Tutorials</a></p></blockquote><a id="more"></a><h2 id="报错1：-fatal-error-boostdesc-bgm-i-No-such-file-or-directory"><a href="#报错1：-fatal-error-boostdesc-bgm-i-No-such-file-or-directory" class="headerlink" title="报错1： fatal error: boostdesc_bgm.i: No such file or directory"></a>报错1： fatal error: boostdesc_bgm.i: No such file or directory</h2><p>报错截图：<br><img src="https://img-blog.csdnimg.cn/20191029181732561.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1pISjEyM0NTRE4=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>报错原因：在编译CMake的时候 <strong>boostdesc_bgm.i</strong> 这个文件就没有下载成功，导致make编译的时候找不到该文件。<br>解决方案：手动下载相关文件。总共需要下载11个文件，我已经将它们上传到了服务器上，<a href="http://47.95.13.239/play/OpenCV/fatal_error/" target="_blank" rel="noopener">点击此处可以下载</a>。下载完成后，将他们复制到 <strong>opencv_contrib/modules/xfeatures2d/src/</strong> 文件夹中，重新编译即可。</p><h2 id="报错2：fatal-error-opencv2-xfeatures2d-cuda-hpp-No-such-file-or-directory"><a href="#报错2：fatal-error-opencv2-xfeatures2d-cuda-hpp-No-such-file-or-directory" class="headerlink" title="报错2：fatal error: opencv2/xfeatures2d/cuda.hpp: No such file or directory"></a>报错2：fatal error: opencv2/xfeatures2d/cuda.hpp: No such file or directory</h2><p>报错截图：<br><img src="https://img-blog.csdnimg.cn/20191029181854240.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1pISjEyM0NTRE4=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>错误原因：CMake 默认不支持 https，导致文件下载失败<br>解决方案：在工程目录下查询cuda.hpp文件，将其复制到指定位置。使用find语句进行查询</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find ~ -name "cuda.hpp"</span><br></pre></td></tr></table></figure><p>类似的，对于以下报错，都可以通过查找文件解决。<br><img src="https://img-blog.csdnimg.cn/20191029182255278.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1pISjEyM0NTRE4=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>对于上图的报错，可以通过查找 <strong>nonfree.hpp</strong> ，并将其复制到 <strong>opencv2/xfeatures2d/</strong> 文件夹中即可解决。</p><p>最终安装成功<br><img src="https://img-blog.csdnimg.cn/20191029183719470.png" alt="在这里插入图片描述"></p><p>图.编译完成</p><p><img src="https://img-blog.csdnimg.cn/20191029183734823.png" alt="在这里插入图片描述"></p><p>图.cv模块导入</p><h2 id="其他参考资料"><a href="#其他参考资料" class="headerlink" title="其他参考资料"></a>其他参考资料</h2><ol><li><p><a href="https://zhuanlan.zhihu.com/p/38738976" target="_blank" rel="noopener">Install Opencv3.4.1 on Ubuntu 16.04 喝Caffe第一包</a></p></li><li><p><a href="https://www.twblogs.net/a/5c3353a4bd9eee35b3a52002/zh-cn" target="_blank" rel="noopener">编译OpenCV以及openc_contrib提示缺少boostdesc_bgm.i文件出错的解决</a></p></li><li><p><a href="https://github.com/opencv/opencv_contrib/issues/1301" target="_blank" rel="noopener">fatal error: boostdesc_bgm.i: No such file or directory #1301</a></p></li><li><p><a href="https://www.cnblogs.com/thmx/p/8565530.html" target="_blank" rel="noopener">安装opencv3.4.0报错</a></p></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;记录 Ubuntu18.04 编译安装 OpenCV 过程中遇到的问题&lt;/p&gt;
&lt;p&gt;参考的安装教程：&lt;a href=&quot;https://www.pyimagesearch.com/2018/05/28/ubuntu-18-04-how-to-install-opencv/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Ubuntu 18.04: How to install OpenCV by Adrian Rosebrock on May 28, 2018 in OpenCV, Tutorials&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
    
      <category term="OpenCV" scheme="https://zhj0125.github.io/tags/OpenCV/"/>
    
      <category term="Ubuntu18.04" scheme="https://zhj0125.github.io/tags/Ubuntu18-04/"/>
    
      <category term="日常Debug" scheme="https://zhj0125.github.io/tags/%E6%97%A5%E5%B8%B8Debug/"/>
    
  </entry>
  
  <entry>
    <title>STC11F04E——HC-SR04</title>
    <link href="https://zhj0125.github.io/2019/10/16/STC11F04E%E2%80%94%E2%80%94HC-SR04/"/>
    <id>https://zhj0125.github.io/2019/10/16/STC11F04E%E2%80%94%E2%80%94HC-SR04/</id>
    <published>2019-10-16T12:56:36.000Z</published>
    <updated>2020-01-17T17:19:06.396Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>前几天做了一下电子工艺实习，实现了在数码管上显示温度和时间的功能，<a href="https://blog.csdn.net/ZHJ123CSDN/article/details/102299484" target="_blank" rel="noopener">还写了篇博客</a>。但当时没有注意到，这款PCB还设计了超声波测距的功能。在实现该功能后，我决定不再增改原来的文章，而写下这篇文章描述HC-SR04的控制方法。</p><ol><li>我是一个单片机小白，下面有任何说的不对的地方，恳请各位指正，谢谢。</li><li>我还做了一个使用数码管滚动显示学号的程序，就不再写成博客了，代码放在了GitHub</li></ol><p>我已将该项目上传到GitHub，项目地址为： <a href="https://github.com/ZHJ0125/STC11F04E" target="_blank" rel="noopener">STC11F04E项目</a>。 代码开源，欢迎测试</p></blockquote><a id="more"></a><p>&emsp;&emsp;单片机实验平台简介等信息，请阅读<a href="https://blog.csdn.net/ZHJ123CSDN/article/details/102299484" target="_blank" rel="noopener">上一篇文章</a>。</p><h2 id="一、HC-SR04"><a href="#一、HC-SR04" class="headerlink" title="一、HC-SR04"></a>一、HC-SR04</h2><h3 id="1-1-简介"><a href="#1-1-简介" class="headerlink" title="1.1 简介"></a>1.1 简介</h3><p>&emsp;&emsp;HC-SR04超声波测距模块提供2cm~4m的非接触式测距功能，测距精度可达3mm。</p><h3 id="1-2-电气参数"><a href="#1-2-电气参数" class="headerlink" title="1.2 电气参数"></a>1.2 电气参数</h3><table><thead><tr><th>电气参数</th><th>HC-SR04模块</th></tr></thead><tbody><tr><td>工作电压</td><td>DC 5V</td></tr><tr><td>工作电流</td><td>15mA</td></tr><tr><td>工作频率</td><td>40Hz</td></tr><tr><td>最远射程</td><td>4m</td></tr><tr><td>最近射程</td><td>2cm</td></tr><tr><td>测量角度</td><td>15°</td></tr><tr><td>输入触发信号</td><td>10us的TTL高电平脉冲</td></tr><tr><td>输出回响信号</td><td>输出TTL高电平，时间与射程成正比</td></tr><tr><td>规格尺寸</td><td>45×20×15mm</td></tr></tbody></table><h3 id="1-3-时序图"><a href="#1-3-时序图" class="headerlink" title="1.3 时序图"></a>1.3 时序图</h3><p><img src="https://img-blog.csdnimg.cn/20191010212059345.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1pISjEyM0NTRE4=,size_16,color_FFFFFF,t_70#pic_center=500x250" alt="在这里插入图片描述"></p><p>图1 HC-SR04时序图</p><p>通过阅读时序图可以看出HCSR04的工作原理：</p><blockquote><ol><li>采用IO口TRIG触发测距，给至少10us的高电平信号</li><li>模块自动发送8个40khz的方波，自动检测是否有信号返回</li><li>有信号返回，通过IO口ECHO输出一个高电平，高电平持续的时间就是超声波从发射到返回的时间</li><li>测试距离 = (高电平时间 * 声速(340M/S)) / 2</li></ol></blockquote><p>&emsp;&emsp;通过阅读时序图和工作原理，可以了解到：当单片机给TRIG端口一个 &gt;10us 的高电平信号之后，就触发了HC-SR04传感器。此时，HCSR04会自动发出8个4KHz的方波信号，同时自动检测是否有方波信号返回。如果传感器接收到了信号回复，就会通过ECHO输出一个高电平的回响信号，而这个回响信号持续的时间就是超声波从发出到返回所用的时间。得到这个回响时间(t)之后，将其乘以超声波声速(v)，就是超声波从发出到接收所含经过的路程(s)。这个路程除以2，就是传感器到被测物体之间的距离。</p><p>&emsp;&emsp;虽然时序看起来比较简单，但其实控制它的重点，是对单片机定时器/计时器的控制。为什么呢？因为回响信号输出时间的计算需要用到定时器。因为第一次使用计时器，我大致了解了一下单片机定时器/计时器的使用方式。</p><ul><li>1个机器周期 = 12个晶振周期。即 $\text{T}_M =\dfrac{12}{\text{f}_\text{osc}}$</li></ul><blockquote><p>$\text{T}_M$ 表示机器周期<br>$\text{f}_\text{osc}$表示系统晶振的频率</p></blockquote><ul><li>定时时间 = 计数值 x 机器周期。$\text{T}_C=X×\text{T}_M$</li></ul><blockquote><p>$\text{T}_C$  表示定时时间<br>$X$  表示计数器计的个数</p></blockquote><p>在STC官方手册里指出：</p><blockquote><p>&emsp;&emsp;STC11/10xx系列单片有2个定时器，定时器0和定时器1，与传统8051的定时器完全兼容，也可以设置为1T模式，当在定时器1做波特率发生器时，定时器0可以当两个8位定时器用。<br>&emsp;&emsp;STC11/10xx系列单片机是1T的单片机，为兼容传统8051，定时器0和定时器1复位后是传统12T的速度，即12分频，这是为了兼容传统 。但也可不进行12分频，通过设置新增的特殊功能寄存器AUXR ,可以将T0,T1设置为1T。普通111条机器指令是固定的，快3到24倍，无法改变。</p></blockquote><p>&emsp;&emsp;也就是说，我这款单片机在上电之后，就默认初始化成了12分频的模式(可以通过AUXR调整分频模式)，即 $\text{T}_M =\dfrac{12}{\text{f}_\text{osc}}$。通过该公式即可算出晶振一次所消耗的时间。为了保证计数范围，需要设置TMOD计时方式控制寄存器，使用定时器0计时方式1，也就是用两个8位的组成一个16位的计时器。现在知道了这些知识，就可以着手编写程序了。</p><h2 id="二、程序编写"><a href="#二、程序编写" class="headerlink" title="二、程序编写"></a>二、程序编写</h2><p>&emsp;&emsp;下面同样只列出主要的测距程序，项目工程文件已上传至GitHub，<a href="https://github.com/ZHJ0125/STC11F04E" target="_blank" rel="noopener">STC11F04E项目</a>。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**********************************************************</span></span><br><span class="line"><span class="comment">*  函数名称：超声波测距函数</span></span><br><span class="line"><span class="comment">*  修改日期：2019-10-9</span></span><br><span class="line"><span class="comment">*  修改人：ZhangHJ</span></span><br><span class="line"><span class="comment">*  说明：1. 采用IO口TRIG触发测距，给至少10us的高电平信号</span></span><br><span class="line"><span class="comment">*        2. 模块自动发送8个40khz的方波，自动检测是否有信号返回</span></span><br><span class="line"><span class="comment">*        3. 若有信号返回，通过IO口ECHO输出一个高电平，高电平持续的时间就是超声波从发射到返回的时间</span></span><br><span class="line"><span class="comment">*        4. 测试距离 = (高电平时间*声速(340M/S))/2</span></span><br><span class="line"><span class="comment">***********************************************************/</span></span><br><span class="line"><span class="function"><span class="keyword">float</span> <span class="title">GetDistance</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">float</span> dist = <span class="number">0.0f</span>;</span><br><span class="line">    uint count = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    TMOD = <span class="number">0x01</span>;                        <span class="comment">// 计时器0方式1 (16位计数器,TL0、TH0全用)</span></span><br><span class="line">    TH0 = TL0 = <span class="number">0</span>;                      <span class="comment">// 装入初值</span></span><br><span class="line">    Trig = <span class="number">1</span>;                           <span class="comment">// 打开触发</span></span><br><span class="line">    delay_12us();                       <span class="comment">// 延时一会儿,保证延时10us时间</span></span><br><span class="line">    Trig = <span class="number">0</span>;                           <span class="comment">// 关闭触发</span></span><br><span class="line">    <span class="keyword">while</span>(!Echo);                       <span class="comment">// 测距过程中</span></span><br><span class="line">    TR0 = <span class="number">1</span>;                            <span class="comment">// 打开中断</span></span><br><span class="line">    <span class="keyword">while</span>(Echo);                        <span class="comment">// 等待输出电平结束</span></span><br><span class="line">    TR0 = <span class="number">0</span>;                            <span class="comment">// 关闭中断</span></span><br><span class="line">    count = (TH0 &lt;&lt; <span class="number">8</span>) | TL0;           <span class="comment">// 读取16位计时器里的数字</span></span><br><span class="line">    dist = CYCLE * count * <span class="number">0.017</span>;       <span class="comment">// 0.017cm/us</span></span><br><span class="line">    <span class="keyword">return</span> dist;                        <span class="comment">// 返回值是一个浮点型数据</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol><li>首先设置TMOD定时计数器工作模式寄存器，将其设置成计时器0，工作方式1，表示使用的是两个8位的寄存器计数，高八位是TH0，低八位是TL0。将其装入初值为0。</li><li>接着设置Trig触发输入端为高电平，延时12us确保触发成功，然后将其重置为0。此时，传感器已经开始工作。</li><li>等待回响输入端置为低电平，保证记录一次完整的回响信号时间。</li><li>设置TR0为1，打开中断计时器，开始计数。</li><li>当回响信号为高电平时，一直计数，直到回响信号重新回到低电平，关闭计时器。</li><li>现在两个8位的计时器已经记录好数值了，通过移位操作，将高八位和低八位组成16位变量count。</li><li>通过上面分析的公式，可以算出传感器到被测物体之间的距离。</li><li>最后返回一个表示距离的浮点数据。</li></ol><p>&emsp;&emsp;其中需要注意的是，计算距离的公式中，需要用到每次计数器计数的时间，也就是上面分析过的一个机器周期。在程序起始位置进行机器周期的宏定义：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> FOSC 11059200L                  <span class="comment">// 晶振频率11.0592MHz(s)</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> CYCLE (12000000.0/FOSC)         <span class="comment">// 系统机器周期(us)</span></span></span><br></pre></td></tr></table></figure><blockquote><p>FOSC   ： 表示系统晶振频率，我的单片机使用的是11.0592MHz的晶振，所以定义为11059200L<br>CYCLE ：表示机器周期，按照之前的公式， 12/FOSC  即为系统周期(单位为秒)，再乘以$\text{10}^6$，就是以us为单位的机器周期。</p></blockquote><p>&emsp;&emsp;通过数码管显示函数，格式化控制该函数返回的浮点数值，即可实现测距的结果显示。</p><h2 id="三、程序测试"><a href="#三、程序测试" class="headerlink" title="三、程序测试"></a>三、程序测试</h2><p>&emsp;&emsp;因为超声波模块需要一个比较稳定的测试环境，所以我做了一个超声波模块测距装置。利用游标卡尺得到正确的距离数值(实际值)，与单片机数码管显示的数值(测试值)进行比较，可以得出超声波测距装置是否准确。</p><p><img src="https://img-blog.csdnimg.cn/20191016201730216.JPG?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1pISjEyM0NTRE4=,size_16,color_FFFFFF,t_70#pic_center=1000x700" alt="在这里插入图片描述"></p><p>图2 超声波测距装置</p><p>上图中，可以看出游标卡尺的数值大概是15cm左右，单片机显示的数值也在15.0附近（单位：cm）。现在使用示波器，测量一下Echo回响信号的高电平时间，如下图3所示。</p><p><img src="https://img-blog.csdnimg.cn/20191016203435654.JPG?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1pISjEyM0NTRE4=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>图3 示波器测量回响信号时间</p><p> &emsp;&emsp;可以看到。高电平时间 $\Delta x$ 为872.0us，这样按照公式算一下距离：</p><blockquote><p>距离 = 回响信号时间(us) * 0.034(cm/us) ÷ 2<br>&emsp;&emsp; = 872(us) * 0.017(cm/us)<br>&emsp;&emsp; = 14.824(cm)</p></blockquote><p>&emsp;&emsp;手动计算的数值与单片机上的数值接近，但并不是完全相等，原因是：这一次上升沿的时间也许并不是我们此次单片机显示的时间对应的高电平。。有点绕嘴。因为示波器上的这一段高电平，是我在好几个周期的高电平中，随便挑的一个高电平，与单片机显示的数值就近就是正常的了。应该说清楚了吧?</p><p><a href="http://47.95.13.239/Study/Microcomputer/STC11F04E/Video/Show_video/07_HC-SR04.MP4" target="_blank" rel="noopener">点击此处</a>查看演示视频</p><h2 id="四、改进"><a href="#四、改进" class="headerlink" title="四、改进"></a>四、改进</h2><p>&emsp;&emsp;超声波测距还有很多改进的空间，比如，为了保持测试数据的稳定，可以通过求平均值的方式进行改进。另外中断计时器应该还可以进行改进。。。<br>&emsp;&emsp;先写到这里吧，以后如果再有好的想法再来记录。</p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;前几天做了一下电子工艺实习，实现了在数码管上显示温度和时间的功能，&lt;a href=&quot;https://blog.csdn.net/ZHJ123CSDN/article/details/102299484&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;还写了篇博客&lt;/a&gt;。但当时没有注意到，这款PCB还设计了超声波测距的功能。在实现该功能后，我决定不再增改原来的文章，而写下这篇文章描述HC-SR04的控制方法。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;我是一个单片机小白，下面有任何说的不对的地方，恳请各位指正，谢谢。&lt;/li&gt;
&lt;li&gt;我还做了一个使用数码管滚动显示学号的程序，就不再写成博客了，代码放在了GitHub&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;我已将该项目上传到GitHub，项目地址为： &lt;a href=&quot;https://github.com/ZHJ0125/STC11F04E&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;STC11F04E项目&lt;/a&gt;。 代码开源，欢迎测试&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
    
      <category term="STC11F04E" scheme="https://zhj0125.github.io/tags/STC11F04E/"/>
    
      <category term="单片机外设" scheme="https://zhj0125.github.io/tags/%E5%8D%95%E7%89%87%E6%9C%BA%E5%A4%96%E8%AE%BE/"/>
    
      <category term="电子工艺实训" scheme="https://zhj0125.github.io/tags/%E7%94%B5%E5%AD%90%E5%B7%A5%E8%89%BA%E5%AE%9E%E8%AE%AD/"/>
    
  </entry>
  
  <entry>
    <title>STC11F04E——电子工艺实习</title>
    <link href="https://zhj0125.github.io/2019/10/07/STC11F04E%E2%80%94%E2%80%94%E7%94%B5%E5%AD%90%E5%B7%A5%E8%89%BA%E5%AE%9E%E4%B9%A0/"/>
    <id>https://zhj0125.github.io/2019/10/07/STC11F04E%E2%80%94%E2%80%94%E7%94%B5%E5%AD%90%E5%B7%A5%E8%89%BA%E5%AE%9E%E4%B9%A0/</id>
    <published>2019-10-07T05:49:13.000Z</published>
    <updated>2020-01-17T17:40:27.914Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>这几天做了一下电子工艺实习，焊接了PCB然后烧写了相应的程序，现在将实验过程记录下来。</p><p>声明1：我是一个单片机小白，下面有任何说的不对的地方，恳请各位指正，谢谢。<br>声明2：我将控制位选的4个三极管更换了，<del>程序由原来的位选高电平选中，换成了位选低电平选中</del>，在此声明。<br>声明3：这款PCB还实现了超声波测距、数码管滚动显示学号等功能，请见<a href="https://blog.csdn.net/ZHJ123CSDN/article/details/102490823" target="_blank" rel="noopener">另一篇博客</a>，代码详见GitHub</p><p>我已将该项目上传到GitHub，项目地址为： <a href="https://github.com/ZHJ0125/STC11F04E" target="_blank" rel="noopener">STC11F04E项目</a>。 代码开源，欢迎测试</p></blockquote><a id="more"></a><h2 id="一、实验平台介绍"><a href="#一、实验平台介绍" class="headerlink" title="一、实验平台介绍"></a>一、实验平台介绍</h2><p>&emsp;&emsp;本次实验使用的PCB是老师自己画的，老师给了一张并不清晰的原理图截图，如下图所示。可以看到，这块PCB能实现三个功能：使用DS1302显示时间、使用DS18B20显示温度以及使用HC-SR04进行超声波测距(原理图上没有画，实际上它是与DS1302复用了IO和2SLCK引脚)，数值显示都是用数码管。实验用到的主控芯片是：STC11F04E</p><p><img src="https://img-blog.csdnimg.cn/20191007123216239.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1pISjEyM0NTRE4=,size_16,color_FFFFFF,t_70#pic_center=1000x600" alt="在这里插入图片描述"></p><p>图1 原理图</p><p>&emsp;&emsp;焊接完成后大概长这样：</p><p><img src="https://img-blog.csdnimg.cn/20191007123405264.JPG?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1pISjEyM0NTRE4=,size_16,color_FFFFFF,t_70#pic_center=300x250" alt="在这里插入图片描述"></p><p>图2 正面</p><p><img src="https://img-blog.csdnimg.cn/20191007123423448.JPG?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1pISjEyM0NTRE4=,size_16,color_FFFFFF,t_70#pic_center=300x250" alt="在这里插入图片描述"></p><p>图3 背面</p><h2 id="二、功能实现"><a href="#二、功能实现" class="headerlink" title="二、功能实现"></a>二、功能实现</h2><h3 id="2-1-数码管驱动"><a href="#2-1-数码管驱动" class="headerlink" title="2.1 数码管驱动"></a>2.1 数码管驱动</h3><h4 id="2-1-1-原理"><a href="#2-1-1-原理" class="headerlink" title="2.1.1 原理"></a>2.1.1 原理</h4><p>&emsp;&emsp;点亮单个数码管只需要给数码管的公共端接高电平(低电平)，然后再给需要点亮的那一段接低电平(高电平)就可以了，其中“给需要点亮的那一段接低电平(高电平)”的过程称为“段选”。点亮多个数码管时，不仅需要选择点亮哪一段，还需要告诉单片机你选中的是哪个数码管，称为“位选”。数码管静态显示就是通过“位选”选中，然后“段选”点亮某些数码管。动态显示就是位选和段选切换的快一些，快到我们的眼睛察觉不到动态变化，就可以显示任意数字组合了。</p><h4 id="2-1-2-共阴还是共阳"><a href="#2-1-2-共阴还是共阳" class="headerlink" title="2.1.2 共阴还是共阳"></a>2.1.2 共阴还是共阳</h4><p>&emsp;&emsp;点亮每个数码管之前，都需要知道你的数码管是共阴的还是共阳的，这样才能点亮。测试的方法就是给公共端一个高电位，其他端口给个低点位，如果有一段被点亮了，说明这个数码管是共阳的，否则就是共阴的数码管。</p><p><img src="https://img-blog.csdnimg.cn/20191007123440576.JPG?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1pISjEyM0NTRE4=,size_16,color_FFFFFF,t_70#pic_center=600x600" alt="在这里插入图片描述"></p><p>图4 数码管测试</p><p>&emsp;&emsp;上面是利用Arduino的3.3V和GND接口，测试数码管的过程，可以看到本次实验使用的5611BH数码管是共阳的数码管。</p><h4 id="2-1-3-编写驱动程序"><a href="#2-1-3-编写驱动程序" class="headerlink" title="2.1.3 编写驱动程序"></a>2.1.3 编写驱动程序</h4><p>&emsp;&emsp;先看一下这部分的原理图</p><p><img src="https://img-blog.csdnimg.cn/20191007123456798.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1pISjEyM0NTRE4=,size_16,color_FFFFFF,t_70#pic_center=1000x600" alt="在这里插入图片描述"></p><p>图5 数码管部分原理图</p><p>&emsp;&emsp;可以看到原理图中控制位选的是P1.0~P1.3这四个IO口，控制数码管段选的是74HC164这个芯片。</p><p>-（1）位选部分</p><p>&emsp;&emsp;刚才已经测量过，实验使用的数码管是一个共阳的数码管，所以位选选中的话就需要给每一个公共端高电平。公共端连结了一个三极管，三极管的基极连结P1口，射级连结了VCC，集电极连结数码管的公共端。因此，想要选中某一个数码管，只需使位选P1口输出高电平即可。</p><p>-（2）段选部分</p><p>&emsp;&emsp;段选控制部分用到了一个74HC164芯片，这个芯片的特点就是“串行输入、并行输出”，相当于一个8bit的移位寄存器。AB是数据输入端，它会在时钟的上升沿输入数据；CLK是时钟信号输入；MR是复位端，将它接高电平使能；Q0~Q7是数据并行输出端，会将8Bit的数据并行输出。使用这个74HC164芯片，可以减少单片机IO口的占用，仅使用两个IO口就可以控制一个数码管了。</p><p>-（3）程序编写</p><p>&emsp;&emsp;程序就不详细解释了，我在程序里写了很多注释，现在直接贴上主要部分的代码。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**********************************************************</span></span><br><span class="line"><span class="comment">*  函数名称：74HC164发送Byte函数</span></span><br><span class="line"><span class="comment">*  日期：2019-9-29</span></span><br><span class="line"><span class="comment">*  姓名：ZhangHJ</span></span><br><span class="line"><span class="comment">*  说明：74HC164移位寄存器输入一字节数据发给寄存器</span></span><br><span class="line"><span class="comment">***********************************************************/</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">SendByte_74HC164</span><span class="params">(uchar <span class="keyword">byte</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    uchar num,c;</span><br><span class="line">    num=tab[<span class="keyword">byte</span>];</span><br><span class="line">    <span class="keyword">for</span>(c=<span class="number">0</span>; c&lt;<span class="number">8</span>; c++)</span><br><span class="line">    &#123;</span><br><span class="line">        DAT=num&amp;<span class="number">0x01</span>;           <span class="comment">// P3^0 --&gt; 0000 000x</span></span><br><span class="line">        CLK=<span class="number">0</span>;                  <span class="comment">// 制造一个上升沿</span></span><br><span class="line">        CLK=<span class="number">1</span>;</span><br><span class="line">        num&gt;&gt;=<span class="number">1</span>;                <span class="comment">// 将数据发送到寄存器</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>&emsp;&emsp;上面贴出来的是74HC164发送数据的函数，也就是数码管段选的函数。位选控制的话，直接将P1口全部选中就可以了。<br>&emsp;&emsp;这部分做完后，现在板子可以实现4位数码管同时点亮的功能了，如下图所示。拍照可能数码管不太清楚，但实际看着效果可以。</p><p><img src="https://img-blog.csdnimg.cn/20191007125411710.JPG?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1pISjEyM0NTRE4=,size_16,color_FFFFFF,t_70#pic_center=500x400" alt="在这里插入图片描述"></p><p>图6 数码管静态显示效果</p><p>点击查看<a href="http://47.95.13.239/Study/Microcomputer/STC11F04E/Video/Show_video/01_Digital_Tube_Static_Display.MP4" target="_blank" rel="noopener">静态显示</a>的展示效果视频</p><h4 id="2-1-4-数码管动态显示"><a href="#2-1-4-数码管动态显示" class="headerlink" title="2.1.4 数码管动态显示"></a>2.1.4 数码管动态显示</h4><p>&emsp;&emsp;上面做完之后，就已经实现了数码管的静态显示，也就是4个数码管只能同时显示同一个数，要实现动态显示，就需要对数码管的位选进行详细的控制。<br>（1）动态原理<br>&emsp;&emsp;一般来说，动态显示的流程是：</p><blockquote><p>循环进行：</p><ol><li>关闭位选（位选都不选中）</li><li>开启段选（74HC164向寄存器传送数据）</li><li>开启位选（选中要显示的数码管）</li><li>关闭段选（清空段选数据，防止残影）</li><li>关闭位选（防止残影）</li></ol></blockquote><p>&emsp;&emsp;下面就根据这个顺序写一些数码管的动态显示程序。<br>（2）程序编写<br>&emsp;&emsp;同样只贴出重要的代码，工程文件我上传到了GitHub，会在文末给出。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**********************************************************</span></span><br><span class="line"><span class="comment">*  函数名称：按字节控制数码管动态显示函数</span></span><br><span class="line"><span class="comment">*  日期：2019-9-30</span></span><br><span class="line"><span class="comment">*  姓名：ZhangHJ</span></span><br><span class="line"><span class="comment">*  说明：实现4个数码管显示 1234 的效果</span></span><br><span class="line"><span class="comment">*       数码管引脚低电平有效,首先关闭位选信号,然后给寄存器发送数据(开启段选),</span></span><br><span class="line"><span class="comment">*       开启位选控制并延时一段时间以显示数字,最后关闭位选信号清屏.</span></span><br><span class="line"><span class="comment">***********************************************************/</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test_light_byte</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    P1 |= <span class="number">0x0f</span>;                     <span class="comment">// 关掉位选</span></span><br><span class="line">    SendByte_74HC164(<span class="number">1</span>);            <span class="comment">// 开启段选</span></span><br><span class="line">    P1 &amp;= <span class="number">0xf7</span>;                     <span class="comment">// 开启位选</span></span><br><span class="line">    delay_ms(DELAY_TIME);           <span class="comment">// 延时显示</span></span><br><span class="line">    P1 |= <span class="number">0x0f</span>;                     <span class="comment">// 关掉位选</span></span><br><span class="line"></span><br><span class="line">    SendByte_74HC164(<span class="number">2</span>);</span><br><span class="line">    P1 &amp;= <span class="number">0xfB</span>;</span><br><span class="line">    delay_ms(DELAY_TIME);</span><br><span class="line">    P1 |= <span class="number">0x0f</span>;</span><br><span class="line"></span><br><span class="line">    SendByte_74HC164(<span class="number">3</span>);</span><br><span class="line">    P1 &amp;= <span class="number">0xfD</span>;</span><br><span class="line">    delay_ms(DELAY_TIME);</span><br><span class="line">    P1 |= <span class="number">0x0f</span>;</span><br><span class="line"></span><br><span class="line">    SendByte_74HC164(<span class="number">4</span>);</span><br><span class="line">    P1 &amp;= <span class="number">0xfe</span>;</span><br><span class="line">    delay_ms(DELAY_TIME);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>&emsp;&emsp;上面的方法是同时控制1Byte的P1口的高低电平，实现位选控制，同样可以直接使用位控制，来控制数P1的某一个端口，下面给出代码。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**********************************************************</span></span><br><span class="line"><span class="comment">*  函数名称：按位控制数码管动态显示函数</span></span><br><span class="line"><span class="comment">*  日期：2019-9-30</span></span><br><span class="line"><span class="comment">*  姓名：ZhangHJ</span></span><br><span class="line"><span class="comment">*  说明：实现4个数码管显示 4321 的效果</span></span><br><span class="line"><span class="comment">*       数码管引脚高电平有效,首先设置各位段选信号,然后给寄存器发送数据</span></span><br><span class="line"><span class="comment">*       延时一段时间实现数字显示,最后清除段选信号清屏.</span></span><br><span class="line"><span class="comment">***********************************************************/</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test_light_bit</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    DPY0 = ON;</span><br><span class="line">    DPY1 = OFF;</span><br><span class="line">    DPY2 = OFF;</span><br><span class="line">    DPY3 = OFF;</span><br><span class="line">    SendByte_74HC164(<span class="number">1</span>);</span><br><span class="line">    delay_ms(DELAY_TIME);</span><br><span class="line">    SendByte_74HC164(<span class="number">10</span>);</span><br><span class="line"></span><br><span class="line">    DPY0 = OFF;</span><br><span class="line">    DPY1 = ON;</span><br><span class="line">    DPY2 = OFF;</span><br><span class="line">    DPY3 = OFF;</span><br><span class="line">    SendByte_74HC164(<span class="number">2</span>);</span><br><span class="line">    delay_ms(DELAY_TIME);</span><br><span class="line">    SendByte_74HC164(<span class="number">10</span>);</span><br><span class="line"></span><br><span class="line">    DPY0 = OFF;</span><br><span class="line">    DPY1 = OFF;</span><br><span class="line">    DPY2 = ON;</span><br><span class="line">    DPY3 = OFF;</span><br><span class="line">    SendByte_74HC164(<span class="number">3</span>);</span><br><span class="line">    delay_ms(DELAY_TIME);</span><br><span class="line">    SendByte_74HC164(<span class="number">10</span>);</span><br><span class="line"></span><br><span class="line">    DPY0 = OFF;</span><br><span class="line">    DPY1 = OFF;</span><br><span class="line">    DPY2 = OFF;</span><br><span class="line">    DPY3 = ON;</span><br><span class="line">    SendByte_74HC164(<span class="number">4</span>);</span><br><span class="line">    delay_ms(DELAY_TIME);</span><br><span class="line">    SendByte_74HC164(<span class="number">10</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>&emsp;&emsp;差不多的流程，同样能实现数码管的动态显示控制。动态显示做完之后，这四个数码管就能显示不同的数字了，效果如下图所示。</p><p><img src="https://img-blog.csdnimg.cn/20191007125933886.JPG?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1pISjEyM0NTRE4=,size_16,color_FFFFFF,t_70#pic_center=500x400" alt="在这里插入图片描述"></p><p>图7 数码管动态显示效果</p><p>点击查看<a href="http://47.95.13.239/Study/Microcomputer/STC11F04E/Video/Show_video/02_Digital_Tube_Dynamic_Display.MP4" target="_blank" rel="noopener">数码管动态显示</a>的效果视频</p><p>&emsp;&emsp;可以看到，在按键按下后，显示的4321是有残影的。这是因为按位操作显示4321的函数，没有严格按照动态显示的顺序进行编写，没有关闭位选。就先这样吧，不再改了。<br>&emsp;&emsp;数码管能做到这里基本就算完事了，接下来进行DS18B20温度传感器的控制。</p><h3 id="2-2-DS18B20-温度传感器驱动"><a href="#2-2-DS18B20-温度传感器驱动" class="headerlink" title="2.2 DS18B20 温度传感器驱动"></a>2.2 DS18B20 温度传感器驱动</h3><h4 id="2-2-1-原理"><a href="#2-2-1-原理" class="headerlink" title="2.2.1 原理"></a>2.2.1 原理</h4><p>&emsp;&emsp;DS18B20是一个常见的温度传感器，特点就是“单总线数据传输”。因为它只有一个数据引脚，要实现单片机之间的数据读取、写入、初始化等操作，时序就非常重要了。非常非常非常重要（重要的事情说三遍）。其他内容看一下资料就好了，资料在我的GitHub里面也有。</p><h4 id="2-2-2-程序编写"><a href="#2-2-2-程序编写" class="headerlink" title="2.2.2 程序编写"></a>2.2.2 程序编写</h4><p>&emsp;&emsp;我们想实现的功能是将DS18B20的温度数值，显示在这4个数码管上。数码管已经玩过了，下面就列举一下DS18B20的驱动程序。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**********************************************************</span></span><br><span class="line"><span class="comment">*  函数名称：发送复位和初始化命令函数 dsinit</span></span><br><span class="line"><span class="comment">*  修改日期：2019-9-9</span></span><br><span class="line"><span class="comment">*  修改人：ZhangHJ</span></span><br><span class="line"><span class="comment">*  说明：1. 对于单片机: 单片机首先发出480-960us的低电平脉冲,</span></span><br><span class="line"><span class="comment">*           释放总线为高电平(上拉电阻拉高),在随后的480us进行检测,</span></span><br><span class="line"><span class="comment">*           如果出现低电平，说明器件应答正常.B</span></span><br><span class="line"><span class="comment">*       2. 对于DS18B20: 上电后就检测是否有480/960us的低电平脉冲,</span></span><br><span class="line"><span class="comment">*           如果有低电平,在总线释放之后，等待15-60us,</span></span><br><span class="line"><span class="comment">*           将电平拉低60-240us,告诉主机已经准备好.</span></span><br><span class="line"><span class="comment">***********************************************************/</span></span><br><span class="line"><span class="function">uchar <span class="title">dsreset</span><span class="params">(<span class="keyword">void</span>)</span>             <span class="comment">// send reset and initialization command</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    uint i;</span><br><span class="line">    DS = <span class="number">0</span>;                     <span class="comment">// 先将端口拉低</span></span><br><span class="line">    i=<span class="number">120</span>;                      <span class="comment">// 维持低电平状态480us~960us</span></span><br><span class="line">    <span class="keyword">while</span>(i&gt;<span class="number">0</span>)i--;</span><br><span class="line">    DS = <span class="number">1</span>;                     <span class="comment">// 然后释放总线(将总线拉高),若DS18B20做出反应,将会将在15us~60us后将总线拉低</span></span><br><span class="line"></span><br><span class="line">    i = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(DS)                   <span class="comment">// 在DS高电平时等待</span></span><br><span class="line">    &#123;</span><br><span class="line">        i++;</span><br><span class="line">        <span class="keyword">if</span>(i &gt; <span class="number">50000</span>)           <span class="comment">// 等待时间大于60us,说明响应失败</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>&emsp;&emsp;上面这个程序是DS18B20的初始化函数，也就是说，DS18B20在于单片机进行通信之前，需要跟单片机告诉一声，单片机于DS18B20之间建立通信连接之后，才能进行整行的通信。这也是单总线通信的特点。<br>&emsp;&emsp;大概的通信过程是：</p><blockquote><ol><li>对于单片机: 单片机首先发出480-960us的低电平脉冲,释放总线为高电平(上拉电阻拉高),在随后的480us进行检测,如果出现低电平，说明器件应答正常。</li><li>对于DS18B20: 上电后就检测是否有480/960us的低电平脉冲,如果有低电平,在总线释放之后，等待15-60us,将电平拉低60-240us,告诉主机已经准备好。</li></ol></blockquote><p>&emsp;&emsp;单片机与DS18B20之间建立通信连接（DS18B20初始化）完成后，单片机想读取DS18B20的寄存器中的数据，还需要写一个读取数据的函数，下面贴出代码。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**********************************************************</span></span><br><span class="line"><span class="comment">*  函数名称：读1bit数据函数</span></span><br><span class="line"><span class="comment">*  修改日期：2019-9-9</span></span><br><span class="line"><span class="comment">*  修改人：ZhangHJ</span></span><br><span class="line"><span class="comment">*  说明：1.首先单片机端口拉低 &gt;1us,</span></span><br><span class="line"><span class="comment">*       2.然后释放总线,拉高总线,</span></span><br><span class="line"><span class="comment">*       3.等待&gt;15微秒，是为了让 DS18B20 数据稳定,</span></span><br><span class="line"><span class="comment">*       4.读取DS数据,</span></span><br><span class="line"><span class="comment">*       5.接下来进行延时等待采样周期完成。</span></span><br><span class="line"><span class="comment">*   详见DS18B20资料2.8.3.1读/写时间片</span></span><br><span class="line"><span class="comment">***********************************************************/</span></span><br><span class="line"><span class="function"><span class="built_in">bit</span> <span class="title">tmpreadbit</span><span class="params">(<span class="keyword">void</span>)</span>            <span class="comment">// read a bit data</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    uint i;</span><br><span class="line">    <span class="built_in">bit</span> dat;                    <span class="comment">// 定义位数据 (dat = 0 or 1)</span></span><br><span class="line">    DS = <span class="number">0</span>;                     <span class="comment">// 先将端口拉低</span></span><br><span class="line">    _nop_();                    <span class="comment">// 延时 2us ,要求至少保持1us</span></span><br><span class="line">    DS = <span class="number">1</span>;                     <span class="comment">// 再将端口拉高</span></span><br><span class="line">    i=<span class="number">8</span>;<span class="keyword">while</span>(i&gt;<span class="number">0</span>)i--;          <span class="comment">// 等待DS数据稳定,要求的至少延时15us以上</span></span><br><span class="line">    dat = DS;                   <span class="comment">// 数据传输</span></span><br><span class="line">    i=<span class="number">15</span>;<span class="keyword">while</span>(i&gt;<span class="number">0</span>)i--;         <span class="comment">// 等待数据采样周期完成,要求不低于60us</span></span><br><span class="line">    <span class="keyword">return</span> (dat);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>&emsp;&emsp;上面这个函数，是单片机读取DS18B20一位数据的函数。这个函数的时序要求很严格，这些操作的时间一定要按要求，否则程序将不能正常运行。函数具体的过程也不说了，注释里都有。现在这个函数是读取1bit数据的函数，要想实现1Byte的读取，只需将这个函数循环8次，加上数据移位操作就可以了，代码就不贴了。<br>&emsp;&emsp;上面已经算是单片机可以读取到DS18B20的数据了，但是DS18B20它是怎样得到温度数值的呢？这涉及到了对DS18B20 的寄存器写指令的操作，举个例子，单片机往DS18B20里面写入一字节的指令0x44，18B20就会进行进行一次温度转换。这些操作指令在DS18B20的手册里面都有，我们也不用记住，到时候直接手册就行。所以现在需要写一个写操作的函数，用来给DS18B20写指令，下面贴出代码。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**********************************************************</span></span><br><span class="line"><span class="comment">*  函数名称：写入1Byte数据函数</span></span><br><span class="line"><span class="comment">*  修改日期：2019-9-11</span></span><br><span class="line"><span class="comment">*  修改人：ZhangHJ</span></span><br><span class="line"><span class="comment">*  说明：1.将对待写入数据dat进行位操作,将dat末位数值赋值给位数据testb</span></span><br><span class="line"><span class="comment">*       2.通过判断testb得到写 0 还是写 1</span></span><br><span class="line"><span class="comment">*       3.若是写 0 操作,将 DS 拉低,进行&gt;60us的延时,再将DS拉高,进行&gt;1us的延时</span></span><br><span class="line"><span class="comment">*       4.若是写 1 操作,将 DS 拉低,进行15~60us的延时,再将DS拉高,进行&gt;60us的延时</span></span><br><span class="line"><span class="comment">*       5.循环执行2、3、4操作8次,写入1字节数据</span></span><br><span class="line"><span class="comment">*   详见18B20资料“2.8.3.1读/写时间片”章节</span></span><br><span class="line"><span class="comment">***********************************************************/</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">tmpwritebyte</span><span class="params">(uchar dat)</span>        <span class="comment">//write a byte to ds18b20</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  uint i;</span><br><span class="line">  uchar j;</span><br><span class="line">  <span class="built_in">bit</span> testb;</span><br><span class="line">  <span class="keyword">for</span>(j=<span class="number">1</span>;j&lt;=<span class="number">8</span>;j++)</span><br><span class="line">  &#123;</span><br><span class="line">    testb = dat&amp;<span class="number">0x01</span>;</span><br><span class="line">    dat = dat&gt;&gt;<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span>(testb)                       <span class="comment">// write 1</span></span><br><span class="line">    &#123;</span><br><span class="line">      DS=<span class="number">0</span>;</span><br><span class="line">      i=<span class="number">8</span>;<span class="keyword">while</span>(i&gt;<span class="number">0</span>)i--;            <span class="comment">// 延时要求15~60us内</span></span><br><span class="line">      DS=<span class="number">1</span>;</span><br><span class="line">      i=<span class="number">15</span>;<span class="keyword">while</span>(i&gt;<span class="number">0</span>)i--;           <span class="comment">// 要求不低于60us</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">      DS = <span class="number">0</span>;                       <span class="comment">// write 0</span></span><br><span class="line">      i=<span class="number">15</span>;<span class="keyword">while</span>(i&gt;<span class="number">0</span>)i--;</span><br><span class="line">      DS = <span class="number">1</span>;</span><br><span class="line">      i++;i++;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>&emsp;&emsp;写操作同样对时序也是非常非常严格，按手册要求才行。具体的过程同样也没啥可说的，注释里也有。这样就可以对DS18B20写入操作命令，指示DS18B20干活了。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**********************************************************</span></span><br><span class="line"><span class="comment">*  函数名称：18B20温度转换完整过程函数</span></span><br><span class="line"><span class="comment">*  修改日期：2019-9-11</span></span><br><span class="line"><span class="comment">*  修改人：ZhangHJ</span></span><br><span class="line"><span class="comment">*  说明：1.首先进行18B20初始化</span></span><br><span class="line"><span class="comment">*       2.进行适当延时</span></span><br><span class="line"><span class="comment">*       3.发送跳过光刻ROM指令</span></span><br><span class="line"><span class="comment">*       4.发送RAM指令,进行温度转换</span></span><br><span class="line"><span class="comment">*       5.读取两个8位数据,放到16位寄存器 temp 中</span></span><br><span class="line"><span class="comment">*       6.将读取到的二进制数据(默认为正数),转换为十进制数据</span></span><br><span class="line"><span class="comment">*       7.返回温度数据</span></span><br><span class="line"><span class="comment">*   详见18B20资料“2.8.3.1存储器操作命令”章节</span></span><br><span class="line"><span class="comment">***********************************************************/</span></span><br><span class="line"><span class="function">uint <span class="title">tmp</span><span class="params">()</span>                          <span class="comment">// get the temperature</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">float</span> tt;</span><br><span class="line">    uchar high,low;</span><br><span class="line">    <span class="comment">//P1 |= 0x0f;</span></span><br><span class="line">    <span class="keyword">while</span>(dsreset() == <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        SendByte_74HC164(<span class="number">0</span>);</span><br><span class="line">        P1 &amp;= <span class="number">0xfB</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">delay</span>(<span class="number">1</span>);</span><br><span class="line">    <span class="comment">//tmpchange();</span></span><br><span class="line">    tmpwritebyte(<span class="number">0xCC</span>);             <span class="comment">// 跳过 ROM 操作</span></span><br><span class="line">    tmpwritebyte(<span class="number">0xBE</span>);             <span class="comment">// 读暂存寄存器</span></span><br><span class="line">    low=tmpread();</span><br><span class="line">    high=tmpread();</span><br><span class="line">    temp=high;</span><br><span class="line">    temp&lt;&lt;=<span class="number">8</span>;                       <span class="comment">// two byte compose a int variable</span></span><br><span class="line">    temp=temp|low;</span><br><span class="line">    tt=temp*<span class="number">0.0625</span>;</span><br><span class="line">    temp=tt*<span class="number">10</span>+<span class="number">0.5</span>;</span><br><span class="line">    <span class="keyword">return</span> temp;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>&emsp;&emsp;上面的函数就是DS18B20温度转换的完整过程，因为涉及到了一些寄存器的操作，温度数值转换的操作，我也没深入研究，也不说啥了。想要知道原理的话可以看一看DS18B20的手册。<br>&emsp;&emsp;现在已经能够实现读取DS18B20温度数值的功能了，只要将温度转换之后的数值，显示到数码管上就完事了。数码管那一部分就不贴代码了，跟动态显示差不太多。效果如下图所示。</p><p><img src="https://img-blog.csdnimg.cn/20191007130258503.JPG?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1pISjEyM0NTRE4=,size_16,color_FFFFFF,t_70#pic_center=500x400" alt="在这里插入图片描述"></p><p>图8 温度显示效果</p><p>点击查看<a href="http://47.95.13.239/Study/Microcomputer/STC11F04E/Video/Show_video/03_DS18B20_Test.MP4" target="_blank" rel="noopener">DS18B20温度传感器</a>测试视频</p><h3 id="2-3-DS1302时钟模块"><a href="#2-3-DS1302时钟模块" class="headerlink" title="2.3 DS1302时钟模块"></a>2.3 DS1302时钟模块</h3><h4 id="2-3-1-原理"><a href="#2-3-1-原理" class="headerlink" title="2.3.1 原理"></a>2.3.1 原理</h4><p>&emsp;&emsp;DS1302是一个常见的时钟芯片，它可以可提供秒、分、时、日、星期、月和年的时间记录，同时还有每月多少天的自动调整，还具有闰年补偿功能。<del>嗯，功能多到我们都用不着哈?。这东西拿来做一个万年历还行，但是我的PCB上面只有4个数码管，一次也显示不全，还不如只用“时分”功能来得方便。</del><br>&emsp;&emsp;DS1302的封装就长这样：</p><p><img src="https://img-blog.csdnimg.cn/2019100712364634.png#pic_center=300x150" alt="在这里插入图片描述"></p><p>图9 DS1302时钟芯片</p><blockquote><p>Vcc2是它的主电源，Vcc1是它的备用电源<br>X1、X2是晶振的输入端<br>SCLK是时钟的输入端<br>CE是片选使能</p></blockquote><p>&emsp;&emsp;==在芯片手册里有要求==，外接的晶振是标准的32.768KHz，按要求外接一个就行了。SCLK接单片机的引脚，因为这个芯片在读写操作时需要进行时钟的控制（在时钟上升沿写入数据；在时钟下降沿读数据），所以接到单片机上给它造上升沿和下降沿。CE是片选使能，在时序图里面可以看到，要进行读写操作时，CE必须要是高电平。低电平的CE会禁止读写操作，终止数据的传输。</p><p><img src="https://img-blog.csdnimg.cn/20191007123655290.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1pISjEyM0NTRE4=,size_16,color_FFFFFF,t_70#pic_center=600x450" alt="在这里插入图片描述"></p><p>图10 DS1302时序图</p><h4 id="2-3-2-程序编写"><a href="#2-3-2-程序编写" class="headerlink" title="2.3.2 程序编写"></a>2.3.2 程序编写</h4><p>&emsp;&emsp;DS1302这个芯片操作还是比较方便的，这个芯片因为是专门用来当时钟的芯片，所以对他的访问也无非就只有“写入初始时间”和“读取时间”。<br>&emsp;&emsp;对于写入初始时间来说，也就是往DS1302寄存器里写入数据而已；对于读取时间来说，需要你提供一个地址，用来告诉单片机你想访问DS1302的哪个寄存器，然后单片机就会去DS1302这个寄存器里面取值，经过数值转换后，就成了我们想要的时间数值。<br>&emsp;&emsp;DS1302的寄存器也有点意思，因为它是专门的时钟芯片，所以寄存器也是很好理解。</p><p><img src="https://img-blog.csdnimg.cn/20191007123710882.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1pISjEyM0NTRE4=,size_16,color_FFFFFF,t_70#pic_center=600x320" alt="在这里插入图片描述"></p><p>图11 DS1302寄存器</p><p>&emsp;&emsp;首先来进行写命令函数的编写，下面贴出代码。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**********************************************************</span></span><br><span class="line"><span class="comment">*  函数名称：DS1302写操作函数</span></span><br><span class="line"><span class="comment">*  日期：2019-10-4</span></span><br><span class="line"><span class="comment">*  姓名：ZhangHJ</span></span><br><span class="line"><span class="comment">*  说明：写操作包含两个参数,add表示要写入的地址;wdata表示要写入的数据</span></span><br><span class="line"><span class="comment">*       1. 读写操作需要先将RST拉高才能进行</span></span><br><span class="line"><span class="comment">*       2. 先写入控制字节,在时钟上升沿串行写入数据</span></span><br><span class="line"><span class="comment">*       3. 再写入数据字节,同样在时钟上升沿写入数据</span></span><br><span class="line"><span class="comment">*       4. 最后拉低RST禁止数据传输</span></span><br><span class="line"><span class="comment">***********************************************************/</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">DS1302Write</span><span class="params">(uchar add,uchar wdata)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    uchar a;</span><br><span class="line">    <span class="comment">//wdata = hex(wdata);       // 转换为BCD码</span></span><br><span class="line">    RST=<span class="number">0</span>;                      <span class="comment">// 拉低RST引脚,终止数据传输</span></span><br><span class="line">    SCLK=<span class="number">0</span>;                     <span class="comment">// 拉低SCLK引脚,清零时钟线</span></span><br><span class="line">    RST=<span class="number">1</span>;                      <span class="comment">// 拉高RST引脚,所有数据传输都要拉高RST脚,启动控制逻辑</span></span><br><span class="line">    <span class="comment">//先写入控制字节</span></span><br><span class="line">    <span class="keyword">for</span>(a=<span class="number">0</span>; a&lt;<span class="number">8</span>; a++)</span><br><span class="line">    &#123;</span><br><span class="line">        IO= add &amp; <span class="number">0x01</span>;         <span class="comment">// IO引脚准备好要写入的1位数据</span></span><br><span class="line">        SCLK=<span class="number">1</span>;                 <span class="comment">// SCLK上升沿,1位数据从IO脚写入,低位先写入</span></span><br><span class="line">        add&gt;&gt;=<span class="number">1</span>;                <span class="comment">// 数据右移1位</span></span><br><span class="line">        SCLK=<span class="number">0</span>;                 <span class="comment">// 拉低SCLK,为下次写入准备,循环8次写入1字节</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//再写入数据字节</span></span><br><span class="line">    <span class="keyword">for</span>(a=<span class="number">0</span>; a&lt;<span class="number">8</span>; a++)</span><br><span class="line">    &#123;</span><br><span class="line">        IO= wdata &amp; <span class="number">0x01</span>;</span><br><span class="line">        SCLK=<span class="number">1</span>;</span><br><span class="line">        wdata&gt;&gt;=<span class="number">1</span>;</span><br><span class="line">        SCLK=<span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    RST=<span class="number">0</span>;                      <span class="comment">// 数据传输完拉低RST</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>&emsp;&emsp;写入数据也是串行写入的，可以依照时序图进行该函数的编写。另外读命令函数也贴出代码。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**********************************************************</span></span><br><span class="line"><span class="comment">*  函数名称：DS1302读操作函数</span></span><br><span class="line"><span class="comment">*  日期：2019-10-4</span></span><br><span class="line"><span class="comment">*  姓名：ZhangHJ</span></span><br><span class="line"><span class="comment">*  说明：读操作只需一个参数,即需要读取的寄存器地址add</span></span><br><span class="line"><span class="comment">*       1. 首先需要将需要读取的地址(1Byte)写入寄存器,在上升沿进行写入操作</span></span><br><span class="line"><span class="comment">*       2. 之后读取该地址中的数据,在下降沿读取数据</span></span><br><span class="line"><span class="comment">*       3. 最后返回读取到的1Byte数据</span></span><br><span class="line"><span class="comment">***********************************************************/</span></span><br><span class="line"><span class="function">uchar <span class="title">DS1302Read</span><span class="params">(uchar add)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    uchar a, rdata=<span class="number">0</span>;</span><br><span class="line">    RST = <span class="number">0</span>;                    <span class="comment">// 拉低RST引脚,终止数据传输</span></span><br><span class="line">    SCLK = <span class="number">0</span>;                   <span class="comment">// 拉低SCLK引脚,清零时钟线</span></span><br><span class="line">    RST = <span class="number">1</span>;                    <span class="comment">// 拉高RST引脚,启动控制逻辑</span></span><br><span class="line">    <span class="comment">//发送控制字节</span></span><br><span class="line">    <span class="keyword">for</span>(a=<span class="number">0</span>; a&lt;<span class="number">8</span>; a++)</span><br><span class="line">    &#123;</span><br><span class="line">        SCLK = <span class="number">0</span>;</span><br><span class="line">        IO = add &amp; <span class="number">0x01</span>;</span><br><span class="line">        SCLK = <span class="number">1</span>;               <span class="comment">// 制造一个上升沿,写入地址</span></span><br><span class="line">        add &gt;&gt;= <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//读1字节数据</span></span><br><span class="line">    <span class="keyword">for</span>(a=<span class="number">0</span>; a&lt;<span class="number">8</span>; a++)</span><br><span class="line">    &#123;</span><br><span class="line">        SCLK = <span class="number">1</span>;</span><br><span class="line">        rdata &gt;&gt;= <span class="number">1</span>;</span><br><span class="line">        SCLK = <span class="number">0</span>;               <span class="comment">// 制造一个下降沿,读取数据</span></span><br><span class="line">        <span class="keyword">if</span>(IO)</span><br><span class="line">        &#123;                       <span class="comment">// 如果读到1</span></span><br><span class="line">            rdata |= <span class="number">0x80</span>;      <span class="comment">// 把最高位置为1,记录到rdata中</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    RST=<span class="number">0</span>;                      <span class="comment">// 拉低RST</span></span><br><span class="line">    <span class="comment">//return dec(d);            // 读取的数据转换成十进制</span></span><br><span class="line">    <span class="keyword">return</span> rdata;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>&emsp;&emsp;读命令也是依照时序图就可以编写出来，方便理解。<br>&emsp;&emsp;现在读写指令都编写完成了，基本上DS1302的功能就可以实现了。其他的数码管显示、初始时间设置等等，就不再说了，直接看GitHub。效果如下图所示。</p><p><img src="https://img-blog.csdnimg.cn/20191007130532344.JPG?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1pISjEyM0NTRE4=,size_16,color_FFFFFF,t_70#pic_center=500x400" alt="在这里插入图片描述"></p><p>图12 时间显示效果</p><p>点击查看<a href="http://47.95.13.239/Study/Microcomputer/STC11F04E/Video/Show_video/04_DS1302.MP4" target="_blank" rel="noopener">DS1302时钟芯片</a>测试视频</p><h3 id="2-4-代码整合"><a href="#2-4-代码整合" class="headerlink" title="2.4 代码整合"></a>2.4 代码整合</h3><p>&emsp;&emsp;现在已经实现了数码管显示、DS1302获取时间、DS18B20获取温度这三个功能了，只要将代码整合一下就能烧到单片机中了。具体的整合过程也不再赘述了，只贴一下最终的主函数。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 主函数功能：默认显示时间(初始化时间为“2019年10月4日18:55:00”),按住INT0按键时,会显示温度</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    uchar a;</span><br><span class="line">    ds1302_init();                          <span class="comment">// DS1302日期初始化</span></span><br><span class="line">    <span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// 时间显示</span></span><br><span class="line">        read_time();                        <span class="comment">// DS1302读取当前时间</span></span><br><span class="line">        Display_Time();                     <span class="comment">// 显示当前时间</span></span><br><span class="line">        <span class="comment">// 按键处理</span></span><br><span class="line">        <span class="keyword">if</span> (KEY == <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">delay</span>(<span class="number">5</span>);</span><br><span class="line">            <span class="keyword">while</span>(KEY == <span class="number">0</span>)                 <span class="comment">// 按键消抖</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="comment">// 温度显示</span></span><br><span class="line">                tmpchange();                <span class="comment">// 首次温度转换</span></span><br><span class="line">                <span class="keyword">for</span>(a=<span class="number">50</span>;a&gt;<span class="number">0</span>;a--)           <span class="comment">// 延时,保持连续显示</span></span><br><span class="line">                &#123;</span><br><span class="line">                    Display_Tmp(tmp());     <span class="comment">// 进行温度转换和数值显示</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>&emsp;&emsp;主函数实现的功能就是，在单片机上电后，进行一次时钟芯片的初始化，设置初始时间，然后循环进行时间的显示。当INT0按键被按下时，会进行温度转换，显示实时温度。</p><p>点击查看<a href="http://47.95.13.239/Study/Microcomputer/STC11F04E/Video/Show_video/05_FinalCode.mp4" target="_blank" rel="noopener">代码整合</a>视频</p><h2 id="三、设想"><a href="#三、设想" class="headerlink" title="三、设想"></a>三、设想</h2><p>&emsp;&emsp;现在单片机能实现两个功能：温度显示、时间显示 。但是时间的显示是通过DS1302时钟芯片来实现的，这就有一些缺点。比如我可能需要在初始化时钟芯片时写入初始化的时间，这就显得不太合适；同时，由于单片机晶振和外部晶振的问题，可能导致时间不准确，过一段时间还得手动校时，这也很不方便。<br>&emsp;&emsp;比较好的解决办法是将单片机联网，在网络获取时间后写入DS1302，每隔一段时间进行一次自动校时，这样就解决了时间不准确的问题。然而单片机自身不能联网，需要通过其他方式接入网络。ESP8266就是一款小巧的WiFi模块，通过单片机与ESP8266的通信，可以将网络时间传输到单片机中。<br>&emsp;&emsp;ESP8266可以通过AT指令的方式，与单片机进行数据通信；同时，它自身的WiFi功能还能通过网络GET请求获取到NTP服务器的精确时间，通过串口传给单片机进行校时。<br>&emsp;&emsp;目前我已实现使用ESP8266获取到网络时间的功能，我是用TTL连接的电脑，用串口助手给ESP8266发送AT指令，通过GET请求获取到了NTP服务器的时间，如下图9所示。<br>&emsp;&emsp;在GET请求到的数据中，可以看到date1就是我们想要的时间，而且还是UTC +8.00的东八区时间，用起来会更方便了。<br>&emsp;&emsp;我现在是使用串口与ESP8266通信，需要实现的单片机与ESP8266的通信，与这种方式差不多，所以实现起来还是可行的。</p><p><img src="https://img-blog.csdnimg.cn/20191007123747515.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1pISjEyM0NTRE4=,size_16,color_FFFFFF,t_70#pic_center=600x450" alt="在这里插入图片描述"></p><p>图13 串口助手</p><h2 id="四、总结"><a href="#四、总结" class="headerlink" title="四、总结"></a>四、总结</h2><p>&emsp;&emsp;以前玩过Arduino、树莓派，现在看来Arduino，它的IDE是很方便，适合初学者；而树莓派因为能搭载Linux所以功能太强大，跟电脑差不多了。还是单片机好玩，因为在学习单片机的过程中，才能真正理解每一个器件是如何工作的，学习工程中需要了解很多底层的知识才能玩转。<br>&emsp;&emsp;单片机一开始上手都不知道怎么烧程序，后来查阅资料之后才慢慢了解。另外就是DS18B20 时序很重要。。。因为我花了很长时间才把它玩起来，让人头大。</p><h2 id="五、资料"><a href="#五、资料" class="headerlink" title="五、资料"></a>五、资料</h2><h2 id="5-1-本项目GitHub地址"><a href="#5-1-本项目GitHub地址" class="headerlink" title="5.1 本项目GitHub地址"></a>5.1 本项目GitHub地址</h2><p><a href="https://github.com/ZHJ0125/STC11F04E" target="_blank" rel="noopener">https://github.com/ZHJ0125/STC11F04E</a></p><h3 id="5-2-参考资料"><a href="#5-2-参考资料" class="headerlink" title="5.2 参考资料"></a>5.2 参考资料</h3><h4 id="5-2-1-74HC164"><a href="#5-2-1-74HC164" class="headerlink" title="5.2.1 74HC164"></a>5.2.1 74HC164</h4><p><a href="http://www.elecfans.com/yuanqijian/yinjiaotu/20180404657229_a.html" target="_blank" rel="noopener">74hc164中文资料汇总（74hc164引脚图及功能_特性参数及典型应用电路） - 全文 - 电子发烧友网</a><br><a href="https://www.wlxmall.com/items/74HC164-cn-1-id-84741.html" target="_blank" rel="noopener">74HC164_中文资料_价格_官方数据手册_STMICROELECTRONICS - 万联芯城</a><br><a href="http://www.51hei.com/mcu/2655.html" target="_blank" rel="noopener">51单片机74HC164串口控制数码管显示</a><br><a href="https://www.iteye.com/blog/yunchow-355124" target="_blank" rel="noopener">74HC164控制数码管显示 - 恶魔的旋律 - ITeye博客</a><br><a href="http://www.baiheee.com/Documents/100816/100816204211.htm" target="_blank" rel="noopener">74HC164驱动程序实例（C语言版子程序或汇编版子程序）-百合电子工作室</a><br><a href="https://lcsc.com/product-detail/STC_STC11F04E_C26845.html" target="_blank" rel="noopener">STC Micro STC11F04E - PDF Datasheet - STC In Stock | lcsc.com</a><br><a href="https://blog.csdn.net/ztm521/article/details/4417455" target="_blank" rel="noopener">74HC164 - ztm521的专栏 - CSDN博客</a></p><h4 id="5-2-2-AT89C2051"><a href="#5-2-2-AT89C2051" class="headerlink" title="5.2.2 AT89C2051"></a>5.2.2 AT89C2051</h4><p><a href="https://www.wlxmall.com/items/at89c2051-24su-cn-2-id-28092.html" target="_blank" rel="noopener">AT89C2051-24SU_引脚图_电路图(2/10)_ATMEL - 万联芯城</a><br><a href="http://www.waveshare.net/shop/AT89C2051-24PC.html" target="_blank" rel="noopener">AT89C2051-24PC 89C2051-24PC 价格</a></p><h4 id="5-2-3-DS18B20"><a href="#5-2-3-DS18B20" class="headerlink" title="5.2.3 DS18B20"></a>5.2.3 DS18B20</h4><p><a href="https://www.cnblogs.com/fengmk2/archive/2007/03/11/670955.html" target="_blank" rel="noopener">单片机练习 - DS18B20温度转换与显示 - MK2 - 博客园</a><br><a href="https://wiki.jikexueyuan.com/project/mcu-tutorial-three/temperature-sensor.html" target="_blank" rel="noopener">16.4 温度传感器 DS18B20 - 单片机教程(三) - 极客学院Wiki</a><br><a href="https://blog.csdn.net/Kk_01110001B/article/details/80720030" target="_blank" rel="noopener">关于DS18B20温度传感器的时序详解及代码分析 - Kk_01110001B的博客 - CSDN博客</a><br><a href="https://blog.csdn.net/feike24/article/details/52357772" target="_blank" rel="noopener">51单片机的几种精确延时 - feike24的博客 - CSDN博客</a></p><h4 id="5-2-4-DS1302"><a href="#5-2-4-DS1302" class="headerlink" title="5.2.4 DS1302"></a>5.2.4 DS1302</h4><p><a href="https://www.iteye.com/blog/hzy3774-1751531" target="_blank" rel="noopener">51单片机操作DS1302时钟芯片 - 柚柚控 - ITeye博客</a><br><a href="https://blog.csdn.net/u013151320/article/details/50221091" target="_blank" rel="noopener">51单片机DS1302实时时钟驱动程序 - Line - CSDN博客</a></p><h4 id="5-2-5-ESP8266"><a href="#5-2-5-ESP8266" class="headerlink" title="5.2.5 ESP8266"></a>5.2.5 ESP8266</h4><p><a href="https://blog.csdn.net/qq_31310793/article/details/77162408" target="_blank" rel="noopener">ESP8266-01 固件更新过程 - qq_31310793的博客 - CSDN博客</a><br><a href="https://www.espressif.com/zh-hans/support/download/other-tools" target="_blank" rel="noopener">工具 | 乐鑫</a><br><a href="https://wiki.aprbrother.com/en/Firmware_For_ESP8266.html" target="_blank" rel="noopener">v1.1.1 · GitBook</a><br><a href="https://lastminuteengineers.com/esp8266-ntp-server-date-time-tutorial/" target="_blank" rel="noopener">使用ESP8266 NodeMCU从NTP服务器获取日期和时间</a><br><a href="https://www.nutsvolts.com/magazine/article/June2016_ESP8266-NTP-Clock" target="_blank" rel="noopener">ESP8266 NTP时钟| 坚果与伏特杂志</a><br><a href="https://www.nutsvolts.com/magazine/article/October2015_Lindley" target="_blank" rel="noopener">认识ESP8266 | 坚果与伏特杂志</a><br><a href="https://www.instructables.com/id/Simplest-ESP8266-Local-Time-Internet-Clock-With-OL/" target="_blank" rel="noopener">带OLED的最简单ESP8266本地时间互联网时钟：4个步骤（带图片）</a><br><a href="https://blog.csdn.net/weixin_42757674/article/details/83009904" target="_blank" rel="noopener">51单片机利用8266获取网络时间 - weixin_42757674的博客 - CSDN博客</a><br><a href="http://www.stcmcu.com/index.htm" target="_blank" rel="noopener">STC: 1T 8051 单片机创新者, ISP/IAP 技术创新者</a><br><a href="https://www.zhihu.com/question/19998995" target="_blank" rel="noopener">三极管是如何导通的？ - 知乎</a></p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;这几天做了一下电子工艺实习，焊接了PCB然后烧写了相应的程序，现在将实验过程记录下来。&lt;/p&gt;
&lt;p&gt;声明1：我是一个单片机小白，下面有任何说的不对的地方，恳请各位指正，谢谢。&lt;br&gt;声明2：我将控制位选的4个三极管更换了，&lt;del&gt;程序由原来的位选高电平选中，换成了位选低电平选中&lt;/del&gt;，在此声明。&lt;br&gt;声明3：这款PCB还实现了超声波测距、数码管滚动显示学号等功能，请见&lt;a href=&quot;https://blog.csdn.net/ZHJ123CSDN/article/details/102490823&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;另一篇博客&lt;/a&gt;，代码详见GitHub&lt;/p&gt;
&lt;p&gt;我已将该项目上传到GitHub，项目地址为： &lt;a href=&quot;https://github.com/ZHJ0125/STC11F04E&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;STC11F04E项目&lt;/a&gt;。 代码开源，欢迎测试&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
    
      <category term="STC11F04E" scheme="https://zhj0125.github.io/tags/STC11F04E/"/>
    
      <category term="电子工艺实训" scheme="https://zhj0125.github.io/tags/%E7%94%B5%E5%AD%90%E5%B7%A5%E8%89%BA%E5%AE%9E%E8%AE%AD/"/>
    
  </entry>
  
  <entry>
    <title>微信小程序——开发基础</title>
    <link href="https://zhj0125.github.io/2019/09/26/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E2%80%94%E2%80%94%E5%BC%80%E5%8F%91%E5%9F%BA%E7%A1%80/"/>
    <id>https://zhj0125.github.io/2019/09/26/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E2%80%94%E2%80%94%E5%BC%80%E5%8F%91%E5%9F%BA%E7%A1%80/</id>
    <published>2019-09-26T14:32:47.000Z</published>
    <updated>2020-01-17T18:12:56.728Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>内容说明:这是微信小程序第一次实验报告<br>本次实验主要实现了三部分内容：开发环境的搭建，开发工具的安装以及比较数字大小的实验案例。在进行实验的过程中，掌握了以下知识内容：</p><ol><li>微信小程序开发环境的搭建</li><li>小程序项目的创建</li><li>页面文件WXML的编写</li><li>页面样式WXSS的编写(元素选择器、尺寸单位、样式引入)</li><li>配置文件JSON的编写(页面级和应用级配置文件的常见配置属性)</li><li>页面逻辑文件JS的编写(生命周期回调函数、页面事件处理函数、组件事件处理函数)</li><li>五种实现页面逻辑的方法(为不同的组件绑定不同的处理函数、为同类型组件绑定相同的处理函数、使用条件表达式、利用条件渲染显示需要的组件、通过表单格式<code>form</code>获取用户输入信息)</li></ol></blockquote><a id="more"></a><h2 id="一、实验原理"><a href="#一、实验原理" class="headerlink" title="一、实验原理"></a>一、实验原理</h2><blockquote><p>实现微信小程序开发环境的搭建，然后创建一个用于实验的小程序项目。<br>分布进行页面文件WXML的编写，页面样式WXSS的编写(元素选择器、尺寸单位、样式引入)，配置文件JSON的编写(页面级和应用级配置文件的常见配置属性)，页面逻辑文件JS的编写(生命周期回调函数、页面事件处理函数、组件事件处理函数)，最后使用五种方式实现页面逻辑(为不同的组件绑定不同的处理函数、为同类型组件绑定相同的处理函数、使用条件表达式、利用条件渲染显示需要的组件、通过表单格式form获取用户输入信息)。</p></blockquote><h2 id="二、实验过程记录"><a href="#二、实验过程记录" class="headerlink" title="二、实验过程记录"></a>二、实验过程记录</h2><h3 id="2-1-开发环境搭建"><a href="#2-1-开发环境搭建" class="headerlink" title="2.1 开发环境搭建"></a>2.1 开发环境搭建</h3><p>首先使用浏览器打开<a href="https://mp.weixin.qq.com" target="_blank" rel="noopener">微信公众号平台</a>，点击“立即注册”按钮，进入注册界面。之后选择注册的账号类型，点击“小程序”，填写小程序的注册登记信息。在“小程序发布流程”界面，可以查看小程序的配置信息和AppID。</p><h3 id="2-2-安装开发工具"><a href="#2-2-安装开发工具" class="headerlink" title="2.2 安装开发工具"></a>2.2 安装开发工具</h3><p>在小程序开发工具的下载界面，下载安装包。按照提示进行开发工具的安装。打开小程序开发工具，出现新建项目的配置界面。选择新建“小程序”项目，修改“项目名”、“目录”等信息，AppID选择测试号即可。点击“新建”按钮即可新建项目。</p><h3 id="2-3-实验案例"><a href="#2-3-实验案例" class="headerlink" title="2.3 实验案例"></a>2.3 实验案例</h3><p>新建的小程序会自动创建“HelloWorld”项目的模板，为了熟悉小程序各个目录的功能，先将所有已创建的文件全部删除，再重新创建。</p><h4 id="2-3-1-创建项目配置文件"><a href="#2-3-1-创建项目配置文件" class="headerlink" title="2.3.1 创建项目配置文件"></a>2.3.1 创建项目配置文件</h4><p>首先创建项目的配置文件app.json，编写小程序的配置信息。如图3.1所示。</p><p><img src="https://img-blog.csdnimg.cn/20190926215221393.png#pic_center" alt="在这里插入图片描述"></p><p>图3.1 小程序初始化配置信息</p><p>使用“ctrl+s”保存文件，开发工具会自动进行编译，并生成所需的页面文件。此时，文件目录如下图3.2所示。</p><p><img src="https://img-blog.csdnimg.cn/20190926215305313.png#pic_center" alt="在这里插入图片描述"></p><p>图3.2 自动生成的页面</p><p>配置文件自动生成了四个文件，分别是主页的逻辑文件“index.js”、主页的配置文件“index.json”、主页的布局文件“index.wxml”以及主页的样式文件“index.wxss”。</p><h4 id="2-3-2-编写页面文件"><a href="#2-3-2-编写页面文件" class="headerlink" title="2.3.2 编写页面文件"></a>2.3.2 编写页面文件</h4><p>在自动创建的index.wxml文件中，已有如图3.3所示的代码文件。此时主界面只显示文件的路径文本信息。</p><p><img src="https://img-blog.csdnimg.cn/20190926215342524.png#pic_center" alt="在这里插入图片描述"></p><p>图3.3 布局文件初始化内容</p><p>现在修改布局文件，使其显示数值比较的界面。修改代码如图3.4所示。</p><p><img src="https://img-blog.csdnimg.cn/20190926215403686.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1pISjEyM0NTRE4=,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><p>图3.4 布局文件内容修改</p><p>此时打开模拟器进行界面的测试，界面显示结果如图3.5所示。</p><p><img src="https://img-blog.csdnimg.cn/2019092621542039.png#pic_center" alt="在这里插入图片描述"></p><p>图3.5 模拟器测试界面1</p><h4 id="2-3-3-编写样式文件"><a href="#2-3-3-编写样式文件" class="headerlink" title="2.3.3 编写样式文件"></a>2.3.3 编写样式文件</h4><p>接下来修改小程序界面的样式，打开index.wxss文件，尝试使用不同的选择器进行样式设置。首先使用element选择器，在index.wxss界面中，为view组件设置样式，代码如图3.6所示。</p><p><img src="https://img-blog.csdnimg.cn/20190926215438805.png#pic_center" alt="在这里插入图片描述"></p><p>图3.6 编写样式文件</p><p>此时，模拟器显示的界面如图3.7所示。</p><p><img src="https://img-blog.csdnimg.cn/20190926215514645.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1pISjEyM0NTRE4=,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><p>图3.7 模拟器测试界面2</p><p>在wxml中，同样可以使用标签的style属性进行样式修改。现将第一个view组件的style属性添加“margin:40px”，以和之前的设置进行区分，模拟器显示的界面如图3.8所示。<br><img src="https://img-blog.csdnimg.cn/20190926215527719.png#pic_center" alt="在这里插入图片描述"></p><p>图3.8 模拟器测试界面3</p><p>可以看到，第一个view组件的边距比第二个的边距大一些，说明在组建中直接更改属性的方法是可行的。下面测试.class选择器的方式。在第二个view组件上，设置其class属性为container，之后在index.wxss文件中，添加container属性为“margin: 25px”，如图3.9所示。为了界面美观，将第一个组件的style属性，也修改为边距25px。在模拟器中测试的界面结果如图3.10所示。</p><p><img src="https://img-blog.csdnimg.cn/20190926215718438.png#pic_center" alt="在这里插入图片描述"></p><p>图3.9 设置组件样式</p><p><img src="https://img-blog.csdnimg.cn/20190926215734688.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1pISjEyM0NTRE4=,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><p>图3.10 模拟器测试界面4</p><h4 id="2-3-4-统一尺寸规格"><a href="#2-3-4-统一尺寸规格" class="headerlink" title="2.3.4 统一尺寸规格"></a>2.3.4 统一尺寸规格</h4><p>为了更加直观地对比WXSS中的rpx和px两种单位的区别，同时统一组件的尺寸规格，在index.wxss文件中，修改文件中的样式内容，如图3.11所示。<br><img src="https://img-blog.csdnimg.cn/20190926215751302.png#pic_center" alt="在这里插入图片描述"></p><p>图3.11 样式文件</p><p>其中，主要设置了input组件的宽度、顶层边距、以及底边框线条颜色，设置了button按钮的外边框。其中需要注意的是，尺寸单位使用了rpx(responsive pixel)响应式像素，rpx规定了任何手机的屏幕宽度均为750rpx，有小程序负责讲、将逻辑像素自动转换为当前手机中的物理像素。也就是按照手机屏幕比例进行缩放，这样就不用担心手机宽度不同的问题了。在模拟器中的界面结果如图3.12所示。</p><p><img src="https://img-blog.csdnimg.cn/20190926220038683.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1pISjEyM0NTRE4=,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><p>图3.12 模拟器测试界面5</p><h4 id="2-3-5-样式导入"><a href="#2-3-5-样式导入" class="headerlink" title="2.3.5 样式导入"></a>2.3.5 样式导入</h4><p>设置wxss样式文件时，可以通过@import语句进行外联样式的导入。首先在index文件夹中，创建test.wxss文件，作为外联样式文件，在文件中编写如图3.13所示的代码。<br><img src="https://img-blog.csdnimg.cn/20190926215847973.png#pic_center" alt="在这里插入图片描述"></p><p>图3.13 按钮样式</p><p>之后在index.wxss文件中，导入test.wxss文件，如图3.14所示。</p><p><img src="https://img-blog.csdnimg.cn/20190926215911180.png#pic_center" alt="在这里插入图片描述"></p><p>图3.14 导入外联样式</p><p>保存文件并使用模拟器查看界面效果，如图3.15所示。</p><p><img src="https://img-blog.csdnimg.cn/20190926220053635.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1pISjEyM0NTRE4=,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><p>图3.15 模拟器测试界面6</p><p>需要注意的是，在index.wxss文件中，导入的外联样式和在内部直接定义的样式可以同时生效。</p><h4 id="2-3-6-设置全局样式"><a href="#2-3-6-设置全局样式" class="headerlink" title="2.3.6 设置全局样式"></a>2.3.6 设置全局样式</h4><p>可以在根目录下，创建一个全局样式文件，便于代码修改和维护。现在在根目录下创建app.wxss文件作为全局样式。</p><p><img src="https://img-blog.csdnimg.cn/20190926220108837.png#pic_center" alt="在这里插入图片描述"></p><p>图3.16 按钮字符样式</p><p>上图3.16中的代码设置了全局button组件的字符间距为12rpx。</p><p>需要注意的是，当全局样式与页面样式发生冲突时，页面样式的优先级更高，会覆盖全局样式。</p><h4 id="2-3-7-设置配置文件"><a href="#2-3-7-设置配置文件" class="headerlink" title="2.3.7 设置配置文件"></a>2.3.7 设置配置文件</h4><p>小程序的页面均可以通过json文件进行配置，其中又分为页面级的配置文件和全局配置文件。首先进行页面级配置文件的编写，在index.json文件中编写如下图3.17所示的代码。<br><img src="https://img-blog.csdnimg.cn/20190926220146470.png#pic_center" alt="在这里插入图片描述"></p><p>图3.17 配置文件</p><p>此时，模拟器中的小程序的标题栏界面如下图3.18所示。</p><p><img src="https://img-blog.csdnimg.cn/20190926220213340.png#pic_center" alt="在这里插入图片描述"></p><p>图3.18 模拟器测试标题栏界面</p><p>现在进行页面级配置文件的编写，修改根目录下的app.json配置文件，代码如下图3.19所示。</p><p><img src="https://img-blog.csdnimg.cn/2019092622024447.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1pISjEyM0NTRE4=,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><p>图3.19 全局配置文件</p><p>其中，navigationBarTitleText表示导航栏标题文字内容；navigationBarBackgroundColor表示导航栏背景颜色；navigationBarTextStyle表示导航栏标题颜色；backgroundColor表示窗口的背景颜色；</p><p>backgroundTextStyle表示下拉loading的样式；enablePullDownRefresh表示是否允许当前页面的下拉刷新【1】。Debug表示是否允许程序进行调试。此时，在控制台查看调试信息，如图3.20所示。</p><p><img src="https://img-blog.csdnimg.cn/20190926220305363.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1pISjEyM0NTRE4=,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><p>图3.20 控制台调试信息</p><h4 id="2-3-8-逻辑文件配置"><a href="#2-3-8-逻辑文件配置" class="headerlink" title="2.3.8 逻辑文件配置"></a>2.3.8 逻辑文件配置</h4><p>微信小程序中，.js文件表示程序的逻辑文件，打开index.js文件，可以看到开发者工具已经初始化生成了一些代码，现在在此基础上进行修改。</p><p>首先测试生命周期回调函数，以onLoad、onReady、onShow函数为例进行测试，通过console.log()函数输出调试信息，代码如图3.21所示。</p><p><img src="https://img-blog.csdnimg.cn/20190926220345439.png#pic_center" alt="在这里插入图片描述"></p><p>图3.21 生命周期函数测试</p><p>为了方便观察调试信息，先将全局配置文件中的debug选项设置为false，保存并编译程序，效果如图3.22所示。</p><p><img src="https://img-blog.csdnimg.cn/20190926220359798.png#pic_center" alt="在这里插入图片描述"></p><p>图3.22 控制台调试信息</p><p>之后测试页面事件处理函数，以onPullDownfresh、onReachBottom、onPageScroll函数为例，在index.js文件中分别使用控制台日志显示触发提示，代码如图3.23所示。<br><img src="https://img-blog.csdnimg.cn/20190926220432158.png#pic_center" alt="在这里插入图片描述"></p><p>图3.23 页面事件处理函数</p><p>以下拉刷新为例，在模拟器上下拉刷新后，控制台将会显示如下图3.24所示的调试信息。</p><p><img src="https://img-blog.csdnimg.cn/20190926220502545.png#pic_center" alt="在这里插入图片描述"></p><p>图3.24 控制台调试信息</p><p>下面测试组件事件的处理函数，对组件的事件处理，需要将组件绑定特定的触发函数。以button组件为例，为其绑定tap事件，tap事件表示当用户触摸到组件时会触发的事件，绑定tap事件之后，还需要为其编写相应的事件处理函数。按照题目要求，编写compare函数作为button组件的事件处理函数，代码如下图3.25所示。</p><p><img src="https://img-blog.csdnimg.cn/2019092622053034.png#pic_center" alt="在这里插入图片描述"></p><p>图3.25 组件事件处理函数</p><p>现在点击比较按钮，可以在控制台看到事件的响应信息，如图3.26所示。</p><p><img src="https://img-blog.csdnimg.cn/20190926220557226.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1pISjEyM0NTRE4=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>图3.26 控制台调试信息</p><p>常用的冒泡事件如下表3-1所示【2】</p><p>表3-1 常用的冒泡事件</p><table><thead><tr><th align="center">事件类型</th><th align="center">触发条件</th></tr></thead><tbody><tr><td align="center">touchstart</td><td align="center">手指触摸动作开始</td></tr><tr><td align="center">touchmove</td><td align="center">手指触摸后移动</td></tr><tr><td align="center">touchcancle</td><td align="center">手指触摸动作被打断</td></tr><tr><td align="center">touchend</td><td align="center">触摸状态结束</td></tr><tr><td align="center">tap</td><td align="center">手指触摸后马上离开</td></tr><tr><td align="center">longpress</td><td align="center">手指触摸后，超过350ms再离开</td></tr></tbody></table><h4 id="2-3-9-注册程序"><a href="#2-3-9-注册程序" class="headerlink" title="2.3.9 注册程序"></a>2.3.9 注册程序</h4><p>若要在小程序启动、显示、隐藏时执行某些操作，可以通过App()函数来实现。App()函数用于注册小程序，它会接受一个对象参数，通过该参数指定小程序的生命周期回调等。下面对小程序的App()进行测试，具体代码如下图3.27所示。</p><p><img src="https://img-blog.csdnimg.cn/20190926220630541.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1pISjEyM0NTRE4=,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><p>图3.27 注册程序测试</p><p>保存并进行调试，在控制台查看调试信息如下图3.28所示。</p><p><img src="https://img-blog.csdnimg.cn/20190926220654118.png#pic_center" alt="在这里插入图片描述"></p><p>图3.28 控制台调试信息</p><h4 id="2-3-10实现比较功能"><a href="#2-3-10实现比较功能" class="headerlink" title="2.3.10实现比较功能"></a>2.3.10实现比较功能</h4><p>方式一、为两个input组件绑定两个不同的事件处理函数</p><p>Input组件提供了change事件，该事件能够在输入框中的内容发生变化时触发，并能获取到用户输入的数字。下面在两个input组件中，分别绑定change事件，代码如下图3.29所示。</p><p><img src="https://img-blog.csdnimg.cn/20190926220718696.png#pic_center" alt="在这里插入图片描述"></p><p>图3.29 事件处理函数</p><p>该段代码中，需要注意的是Number()函数，它用于将字符串数据转换为数字类型的数据。于是，用户输入的数字数据就被分别赋值在了this.num1和this.num2中。<br>现在在模拟器的input组件中，输入数字数据，即可在控制台查看输入的数字内容。以在第二个输入框中输入数字1为例，控制台中的调试信息如下图3.30所示。</p><p><img src="https://img-blog.csdnimg.cn/2019092622073750.png#pic_center" alt="在这里插入图片描述"></p><p>图3.30 控制台调试程序</p><p>当用户单击“比较”按钮时，对this.num1和this.num2进行比较即可。为了将比较结果显示出来，可以在wxml文件的比较结果之后，添加一个变量result，代码如下图3.31所示。<br><img src="https://img-blog.csdnimg.cn/20190926220801478.png#pic_center" alt="在这里插入图片描述"></p><p>图3.31 添加自变量</p><p>上述代码中需要注意的是，在WXML中使用了双括号数据绑定的格式，被称为Mustache语法。括号中填写变量名，在程序初始化过程中，就会到逻辑文件的data字段里查找变量的初始值。<br>之后需要在index.js逻辑文件中的data字段添加result的初始化变量为空字符，代码如下图3.32所示。<br>图3.32 添加变量初始化</p><p>最后，在index.js文件中，修改button的事件处理函数compare，将比较的结果通过this.setData()显示在页面中，具体代码如下图3.33所示。<br><img src="https://img-blog.csdnimg.cn/2019092622084096.png#pic_center" alt="在这里插入图片描述"></p><p>图3.33 事件处理函数</p><p>上述代码中需要注意的是，如果想要改变result的值，不能通过直接赋值的方式，而是使用this.setData()方法实现。该方法的参数是一个对象，传入{result: str}表示将result的值赋为str。最后通过console.log(str)在控制台中显示提示信息。现在程序的比较逻辑部分已经完成，在模拟器中进行测试，显示如下图3.34所示。</p><p><img src="https://img-blog.csdnimg.cn/20190926220855730.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1pISjEyM0NTRE4=,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><p>图3.34 模拟器测试界面</p><p>在控制台中的调试信息如下图3.35所示。</p><p><img src="https://img-blog.csdnimg.cn/20190926220915734.png#pic_center" alt="在这里插入图片描述"></p><p>图3.35 控制台调试信息</p><p>方式二、为两个input组件绑定两个相同的处理函数</p><p>可以为多个input组件绑定相同的事件处理函数，然后通过不同组件的id或dataset进行区分。首先测试通过id进行区分，在index.wxml文件的input组件中，添加id属性，并绑定相同的事件处理函数btnchange，代码如下图3.36所示。</p><p><img src="https://img-blog.csdnimg.cn/20190926220948939.png#pic_center" alt="在这里插入图片描述"></p><p>图3.36 添加id属性</p><p>然后在index.js文件中编写btnchange函数，用于获取用户在input组件输入的数值，代码如下图3.37所示。</p><p><img src="https://img-blog.csdnimg.cn/20190926221032301.png#pic_center" alt="在这里插入图片描述"></p><p>图3.37 事件处理函数</p><p>在模拟器进行测试，控制台中的调试信息可以正常输出，如下图3.38所示。</p><p><img src="https://img-blog.csdnimg.cn/20190926221114594.png#pic_center" alt="在这里插入图片描述"></p><p>图3.38 控制台调试信息</p><p>现在尝试通过dataset区分元素。在wxml文件的input组件中，删除id属性，添加data-id属性，如下图3.39所示。</p><p><img src="https://img-blog.csdnimg.cn/20190926221146337.png#pic_center" alt="在这里插入图片描述"></p><p>图3.39 事件处理函数</p><p>在控制台查看调试信息，同样可以正常显示input输入的数值。这里需要注意的是，在未进行初始化的时候 this.num1和this.num2均为undefined未定义状态。<br>方式三、在页面中直接进行比较</p><p>使用WXML中的变量语法，可以直接比较两个变量的大小，代码如下图3.40所示。</p><p><img src="https://img-blog.csdnimg.cn/2019092622123376.png#pic_center" alt="在这里插入图片描述"></p><p>图3.40 条件表达式控制</p><p>在逻辑文件中增加change3处理事件，其代码如下图3.41所示。</p><p><img src="https://img-blog.csdnimg.cn/20190926221258482.png#pic_center" alt="在这里插入图片描述"></p><p>图3.41 事件处理函数</p><p>使用此方法时出现了问题，不管我输入的数据是多少，最后的比较结果总是显示“第1个数大”，问题已经解决，（解决过程见“四、实验中存在的问题及解决方案”）。<br>方式四、通过条件渲染产生不同的结果</p><p>除了使用条件运算符进行判断之外，还可以通过条件运算符的渲染，实现根据不同的判断结果显示不同标签的效果，修改index.wxml文件，代码如下图3.42所示。</p><p><img src="https://img-blog.csdnimg.cn/20190926221325233.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1pISjEyM0NTRE4=,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><p>图3.42 条件渲染方式</p><p>同时在index.js文件中，编写change4事件处理函数，与方式三中的change3函数类似，其代码如下图3.43所示。</p><p><img src="https://img-blog.csdnimg.cn/20190926221348360.png#pic_center" alt="在这里插入图片描述"></p><p>图3.43 事件处理函数</p><p>在模拟器中进行调试，数字比较结果显示正常。</p><p>下面对布局文件进行改进，使用<code>&lt;block&gt;</code>标签控制区域的显示与否，其关键代码如下图3.44所示。</p><p><img src="https://img-blog.csdnimg.cn/20190926221414982.png#pic_center" alt="在这里插入图片描述"></p><p>图3.44 使用<code>&lt;block&gt;</code>组件</p><p>需要注意的是，<code>&lt;block&gt;</code>标签没有渲染的功能，它只是一个包装组件，用来控制某一块区域是否进行显示。测试该方式，程序同样正常运行。<br>方式五、通过表单获取input组件的值.</p><p>可以通过<code>&lt;from&gt;</code>标签创建表单，获取表单组件中的值。在本案例中，可以将两个input组件和button组件做成一个表单，代码如下图3.45所示。</p><p><img src="https://img-blog.csdnimg.cn/20190926221436654.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1pISjEyM0NTRE4=,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><p>图3.45 使用<code>&lt;form&gt;</code>表单组件</p><p>进行模拟器上的测试，结果发现程序未能正常显示数值比较结果，控制台也没有发出任何警告或错误信息。经过反复查找，终于找到错误原因。原因是我误将<code>&lt;form&gt;</code>组件写成了<code>&lt;from&gt;</code>组件，如下图3.46所示。经过查阅资料，发现并不存在名为<code>&lt;from&gt;</code>的组件，但是开发工具没有报错。为了进行测试，我改正错误之后，又新增了一行没有定义过的标签<code>&lt;hello123&gt;</code>，如图3.47所示，发现程序正常运行。说明WXML对于标签的检查是不严格的，它对于错误的标签只会忽略渲染，对整个布局不会产生影响。</p><p><img src="https://img-blog.csdnimg.cn/20190926221444343.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1pISjEyM0NTRE4=,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><p>图3.46 错误位置</p><p><img src="https://img-blog.csdnimg.cn/20190926221459276.png#pic_center" alt="在这里插入图片描述"></p><p>图3.47 未定义组件测试</p><p>至此，实现比较功能的五种方式均以经过测试，其中第三种方式(在页面中直接进行比较)，还存在问题，没有调试成功。将在“四、实验中存在的问题及解决方案”章节进行第三种方式的问题调试。</p><h2 id="三、实验结果"><a href="#三、实验结果" class="headerlink" title="三、实验结果"></a>三、实验结果</h2><p>本次实验实现微信小程序开发环境的搭建，并创建一个用于测试的小程序项目。完成了小程序布局文件、逻辑文件等内容的而编写，最后使用五种方式实现了页面逻辑。本次实验小程序项目文件，已经上传到GitHub储存。</p><h2 id="四、实验中存在的问题及解决方案"><a href="#四、实验中存在的问题及解决方案" class="headerlink" title="四、实验中存在的问题及解决方案"></a>四、实验中存在的问题及解决方案</h2><h3 id="4-1问题回顾"><a href="#4-1问题回顾" class="headerlink" title="4.1问题回顾"></a>4.1问题回顾</h3><p>目前为止，实现比较功能的五种方式均以经过测试，只有第三种方式，即在页面中直接显示结果的方式没有实现功能。该方法意在使用变量语法和条件表达式相结合的方式，直接在布局页面实现数字大小的比较与结果的显示。</p><p>现在程序运行的状态是不管输入任何数字，都只会显示“第 1 个数字大”这样的结果。现在程序代码截图如下图4.1和图4.2所示。</p><p><img src="https://img-blog.csdnimg.cn/20190926221526292.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1pISjEyM0NTRE4=,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><p>图4.1 布局文件</p><p><img src="https://img-blog.csdnimg.cn/20190926221550409.png#pic_center" alt="在这里插入图片描述"></p><p>图4.2 事件处理函数</p><h3 id="4-2问题分析"><a href="#4-2问题分析" class="headerlink" title="4.2问题分析"></a>4.2问题分析</h3><p>能够显示数字比较的结果，说明input的事件处理函数应该是没有问题，它的this.setData()函数能够实现返回num数值的功能，所以问题应该出现在布局文件中的条件表达式上。仔细观察条件表达式，发现条件表达式的输出结果写重复了，都写成了“第1个数大”。将其改正后，程序正常运行。</p><h3 id="4-3问题总结"><a href="#4-3问题总结" class="headerlink" title="4.3问题总结"></a>4.3问题总结</h3><p>在编写程序时要注意细节，复制粘贴的时候要把该修改的内容修改完毕，再检查完成后调试运行。</p><h2 id="五、实验总结"><a href="#五、实验总结" class="headerlink" title="五、实验总结"></a>五、实验总结</h2><p>本次实验主要实现了三部分内容：开发环境的搭建，开发工具的安装以及比较数字大小的实验案例。在进行实验的过程中，掌握了以下知识内容：</p><ol><li>微信小程序开发环境的搭建</li><li>小程序项目的创建</li><li>页面文件WXML的编写</li><li>页面样式WXSS的编写(元素选择器、尺寸单位、样式引入)</li><li>配置文件JSON的编写(页面级和应用级配置文件的常见配置属性)</li><li>页面逻辑文件JS的编写(生命周期回调函数、页面事件处理函数、组件事件处理函数)</li><li>五种实现页面逻辑的方法(为不同的组件绑定不同的处理函数、为同类型组件绑定相同的处理函数、使用条件表达式、利用条件渲染显示需要的组件、通过表单格式form获取用户输入信息)</li></ol><h2 id="六、附录"><a href="#六、附录" class="headerlink" title="六、附录"></a>六、附录</h2><h3 id="6-1-实验代码"><a href="#6-1-实验代码" class="headerlink" title="6.1 实验代码"></a>6.1 实验代码</h3><p>本次实验的项目代码，已经上传到了GitHub，网址为：<a href="https://github.com/ZHJ0125/WeChat" target="_blank" rel="noopener">https://github.com/ZHJ0125/WeChat</a></p><h3 id="6-2参考资料"><a href="#6-2参考资料" class="headerlink" title="6.2参考资料"></a>6.2参考资料</h3><p>【1】 <a href="https://developers.weixin.qq.com/miniprogram/dev/reference/configuration/page.html" target="_blank" rel="noopener">微信官方文档——页面配置</a><br>【2】 <a href="https://developers.weixin.qq.com/miniprogram/dev/framework/view/wxml/event.html" target="_blank" rel="noopener">微信官方文档——事件</a></p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;内容说明:这是微信小程序第一次实验报告&lt;br&gt;本次实验主要实现了三部分内容：开发环境的搭建，开发工具的安装以及比较数字大小的实验案例。在进行实验的过程中，掌握了以下知识内容：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;微信小程序开发环境的搭建&lt;/li&gt;
&lt;li&gt;小程序项目的创建&lt;/li&gt;
&lt;li&gt;页面文件WXML的编写&lt;/li&gt;
&lt;li&gt;页面样式WXSS的编写(元素选择器、尺寸单位、样式引入)&lt;/li&gt;
&lt;li&gt;配置文件JSON的编写(页面级和应用级配置文件的常见配置属性)&lt;/li&gt;
&lt;li&gt;页面逻辑文件JS的编写(生命周期回调函数、页面事件处理函数、组件事件处理函数)&lt;/li&gt;
&lt;li&gt;五种实现页面逻辑的方法(为不同的组件绑定不同的处理函数、为同类型组件绑定相同的处理函数、使用条件表达式、利用条件渲染显示需要的组件、通过表单格式&lt;code&gt;form&lt;/code&gt;获取用户输入信息)&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
    
      <category term="实验报告" scheme="https://zhj0125.github.io/tags/%E5%AE%9E%E9%AA%8C%E6%8A%A5%E5%91%8A/"/>
    
      <category term="微信小程序" scheme="https://zhj0125.github.io/tags/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/"/>
    
  </entry>
  
  <entry>
    <title>Unable to lock the administration directory (/var/lib/dpkg/)解决办法</title>
    <link href="https://zhj0125.github.io/2019/06/26/Unable-to-lock-the-administration-directory-var-lib-dpkg-%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95/"/>
    <id>https://zhj0125.github.io/2019/06/26/Unable-to-lock-the-administration-directory-var-lib-dpkg-%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95/</id>
    <published>2019-06-26T14:24:37.000Z</published>
    <updated>2020-01-17T18:34:05.313Z</updated>
    
    <content type="html"><![CDATA[<h2 id="修复”无法锁定Ubuntu中的管理目录-var-lib-dpkg-”"><a href="#修复”无法锁定Ubuntu中的管理目录-var-lib-dpkg-”" class="headerlink" title="修复”无法锁定Ubuntu中的管理目录(/var/lib/dpkg/)”"></a>修复”无法锁定Ubuntu中的管理目录(/var/lib/dpkg/)”</h2><blockquote><p>问题描述：<br>Ubuntu18.04在更新软件源时，出现“Unable to lock the administration directory (/var/lib/dpkg/)” 报错信息。</p><p><img src="https://img-blog.csdnimg.cn/20190626215634585.png#pic_center" alt="图片描述"></p><p>问题分析：<br>Linux为了避免已经运行的apt-get或apt进程被用户或需要处理apt文件的其他进程中断，运行apt-get或apt命令后，将在以下任何目录<code>/var/lib/apt/lists/</code>，<code>/var/lib/dpkg/</code> 和 <code>/var/cache/apt/archives/</code> 下创建一个 <em>lock</em>(锁定文件)。正常情况下，当进程执行完毕后，将删除锁定文件。如果有程序正在占用该进程，锁定文件未删除，就会导致此问题发生。</p></blockquote><a id="more"></a><h3 id="两种解决办法"><a href="#两种解决办法" class="headerlink" title="两种解决办法"></a>两种解决办法</h3><h4 id="方案一：找到并杀死apt进程"><a href="#方案一：找到并杀死apt进程" class="headerlink" title="方案一：找到并杀死apt进程"></a>方案一：找到并杀死apt进程</h4><blockquote><p>1.使用ps命令找到正在运行的apt进程：</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ps -A | grep apt</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20190626215953373.png#pic_center" alt="在这里插入图片描述"></p><blockquote><p>2.使用kill命令杀死该进程</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo kill -9 进程号</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/2019062622015450.png#pic_center" alt="在这里插入图片描述"></p><blockquote><p>3.重新更新软件源即可：</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get update</span><br><span class="line">or</span><br><span class="line">sudo apt update</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20190626221321107.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1pISjEyM0NTRE4=,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><p>第一种方案亲测可用。</p><h4 id="方案2：删除锁定文件"><a href="#方案2：删除锁定文件" class="headerlink" title="方案2：删除锁定文件"></a>方案2：删除锁定文件</h4><blockquote><p>1.首先删除锁定文件</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo rm /var/lib/dpkg/lock</span><br></pre></td></tr></table></figure><blockquote><p>2.之后强制dpkg重新配置</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo dpkg --configure -a</span><br></pre></td></tr></table></figure><blockquote><p>3.删除另外两个锁定文件</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo rm /var/lib/apt/lists/lock</span><br><span class="line">sudo rm /var/cache/apt/archives/lock</span><br></pre></td></tr></table></figure><blockquote><p>4.最后进行软件源更新即可</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get update</span><br><span class="line">or</span><br><span class="line">sudo apt update</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;修复”无法锁定Ubuntu中的管理目录-var-lib-dpkg-”&quot;&gt;&lt;a href=&quot;#修复”无法锁定Ubuntu中的管理目录-var-lib-dpkg-”&quot; class=&quot;headerlink&quot; title=&quot;修复”无法锁定Ubuntu中的管理目录(/var/lib/dpkg/)”&quot;&gt;&lt;/a&gt;修复”无法锁定Ubuntu中的管理目录(/var/lib/dpkg/)”&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;问题描述：&lt;br&gt;Ubuntu18.04在更新软件源时，出现“Unable to lock the administration directory (/var/lib/dpkg/)” 报错信息。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img-blog.csdnimg.cn/20190626215634585.png#pic_center&quot; alt=&quot;图片描述&quot;&gt;&lt;/p&gt;
&lt;p&gt;问题分析：&lt;br&gt;Linux为了避免已经运行的apt-get或apt进程被用户或需要处理apt文件的其他进程中断，运行apt-get或apt命令后，将在以下任何目录&lt;code&gt;/var/lib/apt/lists/&lt;/code&gt;，&lt;code&gt;/var/lib/dpkg/&lt;/code&gt; 和 &lt;code&gt;/var/cache/apt/archives/&lt;/code&gt; 下创建一个 &lt;em&gt;lock&lt;/em&gt;(锁定文件)。正常情况下，当进程执行完毕后，将删除锁定文件。如果有程序正在占用该进程，锁定文件未删除，就会导致此问题发生。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
    
      <category term="日常Debug" scheme="https://zhj0125.github.io/tags/%E6%97%A5%E5%B8%B8Debug/"/>
    
      <category term="Ubuntu" scheme="https://zhj0125.github.io/tags/Ubuntu/"/>
    
  </entry>
  
  <entry>
    <title>Linux实训——搭建动态网站</title>
    <link href="https://zhj0125.github.io/2019/06/20/Linux%E5%AE%9E%E8%AE%AD%E2%80%94%E2%80%94%E6%90%AD%E5%BB%BA%E5%8A%A8%E6%80%81%E7%BD%91%E7%AB%99/"/>
    <id>https://zhj0125.github.io/2019/06/20/Linux%E5%AE%9E%E8%AE%AD%E2%80%94%E2%80%94%E6%90%AD%E5%BB%BA%E5%8A%A8%E6%80%81%E7%BD%91%E7%AB%99/</id>
    <published>2019-06-20T12:43:40.000Z</published>
    <updated>2020-01-17T19:18:55.457Z</updated>
    
    <content type="html"><![CDATA[<p>山东科技大学<br>信息工程系</p><blockquote><p>内容说明：本篇文章是《嵌入式操作系统》实训报告的<strong>第三部分</strong>，使用WordPress实现了动态网站的搭建，使用php编写了学生信息管理系统的动态网页。<br>建议先阅读实训报告<a href="https://blog.csdn.net/ZHJ123CSDN/article/details/93088187" target="_blank" rel="noopener">第二部分</a><br>《嵌入式操作系统》实训报告完整内容介绍：<br>第一部分：<a href="https://blog.csdn.net/ZHJ123CSDN/article/details/93074413" target="_blank" rel="noopener">编译升级系统Linux内核</a><br>第二部分：<a href="https://blog.csdn.net/ZHJ123CSDN/article/details/93088187" target="_blank" rel="noopener">搭建HTTP服务器</a><br>第三部分：<a href="https://blog.csdn.net/ZHJ123CSDN/article/details/93090488" target="_blank" rel="noopener">搭建动态网站</a><br><a href="http://47.95.13.239/Study/Linux/linux%E5%AE%9E%E8%AE%AD%20_%E5%BC%A0%E5%8E%9A%E4%BB%8A.pdf" target="_blank" rel="noopener">完整实验报告PDF文件</a></p></blockquote><a id="more"></a><h2 id="三、构建一个简单的动态网站"><a href="#三、构建一个简单的动态网站" class="headerlink" title="三、构建一个简单的动态网站"></a>三、构建一个简单的动态网站</h2><h3 id="3-1-实验原理"><a href="#3-1-实验原理" class="headerlink" title="3.1 实验原理"></a>3.1 实验原理</h3><p>LAMP是Web服务的经典模型，被命名为其原始四个开源组件的名称首字母缩写，分别为：<code>Linux 操作系统</code>，<code>Apache HTTP服务器</code>，<code>MySQL 关系数据库管理系统</code>和<code>PHP 编程语言</code>。LAMP组件在很大程度上是可互换的，并且不限于原始选择，可以相互搭配。作为网站架构的解决方案，LAMP适用于在Linux上构建动态网站和Web应用程序。</p><h3 id="3-2-实验分析"><a href="#3-2-实验分析" class="headerlink" title="3.2 实验分析"></a>3.2 实验分析</h3><p>本次实验要求构建一个简单的动态网站。动态网站和静态网站最大的区别的在于，动态网站的页面是由服务器动态生成的，而静态网站的文件仅仅是存放于服务器上的独立的文件。动态网站以<code>数据库技术</code>为基础，在静态网站的基础上，还需要增加PHP解析和数据库支持。两种网站的具体区别见下表：<br>表-动态网页和静态网页的区别</p><table><thead><tr><th>0</th><th>静态网页</th><th>动态网页</th></tr></thead><tbody><tr><td>特点</td><td>访问的是存放在服务器文件系统中实实在在的HTML文件</td><td>访问的是服务器根据当前时间、环境参数、数据库操作等动态的生成的页面，动态网页数据库技术为基础</td></tr><tr><td>开发技术</td><td>HTML、XML、CSS</td><td>HTML+JavaScript(Node.js)</br>HTML+PHP</br>HTML+ASP.NET</br>HTML+JSP</td></tr><tr><td>扩展名</td><td>htm、html、shtml</td><td>PHP、jsp</td></tr><tr><td>优势</td><td>网站更安全，HTML页面不会受Asp相关漏洞的影响；而且可以减少攻击，防SQL注入。数据库出错时，不影响网站正常访问。</td><td>不需要编译，所以速度快，节省服务器资源。网址格式友好，搜索引擎容易识别。维护方便，能实现人们需要的各种需求。查询信息方便，能存储大量数据，需要时能立即查询。</td></tr><tr><td>不足</td><td>内容是固定的，交互性差，内容更新维护复杂。没有自动化的工具，维护大量的静态页面文件是不现实的。无法充分支持用户/客户的需求（外观选择，浏览器的支持，Cookie）。</td><td>动态网站用到数据库，所以对数据库的安全和保密性要求较高，要专业技术人员提供维护才能保证网站的安全。动态网站不利于搜索引擎收录。</td></tr></tbody></table><p>前面第二个实验中，已经在Ubuntu上搭建了HTTP服务器，安装了Apache软件，实现了静态网站的基本功能。在此基础上，若要实现动态网站，需要搭建服务器的LAMP模型。也就是需要安装MySQL和PHP，以实现动态网站的功能。</p><h3 id="3-3-实验过程记录"><a href="#3-3-实验过程记录" class="headerlink" title="3.3 实验过程记录"></a>3.3 实验过程记录</h3><h4 id="3-3-1-安装PHP"><a href="#3-3-1-安装PHP" class="headerlink" title="3.3.1 安装PHP"></a>3.3.1 安装PHP</h4><h5 id="3-3-1-1安装PHP软件及相关模块"><a href="#3-3-1-1安装PHP软件及相关模块" class="headerlink" title="3.3.1.1安装PHP软件及相关模块"></a>3.3.1.1安装PHP软件及相关模块</h5><p>首先安装PHP7.0软件。</p><p><img src="https://img-blog.csdnimg.cn/20190620184011769.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1pISjEyM0NTRE4=,size_16,color_FFFFFF,t_70#pic_center=600x300" alt="在这里插入图片描述"></p><p>图 安装PHP软件</p><p>现在虽然已经安装了PHP软件，但是Web 服务器还没有解析文件的能力，所以我们要给它装上一个扩展模块。也就是说给 Apache 加个扩展，以后 Apache 收到用户请求 PHP 文件的话，就会交给这个模块处理，在服务器处理完 PHP 文件再传送给用户。</p><p><img src="https://img-blog.csdnimg.cn/20190620184033854.png#pic_center" alt="在这里插入图片描述"></p><p>图 安装PHP模块</p><p>安装PHP和扩展模块时，出现上图所示的错误。经过查阅资料了解到，在标准<code>Ubuntu Trusty</code>软件库中，是不支持PHP7的，需要使用ppa添加该模块软件源。</p><p><img src="https://img-blog.csdnimg.cn/20190620184046581.png#pic_center" alt="在这里插入图片描述"></p><p>图 解决方案</p><p>按照资料的介绍，重新安装了PHP7.0。也许这个下载源不是国内的源，使我花费了很长时间才安装成功。此时再次尝试安装PHP模块，发现该模块已经成功安装。</p><p><img src="https://img-blog.csdnimg.cn/20190620184056701.png#pic_center" alt="在这里插入图片描述"></p><p>图 模块安装成功</p><p>现在PHP及其模块已经安装成功，接下来进行PHP功能测试。首先重启apache服务。</p><p><img src="https://img-blog.csdnimg.cn/20190620184116763.png#pic_center" alt="在这里插入图片描述"></p><p>图 重启apache服务</p><p>下面查看PHP版本。</p><p><img src="https://img-blog.csdnimg.cn/20190620184131761.png#pic_center" alt="在这里插入图片描述"></p><p>图 查看PHP版本</p><h5 id="3-3-1-2-测试PHP功能"><a href="#3-3-1-2-测试PHP功能" class="headerlink" title="3.3.1.2 测试PHP功能"></a>3.3.1.2 测试PHP功能</h5><p>新建一个PHP文件，用来显示PHP信息，同时测试PHP解析功能能否正常使用。在网站根目录下，创建一个<code>testphp.php</code>文件，文件内容如下。</p><p><img src="https://img-blog.csdnimg.cn/20190620184145448.png#pic_center" alt="在这里插入图片描述"></p><p>图 编辑PHP文件</p><p><img src="https://img-blog.csdnimg.cn/20190620184200365.png#pic_center" alt="在这里插入图片描述"></p><p>图 PHP文件内容</p><p>之后，使用虚拟机中的自带的Firefox浏览器，登录<code>http://127.0.0.1/testphp.php</code>进行PHP功能测试。</p><p><img src="https://img-blog.csdnimg.cn/20190620184213785.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1pISjEyM0NTRE4=,size_16,color_FFFFFF,t_70#pic_center=600x600" alt="在这里插入图片描述"></p><p>图 浏览器PHP测试信息</p><p>显示该界面，说明PHP已经可以正确解析。</p><h4 id="3-3-2-安装MySQL"><a href="#3-3-2-安装MySQL" class="headerlink" title="3.3.2 安装MySQL"></a>3.3.2 安装MySQL</h4><p>动态网页是以数据库为基础的，其数据由数据库储存和分配，所以动态网站的制作还需要安装MySQL数据库。</p><p><img src="https://img-blog.csdnimg.cn/20190620184236380.png#pic_center" alt="在这里插入图片描述"></p><p>图 安装MySQL数据库</p><p>MySQL 是基于<code>C/S</code>模型的，最好是同时安装server服务端和client客户端。安装过程中，并没有弹出窗口让我设置服务器密码（按理说应该会弹出窗口），现在尝试登录MySQL，出现了以下问题。</p><p><img src="https://img-blog.csdnimg.cn/20190620184259202.png#pic_center" alt="在这里插入图片描述"></p><p>图 登录报错信息</p><p>经过查阅资料，找到以下解决方法：</p><p><img src="https://img-blog.csdnimg.cn/20190620184332216.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1pISjEyM0NTRE4=,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><p>图 解决方案</p><p>就是说，第一次安装登陆的时候，要加上<code>sudo</code>权限。登录进MySQL之后，有两种方式：一是更改root用户的密码，二是创建一个新的数据库用户。我采用第一种方式，试图更改root的密码。</p><p><img src="https://img-blog.csdnimg.cn/20190620184402148.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1pISjEyM0NTRE4=,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><p>图 更改root用户的密码</p><p>重启MySQL服务之后，重新登陆MySQL，又出现错误。</p><p><img src="https://img-blog.csdnimg.cn/20190620184423675.png#pic_center" alt="在这里插入图片描述"></p><p>图 登录报错信息</p><p>再次查找资料，找到的解决方法如下：</p><p><img src="https://img-blog.csdnimg.cn/20190620184444215.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1pISjEyM0NTRE4=,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><p>图 解决方案</p><p>就是说，在更新root密码的时候，还需要把root的plugin选项，设置为<code>mysql_native_password</code>才行。于是重新设置密码。由于整个解决过程篇幅较长，现只截取其中一部分图片。</p><p><img src="https://img-blog.csdnimg.cn/2019062018450059.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1pISjEyM0NTRE4=,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><p>图 解决过程</p><p>解决密码问题之后，再次尝试登陆MySQL。</p><p><img src="https://img-blog.csdnimg.cn/20190620184517657.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1pISjEyM0NTRE4=,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><p>图 登录MySQL测试</p><p>现在已经可以正常启动登录MySQL数据库了。</p><h4 id="3-3-3-安装PHPMyAdmin"><a href="#3-3-3-安装PHPMyAdmin" class="headerlink" title="3.3.3 安装PHPMyAdmin"></a>3.3.3 安装PHPMyAdmin</h4><p>在终端中开启MySQL，对数据库中的信息进行操作，只能显示命令行模式的数据库界面。为了能更加方便的使用数据库，需要下载<code>PHPMyAdmin</code>软件。该软件实现了对数据库的可视化操作，使得对数据库的操作可以更加便捷。使用下图所示的命令安装<code>PHPMyAdmin</code>。</p><p><img src="https://img-blog.csdnimg.cn/20190620200259822.png#pic_center" alt="在这里插入图片描述"></p><p>图 安装PHPMyAdmin软件</p><p>安装时，不仅需要安装PHPmtadmin软件，还需要安装相关的配置。安装过程中，会弹出以下窗口，用来配置PHPMyAdmin。</p><p><img src="https://img-blog.csdnimg.cn/20190620200311265.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1pISjEyM0NTRE4=,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><p>图 服务器配置</p><p>此步骤用于选择配置pypmyadmin使用于哪种服务器上，因此需要选择apache服务器。选择apache2并按回车以确定。</p><p><img src="https://img-blog.csdnimg.cn/2019062020032022.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1pISjEyM0NTRE4=,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><p>图 配置密码</p><p>此步骤提示：请为PHPMyAdmin提供一个数据库服务器的密码，如果空着不填，则会随机生成一个密码。这里，我填写了与MySQL相同的密码：<code>Zhanghoujin123</code>。配置密码，保存退出即可完成配置。</p><p>由于PHPMyAdmin的默认安装位置是<code>/user/share</code>目录，如果使用apache进行测试，则很不方便。为了方便测试和日常使用，需要创建PHPMyAdmin的软连接，把PHPMyAdmin目录，链接到HTTP服务器的根目录下，以便于测试和访问。然后重启apache模块。</p><p><img src="https://img-blog.csdnimg.cn/2019062020033573.png#pic_center" alt="在这里插入图片描述"></p><p>图 软连接及重启服务器模块</p><p>配置完成之后，打开Firefox测试PHPMyAdmin，出现了以下问题。</p><p><img src="https://img-blog.csdnimg.cn/20190620200349631.png" alt="在这里插入图片描述"></p><p>图 测试时出现的问题</p><p>网上找到的解决方法为：</p><p><img src="https://img-blog.csdnimg.cn/20190620200411886.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1pISjEyM0NTRE4=,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><p>图 解决方案1</p><p><img src="https://img-blog.csdnimg.cn/20190620200424814.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1pISjEyM0NTRE4=,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><p>图 解决方案2</p><p>经过查阅资料发现问题的原因是，我没有安装部分必要的模块，导致PHPMyAdmin配置出现了问题。通过查询资料，解决了该问题。现在重新打开PHPMyAdmin网页，可以看到以下界面。</p><p><img src="https://img-blog.csdnimg.cn/20190620200436177.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1pISjEyM0NTRE4=,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><p>图 PHPMyAdmin登录界面</p><p>填写在安装MySQL时，配置的用户名和密码即可。登录进入PHPMyAdmin之后的界面如下：</p><p><img src="https://img-blog.csdnimg.cn/20190620200446753.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1pISjEyM0NTRE4=,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><p>图 PHPMyAdmin操作界面</p><p>可以看到，PHPMyAdmin已经可以正常显示和使用。</p><p>到目前为止，Ubuntu已经成功安装了LAMP架构，从而已经具备了创建动态网站的必备条件，接下来就可以进行动态网站的搭建了。</p><p>对于动态网站的搭建，我没有什么经验，所以打算采用对技术小白非常友好的<code>WordPress</code>来搭建动态网页。</p><h4 id="3-3-4-用WordPress搭建动态网站"><a href="#3-3-4-用WordPress搭建动态网站" class="headerlink" title="3.3.4 用WordPress搭建动态网站"></a>3.3.4 用WordPress搭建动态网站</h4><p>WordPress是一个基于PHP和MySQL的免费开源的内容管理系统。其功能包括插件架构和模板系统。搭建个人博客是其最为广泛的应用，但它也支持其他类型的网络内容，包括传统的邮件列表和论坛，媒体画廊和在线商店。WordPress是目前非常受欢迎的网站管理系统。同时，由于其丰富的内容模板、简易的操作流程，和简洁的网站界面，颇受网站搭建的新手欢迎。</p><h5 id="3-3-4-1-WordPress软件安装"><a href="#3-3-4-1-WordPress软件安装" class="headerlink" title="3.3.4.1 WordPress软件安装"></a>3.3.4.1 WordPress软件安装</h5><p>首先使用<code>wget</code>工具，下载WordPress官网的新版安装包，安装WordPress软件。</p><p><img src="https://img-blog.csdnimg.cn/20190620200518454.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1pISjEyM0NTRE4=,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><p>图 安装包下载过程</p><p>安装解压软件并解压，使用zip工具进行解压。解压成功后，会在当前目录下，生成<code>WordPress</code>文件夹。</p><p><img src="https://img-blog.csdnimg.cn/2019062020052867.png#pic_center" alt="在这里插入图片描述"><br>图 解压生成文件夹</p><h5 id="3-3-4-2-创建数据库"><a href="#3-3-4-2-创建数据库" class="headerlink" title="3.3.4.2 创建数据库"></a>3.3.4.2 创建数据库</h5><p>因为WordPress需要与MySQL数据库相关联，所以需要为WordPress配置相应的数据库。数据库中的数据用于储存WordPress网站的内容和配置信息。</p><p><img src="https://img-blog.csdnimg.cn/20190620200540595.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1pISjEyM0NTRE4=,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><p>图 为WordPress创建数据库</p><p>其中包含了六条<code>SQL</code>语句，其分别的目的为：</p><blockquote><ol><li>为 WordPress 创建一个名为 wordpress 的数据库</li><li>为这个数据库设置一个用户为 wordpressuser</li><li>为这个用户配置一个密码为 Zhanghoujin123</li><li>为这个用户配置数据库的访问权限</li><li>生效这些配置</li><li>退出数据库</li></ol></blockquote><p>现在去PHPMyAdmin页面，查看已有的数据库，可以看到已经创建了WordPress数据库。</p><p><img src="https://img-blog.csdnimg.cn/20190620200554480.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1pISjEyM0NTRE4=,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><p>图 创建数据库成功</p><h5 id="3-3-4-3-配置WordPress"><a href="#3-3-4-3-配置WordPress" class="headerlink" title="3.3.4.3 配置WordPress"></a>3.3.4.3 配置WordPress</h5><p>现在，为WordPress创建的数据库已经准备好了。之后，需要继续配置WordPress，具体操作如下图中所示：</p><p><img src="https://img-blog.csdnimg.cn/20190620200611568.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1pISjEyM0NTRE4=,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><p>图 配置WordPress</p><p>其中的主要操作的含义为：</p><blockquote><ol><li>由于PHP默认访问 <code>/var/www/html/</code> 文件夹，所以需要把 WordPress 文件夹里的文件都复制到 <code>/var/www/html/</code> 文件夹</li><li>修改一下 <code>/var/www/html/</code> 目录权限</li><li>修改apache的默认索引网页文件。这一步是假设把WordPress中，所有的文件都拷贝到HTTP服务器的根目录的情况。如果是这种情况，那么HTTP根目录下会同时存在两个index文件，分别是apache的<code>index.html</code>和WordPress的<code>index.php</code>，我担心这样会有冲突，所以将<code>index.html</code>改名为了<code>index~.html</code>。<br>整个实验做完之后，再看这一步的操作，确实没有什么必要。直接将整个WordPress文件夹复制过来(图中所示)就可以。这样的话，在访问WordPress的时候，直接访问<code>http://my_ip_addr/wordpress</code>就可以了，这样也不会对apache的index产生影响。</li><li>重启 Apache 服务</li></ol></blockquote><h5 id="3-3-4-4-初始化WordPress"><a href="#3-3-4-4-初始化WordPress" class="headerlink" title="3.3.4.4 初始化WordPress"></a>3.3.4.4 初始化WordPress</h5><p>配置完成并重启之后，在浏览器中打开<code>http://127.0.0.1/WordPress</code>，将会自动跳转到WordPress初始化界面。</p><p><img src="https://img-blog.csdnimg.cn/2019062020073889.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1pISjEyM0NTRE4=,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><p>图 WordPress初始化界面</p><blockquote><p>该网页提示的大致意思是：欢迎安装WordPress，在开始之前我们需要一些数据库的信息，你需要知道以下信息：</p><ol><li>数据库名</li><li>数据库用户名</li><li>数据库密码</li><li>数据库地址</li><li>配置表(如果你想在一个数据库中运行多个WordPress)<br>我们会使用这些信息创建一个名为<code>wp-config.php</code>的文件。如果这个自动生成的文件没有奏效，不必担心。我们所做的所有这些，是将数据库信息写入配置文件中。你同样可以使用简易的文本编辑器打开<code>wp-config.php</code>文件，填上你的信息。</li></ol></blockquote><p>有可能你的这些信息是被网站服务商托管的，如果你没有这些信息，你需要在继续设置之前，去联系他们获取信息。</p><p>当然，我有这些信息。点击继续，进入到下一界面。</p><p><img src="https://img-blog.csdnimg.cn/20190620200706909.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1pISjEyM0NTRE4=,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><p>图 配置WordPress_1</p><p>需要填写刚才提到的信息，上图是我已经填好了的。点击提交，进入下一界面。</p><p><img src="https://img-blog.csdnimg.cn/20190620200750432.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1pISjEyM0NTRE4=,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><p>图 配置WordPress_2</p><p>现在提示：WordPress已经可以连接到数据库了，如果准备好了，可以去运行安装进程。现在点击运行安装，进入安装进程，出现以下界面。</p><p><img src="https://img-blog.csdnimg.cn/2019062020075813.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1pISjEyM0NTRE4=,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><p>图 配置WordPress_3</p><p>这个界面提示需要填写一些必要的安装信息，包括站点标题、用户名、密码、邮箱、是否支持搜索引擎索引等。我填写的信息如上图所示。填写完成之后，点击安装WordPress。</p><p><img src="https://img-blog.csdnimg.cn/20190620200805679.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1pISjEyM0NTRE4=,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><p>图 配置WordPress_4</p><p>安装完成后，出现上图的提示。点击登录，又弹出以下界面。</p><p><img src="https://img-blog.csdnimg.cn/20190620200819330.png#pic_center" alt="在这里插入图片描述"></p><p>图 配置WordPress_5</p><p>点击保存登录信息，然后登陆。终于出现了WordPress的后台管理界面！</p><p><img src="https://img-blog.csdnimg.cn/20190620200829916.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1pISjEyM0NTRE4=,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><p>图 WordPress后台管理界面</p><p>现在去前台用户界面看看，访问<code>http://127.0.0.1/WordPress</code>，即可看到以下界面。</p><p><img src="https://img-blog.csdnimg.cn/20190620200857256.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1pISjEyM0NTRE4=,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><p>图 WordPress前台用户界面</p><p>可以看到，现在这里只有一个默认生成的<code>HelloWorld博客</code>，为了测试后台服务器功能，下面我要在后台添加博客。</p><h5 id="3-3-4-5-管理WordPress后台"><a href="#3-3-4-5-管理WordPress后台" class="headerlink" title="3.3.4.5 管理WordPress后台"></a>3.3.4.5 管理WordPress后台</h5><p>我在后台编写了一篇用于测试的博客，由于虚拟机中的Ubuntu未安装中文输入法，博客主要使用英文编写。</p><p><img src="https://img-blog.csdnimg.cn/20190620200917925.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1pISjEyM0NTRE4=,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><p>图 后台编写测试博客</p><p>后台的编写界面如上图所示。编写完成后保存并发布，再去前台访问，看一下效果。</p><p><img src="https://img-blog.csdnimg.cn/20190620200933650.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1pISjEyM0NTRE4=,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><p>图 前台访问测试</p><p>可以看到，刚刚编辑的网页已经可以在前台正常显示了。</p><p>现在可以看一下数据库，刚刚创建的WordPress数据库里面已经创建了很多数据表。这些数据表是刚才配置WordPress时创建的，用于记录网站的各种动态数据。</p><p><img src="https://img-blog.csdnimg.cn/20190620200952965.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1pISjEyM0NTRE4=,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><p>图 数据库可视化查看</p><p>至此，搭建动态网站的实验顺利完成。</p><p>到现在为止，已经在虚拟机上搭建了<code>LAMP架构</code>，安装了WordPress软件并且经过了相关测试。然而现在所有的访问只能在虚拟机里，进行本地环回测试，外网不能访问到本地资源。为了能够实现公网访问，需要使用公网IP。我租用了阿里云的云服务器，在云服务器上重复实验三的步骤，搭建了LAMP架构，安装了WordPress软件。公网访问地址为：<code>http://39.107.245.116/WordPress/</code>，可供随时测试使用。</p><h4 id="3-3-5-编写动态网站"><a href="#3-3-5-编写动态网站" class="headerlink" title="3.3.5 编写动态网站"></a>3.3.5 编写动态网站</h4><h5 id="3-3-5-1-编写PHP文件"><a href="#3-3-5-1-编写PHP文件" class="headerlink" title="3.3.5.1 编写PHP文件"></a>3.3.5.1 编写PHP文件</h5><p>为了能够更加深入地体会动态网站的制作、对数据库的使用等问题，我尝试使用在阿里云中搭建好的LAMP架构，制作一个简易的学生信息管理动态网站。下面的PHP文件及网站制作过程参考了相关资料。</p><p>说明：此部分内容参考了<a href="https://www.cnblogs.com/yuxiuyan/p/5754717.html" target="_blank" rel="noopener"><code>PHP实现简单的学生信息管理系统（web版）</code></a>博客，点击可访问。</p><p>首先进入到HTTP服务器的根目录，即<code>/var/www/http</code>目录，创建一个名为<code>student</code>的文件夹，用来存放相关文件。</p><p><img src="https://img-blog.csdnimg.cn/20190620201014288.png#pic_center" alt="在这里插入图片描述"></p><p>图 创建文件夹</p><p>之后，在student目录下创建五个PHP文件，其功能见下表。</p><p>表-测试PHP文件及其功能表</p><table><thead><tr><th>文件</th><th>功能</th></tr></thead><tbody><tr><td>index.php</td><td>负责首页展现</td></tr><tr><td>menu.php</td><td>负责前台的菜单实现</td></tr><tr><td>add.php</td><td>负责添加页面的实现</td></tr><tr><td>edit.php</td><td>负责编辑页面的实现</td></tr><tr><td>action.php</td><td>负责对增删查改等操作的实现</td></tr></tbody></table><p>其中，编写<code>index.php</code>的界面如下图所示，此界面是使用FinalShell对阿里云进行远程ssh访问，编写文件时的截图。</p><p>在云服务器的使用过程中，通常会使用ssh工具，对服务器进行远程访问，也就是对服务器的某一端口(22号)进行访问通信。目前比较流行的ssh工具有<code>Xshell</code>、<code>FinalShell</code>、<code>Putty</code>、<code>SecureCRT</code>等。FinalShell是一体化的的服务器，网络管理软件，不仅是ssh客户端，还是功能强大的开发运维工具。本次实验过程中采用了FinalShell进行远程访问。</p><p><img src="https://img-blog.csdnimg.cn/20190620201034516.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1pISjEyM0NTRE4=,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><p>图 finalshell界面</p><h5 id="3-3-5-2-创建数据库"><a href="#3-3-5-2-创建数据库" class="headerlink" title="3.3.5.2 创建数据库"></a>3.3.5.2 创建数据库</h5><p>编写PHP文件完成之后，需要创建相应的数据库和数据表，并插入相关数据。接下来，通过finalshell，访问阿里云的MySQL数据库，为动态测试创建一个<code>test数据库</code>，在其中创建<code>stu数据表</code>，插入一条用于测试的信息。其中stu数据表需要包含<code>id</code>、<code>name</code>、<code>sex</code>、<code>age</code>、<code>classid</code>这五个字段，分别用于存放<code>id标识</code>、<code>姓名</code>、<code>性别</code>、<code>年龄</code>和<code>班级</code>。</p><p><img src="https://img-blog.csdnimg.cn/2019062020104868.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1pISjEyM0NTRE4=,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><p>图 创建数据库并插入数据</p><p>上图中，首先查看了现有的数据库，为了有效测试，新建了一个名为<code>test的数据库</code>。在该数据库中，创建<code>stu数据表</code>，同时插入了一条有效信息。提交更新后，退出数据库。</p><h5 id="3-3-5-3-测试动态网页"><a href="#3-3-5-3-测试动态网页" class="headerlink" title="3.3.5.3 测试动态网页"></a>3.3.5.3 测试动态网页</h5><p>下面连接数据库，在浏览器中，访问<code>http://39.107.245.116/student/</code>，出现下图界面。</p><p><img src="https://img-blog.csdnimg.cn/20190620201109709.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1pISjEyM0NTRE4=,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><p>图 连接数据失败</p><p>界面提示数据库连接失败，查找PHP文件中有关数据库连接的部分，发现问题原因是数据库密码未填写。</p><p><img src="https://img-blog.csdnimg.cn/20190620201123500.png#pic_center" alt="在这里插入图片描述"></p><p>图 问题定位</p><p>填写好密码之后，再次打开浏览器查看网页。</p><p><img src="https://img-blog.csdnimg.cn/20190620201134275.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1pISjEyM0NTRE4=,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><p>图 访问数据库</p><p>可以看到，网站已经正确连接了数据库，但是姓名数据无法正常显示。在测试删除、修改等操作时，也出现了部分错误。于是重新创建新的<code>test2数据表</code>。重新浏览网页，出现以下界面。</p><p><img src="https://img-blog.csdnimg.cn/20190620201149714.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1pISjEyM0NTRE4=,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><p>图 显示界面</p><p>现在学生数据全部不能正常显示了。重新仔细浏览PHP文件，找到了相关错误位置。</p><p><img src="https://img-blog.csdnimg.cn/20190620201207737.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1pISjEyM0NTRE4=,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><p>图 错误定位</p><p>现在网页是默认查找stu数据表，并且查找表头为<code>name</code>的数据。所以之前会出现姓名不显示的现象。改正之后，重新打开浏览器访问。</p><p><img src="https://img-blog.csdnimg.cn/20190620201218228.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1pISjEyM0NTRE4=,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><p>图 访问测试界面</p><p>点击修改，可以修改此条信息。</p><p><img src="https://img-blog.csdnimg.cn/20190620201239355.png#pic_center" alt="在这里插入图片描述"></p><p>图 修改信息界面</p><p>将<code>ZhangHoujin</code>修改为<code>HoujinZhang</code>，数据修改成功。</p><p>现在测试增加学生信息，增加界面如下图所示。</p><p><img src="https://img-blog.csdnimg.cn/20190620201252664.png#pic_center" alt="在这里插入图片描述"></p><p>图 增加学生信息界面</p><p>更新显示现在的数据，界面如下图所示：</p><p><img src="https://img-blog.csdnimg.cn/20190620201304715.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1pISjEyM0NTRE4=,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><p>图 增改完成后的界面</p><p>此时，在PHPMyAdmin中查看数据库信息。</p><p><img src="https://img-blog.csdnimg.cn/20190620201316218.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1pISjEyM0NTRE4=,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><p>图 数据库可视化查看</p><p>可以看到，数据库也运行正常，其中的数据也是正确的。</p><p>至此，简单的动态网页——学生数据库管理网站也已经制作完毕。其公网测试地址为：<code>http://39.107.245.116/student/index.php</code></p><h2 id="四、部分参考资料"><a href="#四、部分参考资料" class="headerlink" title="四、部分参考资料"></a>四、部分参考资料</h2><ol><li><a href="HTTPs://blog.csdn.net/Mind_programmonkey/article/details/74717433" target="_blank" rel="noopener">如何通过Linux+Apache+MySQL+PHP搭建简单的动态网站</a></li><li><a href="HTTPs://mozillazg.com/2015/08/let-us-build-a-web-server-part-3-zh-cn.html" target="_blank" rel="noopener">让我们一起来构建一个 Web 服务器（三）</a></li><li><a href="HTTPs://zhuanlan.zhihu.com/p/25461483" target="_blank" rel="noopener">Ubuntu 下快速部署安装 Apache + PHP + MySQL + PHPMyAdmin 笔记</a></li><li><a href="HTTPs://zhuanlan.zhihu.com/p/24945130" target="_blank" rel="noopener">搞一个网站：在Ubuntu搭建LAMP建站环境</a></li><li><a href="HTTP://www.paincker.com/website-primer-5" target="_blank" rel="noopener">网站搭建从零开始（五） WordPress的安装</a></li><li><a href="HTTPs://en.wikipedia.org/wiki/LAMP_(software_bundle)" target="_blank" rel="noopener">LAMP (software bundle)</a></li><li><a href="HTTPs://www.jianshu.com/p/649d2a0ebde5" target="_blank" rel="noopener">静态网页与动态网页的区别</a></li><li><a href="HTTPs://www.cnblogs.com/yuxiuyan/p/5754717.html" target="_blank" rel="noopener">PHP实现简单的学生信息管理系统（web版）</a></li><li><a href="HTTPs://stackoverflow.com/questions/39281594/error-1698-28000-access-denied-for-user-rootlocalhost" target="_blank" rel="noopener">ERROR 1698 (28000): Access denied for user ‘root’@’localhost’</a></li><li><a href="HTTPs://stackoverflow.com/questions/35931418/PHPMyAdmin-error-the-mbstring-extension-is-missing-please-check-your-PHP-co" target="_blank" rel="noopener">PHPMyAdmin - Error | The mbstring extension is missing. Please check your PHP configuration in Ubuntu 14.04 LTS</a></li><li><a href="HTTPs://stackoverflow.com/questions/10769148/extension-mysqli-is-missing-PHPMyAdmin-doesnt-work" target="_blank" rel="noopener">Extension mysqli is missing, PHPMyAdmin doesn’t work</a></li><li><a href="HTTPs://askubuntu.com/questions/891490/the-mysqlimysql-extension-is-missing-please-check-your-PHP-configuration" target="_blank" rel="noopener">The mysqli|mysql extension is missing. Please check your PHP configuration</a></li><li><a href="HTTPs://stackoverflow.com/questions/8645889/there-can-be-only-one-auto-column" target="_blank" rel="noopener">There can be only one auto column</a></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;山东科技大学&lt;br&gt;信息工程系&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;内容说明：本篇文章是《嵌入式操作系统》实训报告的&lt;strong&gt;第三部分&lt;/strong&gt;，使用WordPress实现了动态网站的搭建，使用php编写了学生信息管理系统的动态网页。&lt;br&gt;建议先阅读实训报告&lt;a href=&quot;https://blog.csdn.net/ZHJ123CSDN/article/details/93088187&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;第二部分&lt;/a&gt;&lt;br&gt;《嵌入式操作系统》实训报告完整内容介绍：&lt;br&gt;第一部分：&lt;a href=&quot;https://blog.csdn.net/ZHJ123CSDN/article/details/93074413&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;编译升级系统Linux内核&lt;/a&gt;&lt;br&gt;第二部分：&lt;a href=&quot;https://blog.csdn.net/ZHJ123CSDN/article/details/93088187&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;搭建HTTP服务器&lt;/a&gt;&lt;br&gt;第三部分：&lt;a href=&quot;https://blog.csdn.net/ZHJ123CSDN/article/details/93090488&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;搭建动态网站&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://47.95.13.239/Study/Linux/linux%E5%AE%9E%E8%AE%AD%20_%E5%BC%A0%E5%8E%9A%E4%BB%8A.pdf&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;完整实验报告PDF文件&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
    
      <category term="Linux" scheme="https://zhj0125.github.io/tags/Linux/"/>
    
      <category term="Linux实训" scheme="https://zhj0125.github.io/tags/Linux%E5%AE%9E%E8%AE%AD/"/>
    
      <category term="实验报告" scheme="https://zhj0125.github.io/tags/%E5%AE%9E%E9%AA%8C%E6%8A%A5%E5%91%8A/"/>
    
  </entry>
  
  <entry>
    <title>Linux实训——搭建HTTP服务器</title>
    <link href="https://zhj0125.github.io/2019/06/20/Linux%E5%AE%9E%E8%AE%AD%E2%80%94%E2%80%94%E6%90%AD%E5%BB%BAHTTP%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    <id>https://zhj0125.github.io/2019/06/20/Linux%E5%AE%9E%E8%AE%AD%E2%80%94%E2%80%94%E6%90%AD%E5%BB%BAHTTP%E6%9C%8D%E5%8A%A1%E5%99%A8/</id>
    <published>2019-06-20T10:32:34.000Z</published>
    <updated>2020-01-17T19:19:08.039Z</updated>
    
    <content type="html"><![CDATA[<p>山东科技大学<br>信息工程系</p><blockquote><p>内容说明：本篇文章是《嵌入式操作系统》实训报告的<strong>第二部分</strong>，实现了HTTP服务器的搭建<br>《嵌入式操作系统》实训报告内容介绍：<br>第一部分：<a href="https://blog.csdn.net/ZHJ123CSDN/article/details/93074413" target="_blank" rel="noopener">编译升级系统Linux内核</a><br>第二部分：<a href="https://blog.csdn.net/ZHJ123CSDN/article/details/93088187" target="_blank" rel="noopener">搭建HTTP服务器</a><br>第三部分：<a href="https://blog.csdn.net/ZHJ123CSDN/article/details/93090488" target="_blank" rel="noopener">搭建动态网站</a><br><a href="http://47.95.13.239/Study/Linux/linux%E5%AE%9E%E8%AE%AD%20_%E5%BC%A0%E5%8E%9A%E4%BB%8A.pdf" target="_blank" rel="noopener">完整实验报告PDF文件</a></p></blockquote><a id="more"></a><h2 id="二、构建HTTP服务器"><a href="#二、构建HTTP服务器" class="headerlink" title="二、构建HTTP服务器"></a>二、构建HTTP服务器</h2><h3 id="2-1-实验原理"><a href="#2-1-实验原理" class="headerlink" title="2.1 实验原理"></a>2.1 实验原理</h3><p>HTTP服务器，又称为WWW服务器、Web服务器，其主要功能是提供给客户端以信息浏览的服务。在Linux平台下，主流的HTTP服务器有<code>Apache、Nginx、Tomcat</code>等，其中应用最广泛的是Apache。</p><p>Apache HTTP服务器，是免费开源的跨平台的 Web服务器软件，绝大多数Apache HTTP Server实例都在Linux发行版上运行。Apache的模块支持非常丰富，虽在速度、性能上不及其他轻量级Web服务器，但属于重量级产品，功能丰富。</p><h3 id="2-2-实验分析"><a href="#2-2-实验分析" class="headerlink" title="2.2 实验分析"></a>2.2 实验分析</h3><p>本次实验要求构建一个HTTP服务器，而如果只是搭建HTTP服务器，仅仅需要安装Apache即可。因此，接下来我将安装Apache、编写简单的HTML网页并进行访问测试。</p><h3 id="2-3-实验过程记录"><a href="#2-3-实验过程记录" class="headerlink" title="2.3 实验过程记录"></a>2.3 实验过程记录</h3><h4 id="2-3-1-安装Apache"><a href="#2-3-1-安装Apache" class="headerlink" title="2.3.1 安装Apache"></a>2.3.1 安装Apache</h4><p>首先使用<code>sudo apt-get update</code>命令，对软件包进行更新。之后，使用<code>sudo apt-get install apache2</code>安装apache软件。为了测试Apache是否安装成功，可以直接访问 <code>http://your_server_IP_address</code> 查看。使用<code>ifconfig</code>命令可以查看到主机的IP地址。</p><p><img src="https://img-blog.csdnimg.cn/20190620182509566.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1pISjEyM0NTRE4=,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><p>图 查看本地IP</p><p>后来想到这一步不是必要的，可以直接使用localhost进行测试。</p><p>可以看到，这里显示了<code>127.0.0.1</code>这个用于本地环回的IP。现在打开虚拟机中的Firefox，在地址栏输入<code>http://127.0.0.1</code>并访问，可以看到，apache服务已经搭建成功。</p><p><img src="https://img-blog.csdnimg.cn/20190620182531743.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1pISjEyM0NTRE4=,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><p>图 apache访问测试</p><p>到目前为止，HTTP服务器已经可以算是搭建成功了，甚至现在已经可以上传静态网页到该服务器以提供访问服务了。</p><h4 id="2-3-2-编写网页测试"><a href="#2-3-2-编写网页测试" class="headerlink" title="2.3.2 编写网页测试"></a>2.3.2 编写网页测试</h4><p>现在编写一个简单的HTTP静态网页，上传到虚拟机服务器，检测是否能进行访问。在用户目录下，编写一个test.html文件，然后进入到<code>/var/www/html</code>目录，将<code>test.html</code>文件复制到该目录下。</p><p><img src="https://img-blog.csdnimg.cn/20190620182551451.png#pic_center" alt="在这里插入图片描述"></p><p>图 文件转移</p><p>现在该目录下应该有两个html文件，一个是原来的默认索引文件<code>index.html</code>，另一个就是用于测试的<code>test.html</code>。现在再次打开<code>Firefox</code>，访问<code>http://127.0.0.1/test.html</code>。</p><p><img src="https://img-blog.csdnimg.cn/20190620182616184.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1pISjEyM0NTRE4=,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><p>图 静态网页测试</p><p>所以说，现在“制作静态网页并访问”是完全没有问题的。</p><p>其中，<code>test.html</code>文件内容如下：</p><p><img src="https://img-blog.csdnimg.cn/20190620182625390.png#pic_center" alt="在这里插入图片描述"></p><p>图 测试内容</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;山东科技大学&lt;br&gt;信息工程系&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;内容说明：本篇文章是《嵌入式操作系统》实训报告的&lt;strong&gt;第二部分&lt;/strong&gt;，实现了HTTP服务器的搭建&lt;br&gt;《嵌入式操作系统》实训报告内容介绍：&lt;br&gt;第一部分：&lt;a href=&quot;https://blog.csdn.net/ZHJ123CSDN/article/details/93074413&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;编译升级系统Linux内核&lt;/a&gt;&lt;br&gt;第二部分：&lt;a href=&quot;https://blog.csdn.net/ZHJ123CSDN/article/details/93088187&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;搭建HTTP服务器&lt;/a&gt;&lt;br&gt;第三部分：&lt;a href=&quot;https://blog.csdn.net/ZHJ123CSDN/article/details/93090488&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;搭建动态网站&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://47.95.13.239/Study/Linux/linux%E5%AE%9E%E8%AE%AD%20_%E5%BC%A0%E5%8E%9A%E4%BB%8A.pdf&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;完整实验报告PDF文件&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
    
      <category term="Linux" scheme="https://zhj0125.github.io/tags/Linux/"/>
    
      <category term="Linux实训" scheme="https://zhj0125.github.io/tags/Linux%E5%AE%9E%E8%AE%AD/"/>
    
      <category term="实验报告" scheme="https://zhj0125.github.io/tags/%E5%AE%9E%E9%AA%8C%E6%8A%A5%E5%91%8A/"/>
    
  </entry>
  
  <entry>
    <title>Linux实训——编译升级Linux内核</title>
    <link href="https://zhj0125.github.io/2019/06/20/Linux%E5%AE%9E%E8%AE%AD%E2%80%94%E2%80%94%E7%BC%96%E8%AF%91%E5%8D%87%E7%BA%A7Linux%E5%86%85%E6%A0%B8/"/>
    <id>https://zhj0125.github.io/2019/06/20/Linux%E5%AE%9E%E8%AE%AD%E2%80%94%E2%80%94%E7%BC%96%E8%AF%91%E5%8D%87%E7%BA%A7Linux%E5%86%85%E6%A0%B8/</id>
    <published>2019-06-20T10:19:02.000Z</published>
    <updated>2020-01-17T19:49:44.391Z</updated>
    
    <content type="html"><![CDATA[<p>山东科技大学<br>信息工程系</p><blockquote><p>内容说明：本篇文章是《嵌入式操作系统》实训报告的<strong>第一部分</strong>，实现了编译和升级Linux内核<br>《嵌入式操作系统》实训报告内容介绍：<br>第一部分：<a href="https://blog.csdn.net/ZHJ123CSDN/article/details/93074413" target="_blank" rel="noopener">编译升级系统Linux内核</a><br>第二部分：<a href="https://blog.csdn.net/ZHJ123CSDN/article/details/93088187" target="_blank" rel="noopener">搭建HTTP服务器</a><br>第三部分：<a href="https://blog.csdn.net/ZHJ123CSDN/article/details/93090488" target="_blank" rel="noopener">搭建动态网站</a><br><a href="http://47.95.13.239/Study/Linux/linux%E5%AE%9E%E8%AE%AD%20_%E5%BC%A0%E5%8E%9A%E4%BB%8A.pdf" target="_blank" rel="noopener">完整实验报告PDF文件</a></p></blockquote><a id="more"></a><h2 id="一、编译升级Linux内核"><a href="#一、编译升级Linux内核" class="headerlink" title="一、编译升级Linux内核"></a>一、编译升级Linux内核</h2><h3 id="1-1-实验原理"><a href="#1-1-实验原理" class="headerlink" title="1.1 实验原理"></a>1.1 实验原理</h3><h4 id="1-1-1-Linux内核"><a href="#1-1-1-Linux内核" class="headerlink" title="1.1.1 Linux内核"></a>1.1.1 Linux内核</h4><p>Linux内核是Linux操作系统的核心，主要包括文件系统模块、内存管理模块、进程管理模块、进程间通信模块和网络接口模块5大模块。</p><p>表-Linux内核各模块功能</p><table><thead><tr><th>模块</th><th>功能</th></tr></thead><tbody><tr><td>文件系统模块</td><td>主要负责文件系统的管理，Linux内核支持ext2、ext3、ext4、gfs、及网络文件系统nfs、cifs等</td></tr><tr><td>内存管理模块</td><td>主要负责内存的资源分配</td></tr><tr><td>进程管理模块</td><td>主要负责进程的资源分配协调管理</td></tr><tr><td>进程间通信模块</td><td>主要负责协调进程之间的资源分配关系和进程资源的竞争分配</td></tr><tr><td>网络接口模块</td><td>主要负责对系统进行远程管理</td></tr></tbody></table><h4 id="1-1-2-升级内核"><a href="#1-1-2-升级内核" class="headerlink" title="1.1.2 升级内核"></a>1.1.2 升级内核</h4><p>Linux的内核承担着Linux操作系统的最为核心的任务，是其它程序和硬件等运行过程中的管理者：它要管理所有进程的内存，保证它们都能平等得到处理器的时隙。此外，它还提供程序和硬件之间的接口等功能。</p><p>通常，更新的内核会支持更多的硬件，具备更好的进程管理能力，运行速度更快、更稳定，并且一般会修复老版本中发现的许多漏洞等，经常性地选择升级更新的系统内核是Linux使用者的必要操作内容。</p><h3 id="1-2-实验过程记录"><a href="#1-2-实验过程记录" class="headerlink" title="1.2 实验过程记录"></a>1.2 实验过程记录</h3><h4 id="1-2-1-安装Ubuntu18-04虚拟环境"><a href="#1-2-1-安装Ubuntu18-04虚拟环境" class="headerlink" title="1.2.1 安装Ubuntu18.04虚拟环境"></a>1.2.1 安装Ubuntu18.04虚拟环境</h4><p>本次实验选用<code>VM VirtualBox</code>虚拟机，相较于<code>VMware</code>，<code>VirtualBox</code>虚拟机的优势在于：开源软件，免费使用；中文界面；占用空间较小等。</p><p>本次实验选用系统镜像为：<code>ubuntu-18.04.1-desktop-amd64.iso</code></p><p>在<code>VM VirtualBox</code>虚拟机软件中，安装<code>Ubuntu18.04</code>镜像文件，新建Ubuntu虚拟机。等待其自动安装完成即可。</p><p><img src="https://img-blog.csdnimg.cn/20190620173731130.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1pISjEyM0NTRE4=,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><p>图 VM VirtualBox安装Ubuntu虚拟环境</p><h4 id="1-2-2-软件更新"><a href="#1-2-2-软件更新" class="headerlink" title="1.2.2 软件更新"></a>1.2.2 软件更新</h4><p>安装Ubuntu虚拟环境成功后，首先使用<code>sudo apt-get update</code>命令，更新系统中的软件源。apt-get update命令会从存储库下载软件包列表并“更新”它们，以获取有关软件包及其依赖项的最新版本的信息。</p><p><img src="https://img-blog.csdnimg.cn/20190620173811478.png#pic_center" alt="在这里插入图片描述"></p><p>图 更新软件包列表</p><h4 id="1-2-3-查看当前内核版本"><a href="#1-2-3-查看当前内核版本" class="headerlink" title="1.2.3 查看当前内核版本"></a>1.2.3 查看当前内核版本</h4><p>为了能够下载合适的内核版本，在更新完成后，需要使用命令<code>umane –r</code>查看当前系统的内核版本。</p><p><img src="https://img-blog.csdnimg.cn/20190620173840945.png#pic_center" alt="在这里插入图片描述"></p><p>图 当前内核版本</p><p>输入命令查看当前的Linux内核版本，可以看到我当前的版本是<code>4.15.0-29-generic</code>。</p><h4 id="1-2-4-下载Linux内核"><a href="#1-2-4-下载Linux内核" class="headerlink" title="1.2.4 下载Linux内核"></a>1.2.4 下载Linux内核</h4><p>在GitHub上或其他下载源，下载新版本的Linux内核文件。其中需要注意的是，新版本与当前版本差距不应太大，避免造成更新后硬件不兼容的现象。因为我的当前内核版本为4.15，所以我找到了内核版本为4.16的内核文件。</p><p><img src="https://img-blog.csdnimg.cn/20190620173909913.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1pISjEyM0NTRE4=,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><p>图 新版本内核列表</p><p>可以看到，有两种版本的内核压缩包。可以选择任意一种类型下载，只是解压方式不同。本次选择<code>tar.gz</code>文件进行下载。直接在虚拟机Linux环境中的Firefox浏览器中进行下载即可。<br><img src="https://img-blog.csdnimg.cn/20190620173922484.png#pic_center" alt="在这里插入图片描述"></p><p>图 内核下载过程</p><p><code>Firefox</code>的默认下载位置是<code>~/Download</code>文件夹，等待下载完成，可在该文件夹下查看内核文件包。</p><p><img src="https://img-blog.csdnimg.cn/20190620174024818.png#pic_center" alt="在这里插入图片描述"></p><p>图 内核包下载位置</p><h4 id="1-2-5-安装编译工具"><a href="#1-2-5-安装编译工具" class="headerlink" title="1.2.5 安装编译工具"></a>1.2.5 安装编译工具</h4><p>由于编译内核的过程需要使用相关的编译工具，在编译之前需要对此进行安装。现在安装<code>make</code> ,<code>gcc</code>, <code>make-kpkg</code>,等编译内核相关的工具，以做好编译的准备工作。</p><p><img src="https://img-blog.csdnimg.cn/20190620174045767.png#pic_center" alt="在这里插入图片描述"></p><p>图 安装编译工具</p><p>安装部分编译工具时，会出现下图中的配置选项，选择默认的配置即可。</p><p><img src="https://img-blog.csdnimg.cn/20190620174059268.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1pISjEyM0NTRE4=,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><p>图 编译工具配置菜单</p><p>之后，检查<code>make</code>和<code>gcc</code>是否安装。</p><p><img src="https://img-blog.csdnimg.cn/20190620174156470.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1pISjEyM0NTRE4=,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><p>图 检查相关工具安装状态</p><p>可以看到，相关工具已经安装完成。</p><h4 id="1-2-6-解压内核源码"><a href="#1-2-6-解压内核源码" class="headerlink" title="1.2.6 解压内核源码"></a>1.2.6 解压内核源码</h4><p>进入到<code>/usr/src/</code>文件夹下，查看当前文件夹下的文件，将刚才下载的Linux内核压缩文件拷贝到当前目录下，以便于解压。</p><p><img src="https://img-blog.csdnimg.cn/20190620174222336.png#pic_center" alt="在这里插入图片描述"></p><p>图 转移内核文件</p><p>新建一个<code>kernel</code>目录，用于存放内核解压之后的文件。使用tar工具解压内核压缩文件至<code>kernel</code>目录。</p><p><img src="https://img-blog.csdnimg.cn/20190620174254762.png#pic_center" alt="在这里插入图片描述"></p><p>图 解压内核压缩包</p><p>解压完成之后，进入到<code>kernel</code>目录，查看该目录下的文件。</p><p><img src="https://img-blog.csdnimg.cn/20190620174307628.png#pic_center" alt="在这里插入图片描述"></p><p>图 查看内核文件</p><p>可以看到，内核解压后生成了一个名为<code>linux-4.16</code>的文件夹，该文件夹即为所需的内核文件。下面进入到该文件夹下，进行内核编译的准备工作。</p><h4 id="1-2-7-拷贝配置文件"><a href="#1-2-7-拷贝配置文件" class="headerlink" title="1.2.7 拷贝配置文件"></a>1.2.7 拷贝配置文件</h4><p>编译的过程需要使用相关的配置文件，可以选择将Linux原有的配置文件拷贝到当前目录下，或者在本机重新编译生成新的配置文件。本步骤采用第一种方式，复制原有配置文件至指定目录。复制结束后，查看是否拷贝成功。</p><p><img src="https://img-blog.csdnimg.cn/20190620174323672.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1pISjEyM0NTRE4=,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><p>图 复制配置文件</p><p>由于<code>.config</code>文件是隐藏文件，所以需要加-a参数，才能看到该文件。</p><h4 id="1-2-8-配置内核选项"><a href="#1-2-8-配置内核选项" class="headerlink" title="1.2.8 配置内核选项"></a>1.2.8 配置内核选项</h4><p>本步骤与第7步作用相同。第7步中，使用了原有的配置文件，直接复制到了工程文件夹下。同样可以在机器上，使用make编译生成新的配置文件，本步骤即为此方法。在使用make工具，编译<code>menuconfig</code>目标时，发生下图所示的错误，其原因为未安装bison工具，使用图中的命令安装该bison工具，问题得以解决。</p><p><img src="https://img-blog.csdnimg.cn/20190620174340872.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1pISjEyM0NTRE4=,size_16,color_FFFFFF,t_70#pic_center#pic_center" alt="在这里插入图片描述"></p><p>图 菜单编译配置文件</p><p>再次编译<code>menuconfig</code>目标时，出现如图所示的菜单界面，此时不需进行其余配置，直接选择<code>save</code>。选择<code>save</code>后，出现第二图中所示的界面，用于填写配置文件名，同样不需修改，直接使用默认的<code>.config</code>文件名即可。</p><p><img src="https://img-blog.csdnimg.cn/20190620174358464.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1pISjEyM0NTRE4=,size_16,color_FFFFFF,t_70#pic_center=600x700" alt="在这里插入图片描述"></p><p>图 Linux内核配置菜单</p><p><img src="https://img-blog.csdnimg.cn/20190620174406567.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1pISjEyM0NTRE4=,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><p>图 设置配置文件名</p><p>选择”OK”并退出即可。</p><h4 id="1-2-9-开始编译内核"><a href="#1-2-9-开始编译内核" class="headerlink" title="1.2.9 开始编译内核"></a>1.2.9 开始编译内核</h4><p>Linux内核可以使用<code>make</code>、<code>make-kpkg</code>等工具进行编译。本次实验使用<code>make-kpkg</code>工具来进行内核的编译。该编译工具的主要使用方法如下图所示。</p><p><img src="https://img-blog.csdnimg.cn/20190620174421226.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1pISjEyM0NTRE4=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>图 make-kpkg使用介绍</p><p>可以看到，这个<code>make-kpkg</code>需要跟着<code>options</code>和<code>target</code>，其中一个选项<code>--append-to-versions</code>是指定内核版本的附加内容，追加作为内核名称的一部分，我将该参数指定为<code>zhjv1</code>。</p><p>第二个参数是编译之后生成的目标，也就是之后会生成的编译之后的文件，现将目标设为<code>kernel-image</code>和<code>kernel-headers</code>。</p><p><img src="https://img-blog.csdnimg.cn/20190620174828990.png#pic_center" alt="在这里插入图片描述"></p><p>图 尝试编译内核</p><p>运行时，发现<code>make-kpkg comman not found.</code>说明该工具未安装，使用命令安装该工具。</p><p><img src="https://img-blog.csdnimg.cn/20190620174845737.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1pISjEyM0NTRE4=,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><p>图 查找错误原因</p><p>但是命令显示，该工具已经安装。原来是我将<code>make-kpkg</code>错写成了<code>make-kgkg</code>，下面改正错误，重新运行。</p><p>运行过程中，出现如下图所示的错误。</p><p><img src="https://img-blog.csdnimg.cn/20190620174854812.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1pISjEyM0NTRE4=,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><p>图 报错信息</p><p>经过查阅资料，发现应该是缺少相关的编译工具，现安装相关工具，如下图所示。</p><p><img src="https://img-blog.csdnimg.cn/20190620174907409.png#pic_center" alt="在这里插入图片描述"></p><p>图 安装缺少的编译工具</p><p>安装完成后，返回<code>linux-4.16</code>文件夹，重新进行内核编译。经过非常漫长(整个编译过程持续<code>5h29min</code>)的过程，终于编译完成。</p><p><img src="https://img-blog.csdnimg.cn/20190620174920848.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1pISjEyM0NTRE4=,size_16,color_FFFFFF,t_70#pic_center#pic_center=800x1000" alt="在这里插入图片描述"></p><p>图 编译成功及其用时</p><p>编译结束之后，在当前目录下的上一级目录，也就是<code>/usr/src/kernel</code>目录下，会生成两个内核文件。这两个文件就是我们需要的内核文件包。其中，<code>linux-headers</code>为Linux内核头文件的软件包，<code>linux-image</code>为Linux内核镜像文件包。</p><p><img src="https://img-blog.csdnimg.cn/20190620174938790.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1pISjEyM0NTRE4=,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><p>图 编译生成的文件</p><h4 id="1-2-10-安装编译好的内核包"><a href="#1-2-10-安装编译好的内核包" class="headerlink" title="1.2.10 安装编译好的内核包"></a>1.2.10 安装编译好的内核包</h4><p>在<code>/usr/src/kernel</code>目录下，使用<code>dpkg</code>工具安装编译好的内核包文件，先安装<code>linux-image</code>镜像软件包。</p><p><img src="https://img-blog.csdnimg.cn/2019062017495817.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1pISjEyM0NTRE4=,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><p>图 安装镜像内核包</p><p>之后安装<code>linux-headers</code>头文件软件包：</p><p><img src="https://img-blog.csdnimg.cn/20190620175023812.png#pic_center" alt="在这里插入图片描述"></p><p>图 安装头文件内核包</p><p>现在我使用<code>uname</code>命令，查看当前的内核版本。</p><p><img src="https://img-blog.csdnimg.cn/20190620175049399.png#pic_center" alt="在这里插入图片描述"><br>图 当前内核版本</p><p>现在还是<code>4.15.0</code>版本，并没有升级到<code>4.16</code>版本。</p><h4 id="1-2-11-关机重启"><a href="#1-2-11-关机重启" class="headerlink" title="1.2.11 关机重启"></a>1.2.11 关机重启</h4><p>为了刷新内核版本，现在重新启动虚拟机。启动之后，继续使用<code>uname</code>命令查看当前的内核版本。</p><p><img src="https://img-blog.csdnimg.cn/20190620175107233.png#pic_center" alt="在这里插入图片描述"></p><p>图 内核升级成功</p><p>Nice！可以看到，当前内核版本已经升级为<code>4.16.0</code>。与此同时，内核的名称还追加了我编译之前添加的版本识别参数<code>zhjv1</code>。</p><h4 id="1-2-12-卸载多余的内核版本"><a href="#1-2-12-卸载多余的内核版本" class="headerlink" title="1.2.12 卸载多余的内核版本"></a>1.2.12 卸载多余的内核版本</h4><p>现在来查看电脑中存在的各版本的内核。</p><p><img src="https://img-blog.csdnimg.cn/20190620175123186.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1pISjEyM0NTRE4=,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><p>图 现存的内核版本</p><p>可以看到，现在电脑中<code>4.15</code>版本的内核依然是安装状态，因为<code>4.16</code>版本的内核已经安装，<code>4.15</code>版本的可以卸载掉了。现在使用<code>apt</code>工具卸载<code>4.15</code>版本的内核。</p><p><img src="https://img-blog.csdnimg.cn/20190620175143495.png#pic_center" alt="在这里插入图片描述"></p><p>图 报错信息</p><p>可以看到，我使用apt管理工具，分别使用了<code>remove</code>和<code>purge</code>两个参数，都未能正确卸载旧内核。原因大概是，有其他进程正在使用<code>dpkg</code>或是占用了<code>apt</code>进程。</p><p>在网上查找的资料中，解决办法是更新引导，但更新引导之后，并没有起作用。现在看来，与引导更新的关系应该不大。</p><p><img src="https://img-blog.csdnimg.cn/20190620175401674.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1pISjEyM0NTRE4=,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><p>图 更新引导</p><p>没办法，我重启了虚拟机。再次尝试卸载旧内核，发现此时已经允许卸载。</p><p><img src="https://img-blog.csdnimg.cn/20190620175428550.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1pISjEyM0NTRE4=,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><p>图 卸载旧内核</p><p>卸载<code>linux_image</code>完成之后，旧版本的<code>linux_headers</code>以相同的操作卸载。</p><p><img src="https://img-blog.csdnimg.cn/20190620175545537.png#pic_center" alt="在这里插入图片描述"></p><p>图 卸载旧版本头文件内核包</p><p>卸载进程结束后，再次查看现有的linux内核版本。</p><p><img src="https://img-blog.csdnimg.cn/20190620175611218.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1pISjEyM0NTRE4=,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><p>图 查看内核列表</p><p>可以看到，虽然刚才已经卸载了<code>linux-image-4.15.0</code>内核，但其依然存在于电脑中，只是<code>deinstall</code>未安装罢了。想要彻底删除这些未安装的内核，还需要使用<code>dpkg</code>工具。</p><p><img src="https://img-blog.csdnimg.cn/20190620175626846.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1pISjEyM0NTRE4=,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><p>图 查看内核列表</p><p>使用<code>dpkg –P</code>命令，删除未安装的<code>linux-image-4.15.0</code>内核，结果出现报错。之后再次查看当前存在的内核，发现该内核已经消失。我认为报错的原因在于，<code>dpkg</code>工具未及时更新现存的内核版本，在发现错误后才算进行了一次更新。</p><p>接着继续删除多余未安装的<code>linux-modules</code>，卸载了多余的<code>linux-image-4.15.0-51-generic</code>。再次查看当前的内核版本。</p><p><img src="https://img-blog.csdnimg.cn/20190620175644462.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1pISjEyM0NTRE4=,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><p>图 查看内核列表</p><p>最终，我删除了不必要的4.15内核版本的文件，仅保留了未涉及的4.15内核文件和4.16版本的内核文件。现在再次查看当前内核版本，确保是4.16版本。</p><p><img src="https://img-blog.csdnimg.cn/20190620175703434.png#pic_center" alt="在这里插入图片描述"></p><p>图 最终内核版本</p><p>第一个实验顺利结束。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;山东科技大学&lt;br&gt;信息工程系&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;内容说明：本篇文章是《嵌入式操作系统》实训报告的&lt;strong&gt;第一部分&lt;/strong&gt;，实现了编译和升级Linux内核&lt;br&gt;《嵌入式操作系统》实训报告内容介绍：&lt;br&gt;第一部分：&lt;a href=&quot;https://blog.csdn.net/ZHJ123CSDN/article/details/93074413&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;编译升级系统Linux内核&lt;/a&gt;&lt;br&gt;第二部分：&lt;a href=&quot;https://blog.csdn.net/ZHJ123CSDN/article/details/93088187&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;搭建HTTP服务器&lt;/a&gt;&lt;br&gt;第三部分：&lt;a href=&quot;https://blog.csdn.net/ZHJ123CSDN/article/details/93090488&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;搭建动态网站&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://47.95.13.239/Study/Linux/linux%E5%AE%9E%E8%AE%AD%20_%E5%BC%A0%E5%8E%9A%E4%BB%8A.pdf&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;完整实验报告PDF文件&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
    
      <category term="Linux" scheme="https://zhj0125.github.io/tags/Linux/"/>
    
      <category term="Linux实训" scheme="https://zhj0125.github.io/tags/Linux%E5%AE%9E%E8%AE%AD/"/>
    
      <category term="实验报告" scheme="https://zhj0125.github.io/tags/%E5%AE%9E%E9%AA%8C%E6%8A%A5%E5%91%8A/"/>
    
  </entry>
  
  <entry>
    <title>Android——WebView网页应用</title>
    <link href="https://zhj0125.github.io/2019/06/20/Android%E2%80%94%E2%80%94WebView%E7%BD%91%E9%A1%B5%E5%BA%94%E7%94%A8/"/>
    <id>https://zhj0125.github.io/2019/06/20/Android%E2%80%94%E2%80%94WebView%E7%BD%91%E9%A1%B5%E5%BA%94%E7%94%A8/</id>
    <published>2019-06-20T09:30:21.000Z</published>
    <updated>2020-01-17T20:06:40.178Z</updated>
    
    <content type="html"><![CDATA[<p>实验报告</p><p>课程名称 Android应用编程实验</p><blockquote><p>实验名称：网页应用-WebView<br>实验目的：学习WebView的相关功能<br>实验仪器设备：电脑、Android Studio、Android手机<br>实验内容：</p><blockquote><p>1.应用WebView对象浏览网页<br>2.调用本地HTML网页文件的JavaScript<br>3.用Android程序操纵JavaScript对话框</p></blockquote></blockquote><a id="more"></a><h2 id="一、应用WebView对象浏览网页"><a href="#一、应用WebView对象浏览网页" class="headerlink" title="一、应用WebView对象浏览网页"></a>一、应用WebView对象浏览网页</h2><h3 id="1-1实验原理"><a href="#1-1实验原理" class="headerlink" title="1.1实验原理"></a>1.1实验原理</h3><p>WebKit是一个开源的浏览器引擎，WebKit内核具有非常好的网页解析机制，很多系统都使用WebKit做浏览器内核。在WebKit的API包中，最重要、最常用的类是Android.webKit. WebKit。</p><p>WebView类是WebKit模块Java层的视图类，所有需要使用Web浏览功能的Android应用程序都要创建该视图对象，用于显示和处理请求的网络资源。</p><h3 id="1-2实验过程记录"><a href="#1-2实验过程记录" class="headerlink" title="1.2实验过程记录"></a>1.2实验过程记录</h3><h4 id="1-2-1布局文件"><a href="#1-2-1布局文件" class="headerlink" title="1.2.1布局文件"></a>1.2.1布局文件</h4><p>为实现基本的相机程序效果，使用最简单的线性布局，通过组件的嵌套生成需要的布局。首先指定最外层的线性布局对齐方式为垂直布局，在其中嵌套一个LinearLayout布局，之后再编写EditText组件用来输入网站网址，加入一个button组件用于点击确定。之后在外层的线性布局中加入WebView组件用来展示需要显示的网页，如图1.1所示。</p><p><img src="https://img-blog.csdnimg.cn/20190601192720213.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1pISjEyM0NTRE4=,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><p>图1.1布局文件</p><h4 id="1-2-2控制文件"><a href="#1-2-2控制文件" class="headerlink" title="1.2.2控制文件"></a>1.2.2控制文件</h4><h5 id="1-2-2-1实例化对象"><a href="#1-2-2-1实例化对象" class="headerlink" title="1.2.2.1实例化对象"></a>1.2.2.1实例化对象</h5><p>在MainActivity.java文件中修改文件，以实现对程序的控制。首先如下图1.2所示实例化所需的对象。</p><p><img src="https://img-blog.csdnimg.cn/20190601192734385.png#pic_center" alt="在这里插入图片描述"></p><p>图1.2实例化对象</p><p>在上图1.2中，分别实例化了用于网页浏览的“WebView”类的“webView”对象、用于点击确定的“Button”类的“openWebBtn”对象、用于编辑输入网址的“EditText”类的“editText”。</p><h5 id="1-2-2-2重载构造函数"><a href="#1-2-2-2重载构造函数" class="headerlink" title="1.2.2.2重载构造函数"></a>1.2.2.2重载构造函数</h5><p>对构造函数进行修改，使其实现“关联布局文件和控制文件，设置按钮监听事件”的功能。如图1.3所示。</p><p> <img src="https://img-blog.csdnimg.cn/20190601192744339.png#pic_center" alt="在这里插入图片描述"></p><p>图1.3重载构造函数</p><p>通过findViewById方法关联图1.1中的相关组件，并为“openWeb”设置监听事件，以实现在鼠标之后，显示网页界面的功能。</p><h5 id="1-2-2-3编写mClick函数"><a href="#1-2-2-3编写mClick函数" class="headerlink" title="1.2.2.3编写mClick函数"></a>1.2.2.3编写mClick函数</h5><p>为按钮的监听事件编写 mClick 类，以实现拍照和退出功能。如图1.4所示：</p><p> <img src="https://img-blog.csdnimg.cn/2019060119275334.png#pic_center" alt="在这里插入图片描述"></p><p>图1.4 mClick类</p><p>上图中，构造了一个继承于OnClickListener的mClick类。首先定义一个url字符串，在点击按钮之后，通过getText().toString()方法获取文本框中的字符串，将其赋值给url。通过findViewById方法将webView对象与布局文件中的组件相关联，通过loadUrl方法设置网页的网址，从而显示网页。</p><h4 id="1-2-3添加权限"><a href="#1-2-3添加权限" class="headerlink" title="1.2.3添加权限"></a>1.2.3添加权限</h4><p>由于程序中需要实现访问网页的功能，所以需要在程序中添加允许程序网络访问的权限。如下图1.5所示，在 AndroidManifest.xml 文件中添加下列信息，以申请权限。<br> <img src="https://img-blog.csdnimg.cn/20190601192801883.png#pic_center" alt="在这里插入图片描述"></p><p>图1.5添加权限</p><h4 id="1-2-4模拟器测试"><a href="#1-2-4模拟器测试" class="headerlink" title="1.2.4模拟器测试"></a>1.2.4模拟器测试</h4><p>编写程序结束之后，打开AndroidStudio中的安卓模拟器进行测试，但程序不能正常运行。</p><h3 id="1-3实验过程中存在的问题及解决方案"><a href="#1-3实验过程中存在的问题及解决方案" class="headerlink" title="1.3实验过程中存在的问题及解决方案"></a>1.3实验过程中存在的问题及解决方案</h3><h4 id="1-3-1调用系统自带的浏览器"><a href="#1-3-1调用系统自带的浏览器" class="headerlink" title="1.3.1调用系统自带的浏览器"></a>1.3.1调用系统自带的浏览器</h4><p>在之前的程序中，使用了webView.loadUrl () 方法去加载网页的内容。在安卓7.1.1系统的手机模拟器下，运行结果如图1.6所示：</p><p><img src="https://img-blog.csdnimg.cn/20190601192823210.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1pISjEyM0NTRE4=,size_16,color_FFFFFF,t_70#pic_center=300x600" alt="在这里插入图片描述"></p><p>图1.6 调用系统浏览器</p><p><img src="https://img-blog.csdnimg.cn/20190601192837440.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1pISjEyM0NTRE4=,size_16,color_FFFFFF,t_70#pic_center=300x600" alt="在这里插入图片描述"></p><p>图1.7 原始效果</p><p>在输入URL之后，点击“打开网页”按钮，会出现上图1.6所示的系统提示。该提示意思是，询问用户是以WebView Browser浏览器打开，还是以Chrome浏览器打开网页。</p><p>点击选择WebView Browser浏览器打开网页，则会显示如图1.7所示的效果。这样的话，系统会在程序之外调用WebView Browser浏览器来显示网页。</p><p>也就是说，用这种方式打开的网页资源是依赖于系统自带的浏览器，而不是WebView组件，若想用自身WebView组件去实现，需要去调用setWebViewClient()方法来实现。现在将代码修改，添加上setWebViewClient()方法。代码如下图1.8所示：</p><p> <img src="https://img-blog.csdnimg.cn/20190601192852238.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1pISjEyM0NTRE4=,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><p>图1.8 添加setWebViewClient()方法</p><p>在setWebViewClient()方法中重载shouldOverrideUrlLoading，返回值若为true将用webview，false则是系统自身浏览器，现在将返回值改为true，使程序调用webview。<br>重新运行安卓模拟器，显示的效果如下图1.9所示：</p><p> <img src="https://img-blog.csdnimg.cn/20190601192902627.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1pISjEyM0NTRE4=,size_16,color_FFFFFF,t_70#pic_center=300x600" alt="在这里插入图片描述"></p><p>图1.9 改进webview效果</p><p>现在可以看到，在手机界面的上半部分，是EditText和button组件，下半部分是webview组件。程序没有调用系统自带的浏览器，而是使用了内嵌的webview来浏览网页的。</p><h4 id="1-3-2-返回键问题"><a href="#1-3-2-返回键问题" class="headerlink" title="1.3.2 返回键问题"></a>1.3.2 返回键问题</h4><p>现在已经可以实现不依靠系统自带浏览器打开我们的url资源，但这里会出现一个问题，只要我们一点手机上的返回键，整个程序就直接退出了。我们想要的应该是和浏览器一样的效果，即按下返回键应该还是向后退一步，回到之前浏览的网页，而不是直接退出程序。</p><p>解决方法，是去监听物理返回键并做出对应的相应事件，即重载onKeyDown函数，如图1.10所示：</p><p> <img src="https://img-blog.csdnimg.cn/20190601192916147.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1pISjEyM0NTRE4=,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><p>图1.10 重载onKeyDown方法</p><p>上图中，重载了onKeyDown方法，具体含义为：keyCode代表按键的数字标识符，通过该标识符判断是否为返回键。如果是返回键，则判断目前的网页是否可以返回，如果可以返回，则调用goBack方法，返回网页前一页面；如果不能返回，则退出该程序。</p><h4 id="1-3-3动态权限问题"><a href="#1-3-3动态权限问题" class="headerlink" title="1.3.3动态权限问题"></a>1.3.3动态权限问题</h4><p>Android 6.0 之前我们申请权限直接在配置文件中配置一下即可，但是6.0之后，谷歌官方将权限分为普通权限和危险权限。对于危险权限来说，我们就需要进行动态设置。经过查阅资料，发现访问互联网的权限并不属于危险权限，所以暂时不考虑动态申请了。</p><h3 id="1-4实验结果"><a href="#1-4实验结果" class="headerlink" title="1.4实验结果"></a>1.4实验结果</h3><p>现在已经实现了实验所要求的功能，在Android7.1.1版本的模拟器中运行，并将运行过程录制的<a href="http://47.95.13.239/Study/Android/show/ex6_1.mp4" target="_blank" rel="noopener">视频记录如下</a></p><h2 id="二、调用本地HTML网页文件的JavaScript"><a href="#二、调用本地HTML网页文件的JavaScript" class="headerlink" title="二、调用本地HTML网页文件的JavaScript"></a>二、调用本地HTML网页文件的JavaScript</h2><h3 id="2-1实验原理"><a href="#2-1实验原理" class="headerlink" title="2.1实验原理"></a>2.1实验原理</h3><p>WebSettings类用于对WebView对象的属性进行设置；WebViewClient类用于对WebView对象中各种事件的处理，通过重写该方法，可以对WebView对象在页面载入、资源载入、页面访问错误等情况发生时进行各种操作；WebChromeClient是辅助WebView处理JavaScript对话框、网页的标题、网页的图标、加载进度条等操作的类。用户可以在Android程序中调用本地的HTML网页文件的JavaScript。</p><h3 id="2-2实验过程记录"><a href="#2-2实验过程记录" class="headerlink" title="2.2实验过程记录"></a>2.2实验过程记录</h3><h4 id="2-2-1布局文件"><a href="#2-2-1布局文件" class="headerlink" title="2.2.1布局文件"></a>2.2.1布局文件</h4><p>本次布局使用相对布局，需要添加的组件仅仅是一个WebView组件，如图2.1所示。</p><p> <img src="https://img-blog.csdnimg.cn/20190601192956802.png#pic_center" alt="在这里插入图片描述"></p><p>图2.1 布局文件</p><h4 id="2-2-2控制文件"><a href="#2-2-2控制文件" class="headerlink" title="2.2.2控制文件"></a>2.2.2控制文件</h4><h5 id="2-2-2-1实例化对象"><a href="#2-2-2-1实例化对象" class="headerlink" title="2.2.2.1实例化对象"></a>2.2.2.1实例化对象</h5><p>在MainActivity.java文件中修改文件，以实现对程序的控制。首先如下图1.2所示实例化所需的对象。</p><p> <img src="https://img-blog.csdnimg.cn/20190601193008807.png#pic_center" alt="在这里插入图片描述"></p><p>图2.2实例化对象</p><p>在上图2.2中，分别实例化了用于网页浏览的“WebView”类的“webView”对象、用于线程间通信的“Handler”类的“handler”对象、用于处理JavaScript的alert对话框的“MWebChromeClient”类的“WebChromeClient”对象。</p><h5 id="2-2-2-2重载构造函数"><a href="#2-2-2-2重载构造函数" class="headerlink" title="2.2.2.2重载构造函数"></a>2.2.2.2重载构造函数</h5><p>对构造函数进行修改，使其实现“关联布局文件和控制文件，设置WebView属性、加载本地HTML资源”的功能。如图2.3所示。</p><p> <img src="https://img-blog.csdnimg.cn/20190601193016890.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1pISjEyM0NTRE4=,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><p>图2.3重载构造函数</p><p>通过findViewById方法关联图2.1中的相关组件，通过WebSettings类设置WebView的相关属性。属性设置的相关含义见表2.1。</p><p>表2.1WebSettings类的方法</p><table><thead><tr><th>方法</th><th>功能</th></tr></thead><tbody><tr><td>setAllowFileAccess(false)</td><td>设置在WebView内部是否允许访问文件，默认允许访问。</td></tr><tr><td>setJavaScriptEnabled(true)</td><td>设置支持JavaScript脚本</td></tr><tr><td>setBuiltInZoomControls(true)</td><td>设置支持缩放</td></tr><tr><td>setDefaultFontSize(24)</td><td>设置默认字体大小</td></tr></tbody></table><p>之后通过addJavascriptInterface方法，设置JavaScript接口，实现Android与JavaScript的通信。通过loadUrl方法设置需要打开的HTML文件。</p><h5 id="2-2-2-3编写MObiect类"><a href="#2-2-2-3编写MObiect类" class="headerlink" title="2.2.2.3编写MObiect类"></a>2.2.2.3编写MObiect类</h5><p>下面编写MObiect类，用来调用JavaScript，代码如下图2.4所示：</p><p> <img src="https://img-blog.csdnimg.cn/20190601193034368.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1pISjEyM0NTRE4=,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><p>图2.4编写MObiect类</p><p>这里让我奇怪的是，android_show()这个函数没有被调用过，估计程序会出现问题。</p><h5 id="2-2-2-4编写MWebChromeClient类"><a href="#2-2-2-4编写MWebChromeClient类" class="headerlink" title="2.2.2.4编写MWebChromeClient类"></a>2.2.2.4编写MWebChromeClient类</h5><p>编写MWebChromeClient类，用以在Android中响应JavaScript的调用，如图2.5所示：</p><p> <img src="https://img-blog.csdnimg.cn/20190601193057483.png#pic_center" alt="在这里插入图片描述"></p><p>图2.5 编写MWebChromeClient类</p><h5 id="2-2-2-5编写本地HTML资源文件"><a href="#2-2-2-5编写本地HTML资源文件" class="headerlink" title="2.2.2.5编写本地HTML资源文件"></a>2.2.2.5编写本地HTML资源文件</h5><p>为了实现该程序“调用本地HTML网页文件中的JavaScript”的功能，需要新建一个HTML文件，如图2.15所示，创建asset文件夹。之后在asset文件夹下，创建test.html网页文件。并在文件中写入相关代码，如图2.16所示。</p><p> <img src="https://img-blog.csdnimg.cn/20190601193225743.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1pISjEyM0NTRE4=,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><p>图2.16 HTML文件</p><p><img src="https://img-blog.csdnimg.cn/20190601193234425.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1pISjEyM0NTRE4=,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><p>图2.15创建asset文件夹</p><h4 id="2-2-3模拟器测试"><a href="#2-2-3模拟器测试" class="headerlink" title="2.2.3模拟器测试"></a>2.2.3模拟器测试</h4><p>编写代码完成，启动安卓模拟器进行测试。程序运行不正常，只显示了空白的页面，如图2.6所示：</p><p> <img src="https://img-blog.csdnimg.cn/20190601193246124.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1pISjEyM0NTRE4=,size_16,color_FFFFFF,t_70#pic_center=300x600" alt="在这里插入图片描述"></p><p>图2.6空白界面</p><h3 id="2-3实验过程中存在的问题及解决方案"><a href="#2-3实验过程中存在的问题及解决方案" class="headerlink" title="2.3实验过程中存在的问题及解决方案"></a>2.3实验过程中存在的问题及解决方案</h3><p>首次启动模拟器运行时，正如上图2.6所示，程序不能正常运行，显示界面为空白。仔细阅读代码可以看到，在onCreate方法中，我已经使用了loadUrl方法来设置本地的HTML资源路径，如图2.7红框中的部分所示。为了确定是不是本地的HTML文本资源有问题，我修改了HTML文件，添加了如图2.8红框中的部分。</p><p> <img src="https://img-blog.csdnimg.cn/20190601193306591.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1pISjEyM0NTRE4=,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><p>图2.7控制文件</p><p> <img src="https://img-blog.csdnimg.cn/20190601193324689.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1pISjEyM0NTRE4=,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><p>图2.8 添加测试语句</p><p>在HTML文件中添加该语句之后，如果程序能够正常访问本地HTML资源，应该会在手机界面显示hello段落，如果不能显示“hello”的话，说明本地HTML资源有问题。<br>下面运行模拟器进行测试，测试结果如下图2.9所示：</p><p> <img src="https://img-blog.csdnimg.cn/20190601193333899.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1pISjEyM0NTRE4=,size_16,color_FFFFFF,t_70#pic_center=300x600" alt="在这里插入图片描述"></p><p>图2.9测试</p><p>可以看到界面中显示了hello，说明程序确实已经访问到了本地的HTML文件。出现刚才的不显示现象，是因为Script脚本这方面出现了某些问题。</p><p>之后我注意到了之前看到的android_show()这个函数，如图2.10红框所示。它在整个程序中是没有被调用过的，我怀疑是这里出现了问题，于是阅读这段代码。</p><p> <img src="https://img-blog.csdnimg.cn/20190601193342882.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1pISjEyM0NTRE4=,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><p>图2.10未调用的函数</p><p>可以看到这段代码中，应该是用handler在Android和js之间传递了信息，通过loadUrl()方法，调用JavaScript中的show_alert()函数，以实现某些功能。但是再回到test.html文件中，发现根本就没有写show_alert () 函数，只写了一个名为addAll的function。我以为是程序错了，就将test.html文件中的addAll函数改名成了show_alert () 。运行程序发现，依然不显示文字。</p><p>最后通过与同学的交流，发现问题出现在test.html文件中，如图2.11红框中所示。</p><p> <img src="https://img-blog.csdnimg.cn/20190601193349471.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1pISjEyM0NTRE4=,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><p>图2.11 错误定位</p><p>问题出现在红色箭头所指的位置。通过查阅资料发现，document.write是JavaScript中对document.open所开启的文档流操作的API方法，它能够直接在文档流中写入字符串，在本程序中，使用了带格式的文本字符串，也就可以将HTML格式的文本写入到文档流中。之前的错误在于，没有将</b></html>作为字符串输入文档流，破坏了HTML文本标记语言的格式，导致文本不能正常显示。</p><p>现在运行程序，可以看到如下图2.12所示的界面。</p><p> <img src="https://img-blog.csdnimg.cn/20190601193409108.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1pISjEyM0NTRE4=,size_16,color_FFFFFF,t_70#pic_center=300x600" alt="在这里插入图片描述"></p><p>图2.12 显示界面</p><p>虽然现在看来程序算是运行正常，但是回到编译器中看看代码，发现刚才的android_show()依然未被调用过。我怀疑android_show()函数并不没有起到调用JavaScript的功能，于是将该函数中的内容删除，只保留函数名，改成如下图2.13所示的内容。</p><p> <img src="https://img-blog.csdnimg.cn/20190601193439250.png#pic_center" alt="在这里插入图片描述"></p><p>图2.13 修改文件</p><p>重新在模拟器运行程序，结果程序正常显示，效果与图2.12一致。这说明android_show()函数确实没有起作用。经过查阅资料得知，该程序在JS调用Android的过程中，采用的是addJavascriptInterface()方法，通过该方法将 Java 对象和 JS 对象进行映射。程序中定义的MObject类，也就是一个JavaScript接口函数，其中最重要的就是写上“@JavascriptInterface”来表明它是一个JavaScript接口，同时加上这个也是因为安全问题。其他内容在本次程序中暂时没有用到。程序中如图2.14所示的代码，将MObjcet类的对象映射到js的test对象，再通过document.write方法将文本流输出到手机界面。</p><p> <img src="https://img-blog.csdnimg.cn/20190601193448829.png#pic_center" alt="在这里插入图片描述"></p><p>图2.14 对象映射</p><h3 id="2-4实验结果"><a href="#2-4实验结果" class="headerlink" title="2.4实验结果"></a>2.4实验结果</h3><p>现在已经实现了实验所要求的功能，在Android7.1.1版本的模拟器中运行，运行过程<a href="http://47.95.13.239/Study/Android/show/ex6_2.mp4" target="_blank" rel="noopener">录制的视频如下</a></p><h2 id="三、用Android程序操纵JavaScript对话框"><a href="#三、用Android程序操纵JavaScript对话框" class="headerlink" title="三、用Android程序操纵JavaScript对话框"></a>三、用Android程序操纵JavaScript对话框</h2><h3 id="3-1实验原理"><a href="#3-1实验原理" class="headerlink" title="3.1实验原理"></a>3.1实验原理</h3><p>通过addJavascriptInterface()方法实现Java 对象和 JS 对象进行映射，在script脚本标签中定义show_alert()函数，通过alert()方法描述警告框，并通过onJsAlert()方法进行显示处理。</p><h3 id="3-2实验过程记录"><a href="#3-2实验过程记录" class="headerlink" title="3.2实验过程记录"></a>3.2实验过程记录</h3><p>由于例题6_3与例题6_2大段代码相似，其中“布局文件”和“控制文件”的代码与例题6_3相同，下面不再重复记录这两部分。</p><h4 id="3-2-1编写HTML文件"><a href="#3-2-1编写HTML文件" class="headerlink" title="3.2.1编写HTML文件"></a>3.2.1编写HTML文件</h4><p>下面对HTML文件进行编写，如图3.1所示：</p><p> <img src="https://img-blog.csdnimg.cn/20190601193511371.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1pISjEyM0NTRE4=,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><p>图3.1HTML文件</p><p>上图3.1中，同样是编写了一个<code>&lt;script&gt;</code>标签，用来描述脚本的功能。之后在网页的主体<code>&lt;body&gt;</code>部分，添加了一个用于创建html表单的<code>&lt;form&gt;</code>标签，并在其中添加了两个<code>&lt;input&gt;</code>标签，分别用来表示页面中的文本输入框和提交按钮。其中“onclick=”window.test.android_show()””表示调用被程序标记为test的实例对象的函数。</p><h4 id="3-2-2模拟器测试"><a href="#3-2-2模拟器测试" class="headerlink" title="3.2.2模拟器测试"></a>3.2.2模拟器测试</h4><p>将编写完成的程序在安卓模拟器上运行，查看运行结果，如图3.2所示。</p><p> <img src="https://img-blog.csdnimg.cn/20190601193518142.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1pISjEyM0NTRE4=,size_16,color_FFFFFF,t_70#pic_center=300x600" alt="在这里插入图片描述"></p><p>图3.2运行截图</p><p>在界面的顶部输入测试字符串“zhanghoujin”，点击顶部右侧的“call Android”按钮进行提交，此时会在页面的底部出现一个Toast提示框，输出“Hello zhanghoujin”字样。</p><h3 id="3-3实验过程中存在的问题及解决方案"><a href="#3-3实验过程中存在的问题及解决方案" class="headerlink" title="3.3实验过程中存在的问题及解决方案"></a>3.3实验过程中存在的问题及解决方案</h3><p>因为有了例题6_2的经验，在此次例题6_3中未出现明显的问题。</p><h3 id="3-4实验结果"><a href="#3-4实验结果" class="headerlink" title="3.4实验结果"></a>3.4实验结果</h3><p>现在已经实现了实验所要求的功能，在Android7.1.1版本的模拟器中运行，运行过程<a href="http://47.95.13.239/Study/Android/show/ex6_3.mp4" target="_blank" rel="noopener">录制的视频如下</a></p><h2 id="四、源代码"><a href="#四、源代码" class="headerlink" title="四、源代码"></a>四、源代码</h2><p>我已经将整理过的该项目的源代码上传到了GitHub：<a href="https://github.com/ZHJ0125/AndroidLeaning" target="_blank" rel="noopener">https://github.com/ZHJ0125/AndroidLeaning</a></p><h3 id="4-1-ex6-1"><a href="#4-1-ex6-1" class="headerlink" title="4.1 ex6_1"></a>4.1 ex6_1</h3><h4 id="4-1-1-activity-main-xml"><a href="#4-1-1-activity-main-xml" class="headerlink" title="4.1.1 activity_main.xml"></a>4.1.1 activity_main.xml</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:orientation</span>=<span class="string">"vertical"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_gravity</span>=<span class="string">"center_horizontal"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:gravity</span>=<span class="string">"center"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">LinearLayout</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">"@+id/LinearLayout1"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">EditText</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">"270dp"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:id</span>=<span class="string">"@+id/editText1"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:id</span>=<span class="string">"@+id/button1"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:width</span>=<span class="string">"1dp"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:text</span>=<span class="string">"打开网页"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">WebView</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">"@+id/webView1"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="4-1-2-MainActivity-java"><a href="#4-1-2-MainActivity-java" class="headerlink" title="4.1.2 MainActivity.java"></a>4.1.2 MainActivity.java</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> zhj.com.ex6_1;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.app.Activity;</span><br><span class="line"><span class="keyword">import</span> android.os.Bundle;</span><br><span class="line"><span class="keyword">import</span> android.view.KeyEvent;</span><br><span class="line"><span class="keyword">import</span> android.view.View;</span><br><span class="line"><span class="keyword">import</span> android.view.View.OnClickListener;</span><br><span class="line"><span class="keyword">import</span> android.webkit.WebView;</span><br><span class="line"><span class="keyword">import</span> android.webkit.WebViewClient;</span><br><span class="line"><span class="keyword">import</span> android.widget.Button;</span><br><span class="line"><span class="keyword">import</span> android.widget.EditText;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> <span class="keyword">extends</span> <span class="title">Activity</span> </span>&#123;</span><br><span class="line">    WebView webView;</span><br><span class="line">    Button openWebBtn;</span><br><span class="line">    EditText editText;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_main);</span><br><span class="line">        openWebBtn = (Button) findViewById(R.id.button1);</span><br><span class="line">        editText = (EditText)findViewById(R.id.editText1);</span><br><span class="line">        openWebBtn.setOnClickListener(<span class="keyword">new</span> mClick());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">mClick</span> <span class="keyword">implements</span> <span class="title">OnClickListener</span></span>&#123;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</span><br><span class="line">            String url = editText.getText().toString();</span><br><span class="line">            webView = (WebView)findViewById(R.id.webView1);</span><br><span class="line">            webView.setWebViewClient(<span class="keyword">new</span> WebViewClient() &#123;</span><br><span class="line">                <span class="comment">/**</span></span><br><span class="line"><span class="comment">                 * 重写shouldOverrideUrlLoading，返回值若为true将用webview，false则是系统自身浏览器</span></span><br><span class="line"><span class="comment">                 */</span></span><br><span class="line">                <span class="meta">@Override</span></span><br><span class="line">                <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">shouldOverrideUrlLoading</span><span class="params">(WebView view, String url)</span> </span>&#123;</span><br><span class="line">                    view.loadUrl(url);</span><br><span class="line">                    <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;);</span><br><span class="line">            webView.loadUrl(<span class="string">"http://"</span> + url);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">onKeyDown</span><span class="params">(<span class="keyword">int</span> keyCode, KeyEvent event)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (keyCode == KeyEvent.KEYCODE_BACK) &#123;</span><br><span class="line">            <span class="keyword">if</span> (webView.canGoBack()) &#123;</span><br><span class="line">                webView.goBack();</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                System.exit(<span class="number">0</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">super</span>.onKeyDown(keyCode, event);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="4-1-3-AndroidManifest-xml"><a href="#4-1-3-AndroidManifest-xml" class="headerlink" title="4.1.3 AndroidManifest.xml"></a>4.1.3 AndroidManifest.xml</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">manifest</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">package</span>=<span class="string">"zhj.com.ex6_1"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">application</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:allowBackup</span>=<span class="string">"true"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:icon</span>=<span class="string">"@mipmap/ic_launcher"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:label</span>=<span class="string">"@string/app_name"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:roundIcon</span>=<span class="string">"@mipmap/ic_launcher_round"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:supportsRtl</span>=<span class="string">"true"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:theme</span>=<span class="string">"@style/AppTheme"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">activity</span> <span class="attr">android:name</span>=<span class="string">".MainActivity"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">intent-filter</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">action</span> <span class="attr">android:name</span>=<span class="string">"android.intent.action.MAIN"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">                <span class="tag">&lt;<span class="name">category</span> <span class="attr">android:name</span>=<span class="string">"android.intent.category.LAUNCHER"</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">intent-filter</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">activity</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">application</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">"android.permission.INTERNET"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">manifest</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="4-2-ex6-2"><a href="#4-2-ex6-2" class="headerlink" title="4.2 ex6_2"></a>4.2 ex6_2</h3><h4 id="4-2-1-activity-main-xml"><a href="#4-2-1-activity-main-xml" class="headerlink" title="4.2.1 activity_main.xml"></a>4.2.1 activity_main.xml</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:orientation</span>=<span class="string">"vertical"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"30dp"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">"@+id/hello"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">WebView</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">"@+id/webView1"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="4-2-2-MainActivity-java"><a href="#4-2-2-MainActivity-java" class="headerlink" title="4.2.2 MainActivity.java"></a>4.2.2 MainActivity.java</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> zhj.com.ex6_2;</span><br><span class="line"><span class="keyword">import</span> android.app.Activity;</span><br><span class="line"><span class="keyword">import</span> android.os.Bundle;</span><br><span class="line"><span class="keyword">import</span> android.os.Handler;</span><br><span class="line"><span class="keyword">import</span> android.webkit.JsResult;</span><br><span class="line"><span class="keyword">import</span> android.webkit.WebChromeClient;</span><br><span class="line"><span class="keyword">import</span> android.webkit.WebSettings;</span><br><span class="line"><span class="keyword">import</span> android.webkit.WebView;</span><br><span class="line"><span class="keyword">import</span> android.webkit.JavascriptInterface;</span><br><span class="line"><span class="keyword">import</span> android.widget.TextView;</span><br><span class="line"><span class="keyword">import</span> android.widget.Toast;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> <span class="keyword">extends</span> <span class="title">Activity</span> </span>&#123;</span><br><span class="line">    WebView webView;</span><br><span class="line">    Handler handler = <span class="keyword">new</span> Handler();</span><br><span class="line">    TextView textView;</span><br><span class="line">    MWebChromeClient mWebChromeClient;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_main);</span><br><span class="line">        webView = (WebView)findViewById(R.id.webView1);</span><br><span class="line">        textView = (TextView) findViewById(R.id.hello);</span><br><span class="line">        WebSettings webSettings = webView.getSettings();</span><br><span class="line">        webSettings.setAllowFileAccess(<span class="keyword">true</span>);</span><br><span class="line">        webSettings.setJavaScriptEnabled(<span class="keyword">true</span>);</span><br><span class="line">        webSettings.setBuiltInZoomControls(<span class="keyword">true</span>);</span><br><span class="line">        webSettings.setDefaultFontSize(<span class="number">24</span>);</span><br><span class="line">        MObject mObject = <span class="keyword">new</span> MObject();</span><br><span class="line">        webView.addJavascriptInterface(mObject, <span class="string">"test"</span>);</span><br><span class="line">        mWebChromeClient = <span class="keyword">new</span> MWebChromeClient();</span><br><span class="line">        webView.setWebChromeClient(mWebChromeClient);</span><br><span class="line">        webView.loadUrl(<span class="string">"file:///android_asset/test.html"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">MObject</span> <span class="keyword">extends</span> <span class="title">Object</span></span>&#123;</span><br><span class="line">        <span class="meta">@JavascriptInterface</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">android_show</span><span class="params">()</span></span>&#123;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">MWebChromeClient</span> <span class="keyword">extends</span> <span class="title">WebChromeClient</span></span>&#123;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">onJsAlert</span> <span class="params">(WebView view, String url,String message, JsResult result)</span></span>&#123;</span><br><span class="line">            Toast.makeText(getApplicationContext(), message, Toast.LENGTH_LONG).show();</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="4-2-3-test-html"><a href="#4-2-3-test-html" class="headerlink" title="4.2.3 test.html"></a>4.2.3 test.html</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">title</span>&gt;</span>一个简单的JavaScript例程<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">script</span> <span class="attr">language</span>=<span class="string">"javascript"</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span></span><br><span class="line"><span class="actionscript">            <span class="function"><span class="keyword">function</span> <span class="title">addAll</span><span class="params">(a,b,c)</span></span>&#123;</span></span><br><span class="line"><span class="actionscript">                <span class="keyword">return</span> a+b+c;</span></span><br><span class="line">            &#125;</span><br><span class="line"><span class="actionscript">            <span class="keyword">var</span> total = addAll(<span class="number">30</span>,<span class="number">40</span>,<span class="number">50</span>);</span></span><br><span class="line"><span class="actionscript">            <span class="keyword">var</span> str = <span class="string">"Ran 5 hours,&lt;br&gt; finally finished the "</span>;</span></span><br><span class="line"><span class="handlebars"><span class="xml">            document.write("<span class="tag">&lt;<span class="name">html</span>&gt;</span><span class="tag">&lt;<span class="name">B</span>&gt;</span> "+ str + total + " km! <span class="tag">&lt;/<span class="name">B</span>&gt;</span><span class="tag">&lt;/<span class="name">html</span>&gt;</span>");</span></span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="4-3-ex6-3"><a href="#4-3-ex6-3" class="headerlink" title="4.3 ex6_3"></a>4.3 ex6_3</h3><h4 id="4-3-1-activity-main-xml"><a href="#4-3-1-activity-main-xml" class="headerlink" title="4.3.1 activity_main.xml"></a>4.3.1 activity_main.xml</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">WebView</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">"Hello World!"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">"@+id/webView1"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="4-3-2-MainActivity-java"><a href="#4-3-2-MainActivity-java" class="headerlink" title="4.3.2 MainActivity.java"></a>4.3.2 MainActivity.java</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> zhj.com.ex6_3;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.app.Activity;</span><br><span class="line"><span class="keyword">import</span> android.os.Bundle;</span><br><span class="line"><span class="keyword">import</span> android.os.Handler;</span><br><span class="line"><span class="keyword">import</span> android.webkit.JavascriptInterface;</span><br><span class="line"><span class="keyword">import</span> android.webkit.JsResult;</span><br><span class="line"><span class="keyword">import</span> android.webkit.WebChromeClient;</span><br><span class="line"><span class="keyword">import</span> android.webkit.WebSettings;</span><br><span class="line"><span class="keyword">import</span> android.webkit.WebView;</span><br><span class="line"><span class="keyword">import</span> android.widget.Toast;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> <span class="keyword">extends</span> <span class="title">Activity</span> </span>&#123;</span><br><span class="line">    WebView webView;</span><br><span class="line">    Handler handler = <span class="keyword">new</span> Handler();</span><br><span class="line">    MWebChromeClient mWebChromeClient;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_main);</span><br><span class="line">        webView = (WebView)findViewById(R.id.webView1);</span><br><span class="line">        WebSettings webSettings = webView.getSettings();</span><br><span class="line">        webSettings.setAllowFileAccess(<span class="keyword">true</span>);</span><br><span class="line">        webSettings.setJavaScriptEnabled(<span class="keyword">true</span>);</span><br><span class="line">        webSettings.setBuiltInZoomControls(<span class="keyword">true</span>);</span><br><span class="line">        webSettings.setDefaultFontSize(<span class="number">24</span>);</span><br><span class="line">        MObject mObject = <span class="keyword">new</span> MObject();</span><br><span class="line">        webView.addJavascriptInterface(mObject, <span class="string">"test"</span>);</span><br><span class="line">        mWebChromeClient = <span class="keyword">new</span> MWebChromeClient();</span><br><span class="line">        webView.setWebChromeClient(mWebChromeClient);</span><br><span class="line">        webView.loadUrl(<span class="string">"file:///android_asset/test.html"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">MObject</span> <span class="keyword">extends</span> <span class="title">Object</span></span>&#123;</span><br><span class="line">        <span class="meta">@JavascriptInterface</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">android_show</span><span class="params">()</span></span>&#123;</span><br><span class="line">            handler.post(<span class="keyword">new</span> Runnable() &#123;</span><br><span class="line">                <span class="meta">@Override</span></span><br><span class="line">                <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">                    System.out.println(<span class="string">"提示：使用了多线程的run()方法!!"</span>);</span><br><span class="line">                    webView.loadUrl(<span class="string">"javascript: show_alert()"</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">MWebChromeClient</span> <span class="keyword">extends</span> <span class="title">WebChromeClient</span></span>&#123;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">onJsAlert</span><span class="params">(WebView view, String url, String message, JsResult result)</span> </span>&#123;</span><br><span class="line">            Toast.makeText(getApplicationContext(), message, Toast.LENGTH_LONG).show();</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="4-3-3-test-html"><a href="#4-3-3-test-html" class="headerlink" title="4.3.3 test.html"></a>4.3.3 test.html</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>JavaScript与Android交互<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="function"><span class="keyword">function</span> <span class="title">show_alert</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> a = <span class="built_in">document</span>.getElementById(<span class="string">"text"</span>).value;</span></span><br><span class="line"><span class="actionscript">        alert(<span class="string">"Hello "</span> + a);</span></span><br><span class="line">        &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">""</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">id</span>=<span class="string">"text"</span> <span class="attr">value</span>=<span class="string">""</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">id</span>=<span class="string">"button"</span> <span class="attr">onclick</span>=<span class="string">"window.test.android_show()"</span> <span class="attr">value</span>=<span class="string">"call Android"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="五、实验总结"><a href="#五、实验总结" class="headerlink" title="五、实验总结"></a>五、实验总结</h2><p>这次安卓实验不太顺利，在例题6_2上花了一些时间，但最后问题都解决了。通过这次实验我意识到，只有把每个细节都搞明白，才能更好地避免错误的发生。虽然这次实验中出现了很多问题，但通过解决问题，我也收获了很多编程方面的知识。</p><p>在Android编程方面，主要掌握了以下知识：</p><ol><li>WebView对象的基本功能</li><li>调用本地HTML网页文件的JavaScript脚本</li><li>文档流写入的基本操作</li><li>使用Android操纵JavaScript对话框</li></ol><h2 id="六、部分参考资料"><a href="#六、部分参考资料" class="headerlink" title="六、部分参考资料"></a>六、部分参考资料</h2><ol><li><a href="https://www.jianshu.com/p/01e5d4fa1c79" target="_blank" rel="noopener">Android与JS交互的细节问题</a></li><li><a href="https://www.jianshu.com/p/3c94ae673e2a" target="_blank" rel="noopener">Android：这是一份全面 &amp; 详细的Webview使用攻略</a></li><li><a href="https://www.jianshu.com/p/345f4d8a5cfa" target="_blank" rel="noopener">最全面总结 Android WebView与 JS 的交互方式</a></li><li><a href="https://www.jianshu.com/p/3a345d27cd42" target="_blank" rel="noopener">你不知道的 Android WebView 使用漏洞</a></li><li><a href="https://www.jianshu.com/p/01cb2f52c0b0" target="_blank" rel="noopener">Android调用js的坑</a></li><li><a href="https://75team.com/post/android-webview-and-js.html" target="_blank" rel="noopener">前端WebView指南之Android交互</a></li><li><a href="https://www.cnblogs.com/lichenwei/p/3959345.html" target="_blank" rel="noopener">安卓开发笔记——WebView组件</a></li><li><a href="https://blog.csdn.net/qq_34986769/article/details/52160532" target="_blank" rel="noopener">document.write的用处!</a></li><li><a href="https://www.cnblogs.com/androidsj/p/6414891.html" target="_blank" rel="noopener">124、@JavascriptInterface</a></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;实验报告&lt;/p&gt;
&lt;p&gt;课程名称 Android应用编程实验&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;实验名称：网页应用-WebView&lt;br&gt;实验目的：学习WebView的相关功能&lt;br&gt;实验仪器设备：电脑、Android Studio、Android手机&lt;br&gt;实验内容：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;1.应用WebView对象浏览网页&lt;br&gt;2.调用本地HTML网页文件的JavaScript&lt;br&gt;3.用Android程序操纵JavaScript对话框&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
    
      <category term="实验报告" scheme="https://zhj0125.github.io/tags/%E5%AE%9E%E9%AA%8C%E6%8A%A5%E5%91%8A/"/>
    
      <category term="Android" scheme="https://zhj0125.github.io/tags/Android/"/>
    
      <category term="WebView" scheme="https://zhj0125.github.io/tags/WebView/"/>
    
  </entry>
  
</feed>
